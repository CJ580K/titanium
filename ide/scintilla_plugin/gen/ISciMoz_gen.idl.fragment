	const long INVALID_POSITION = -1;
	void addStyledText(in long length, in string c);
	void clearAll();
	void clearDocumentStyle();
	long getCharAt(in long pos);
	long getStyleAt(in long pos);
	void redo();
	void setSavePoint();
	boolean canRedo();
	long markerLineFromHandle(in long handle);
	void markerDeleteHandle(in long handle);
	attribute boolean undoCollection;
	const long SCWS_INVISIBLE = 0;
	const long SCWS_VISIBLEALWAYS = 1;
	const long SCWS_VISIBLEAFTERINDENT = 2;
	attribute long viewWS;
	long positionFromPoint(in long x, in long y);
	long positionFromPointClose(in long x, in long y);
	readonly attribute long endStyled;
	const long SC_EOL_CRLF = 0;
	const long SC_EOL_CR = 1;
	const long SC_EOL_LF = 2;
	void convertEOLs(in long eolMode);
	attribute long eOLMode;
	attribute boolean bufferedDraw;
	attribute long tabWidth;
	const long SC_CP_UTF8 = 65001;
	const long SC_CP_DBCS = 1;
	const long MARKER_MAX = 31;
	const long SC_MARK_CIRCLE = 0;
	const long SC_MARK_ROUNDRECT = 1;
	const long SC_MARK_ARROW = 2;
	const long SC_MARK_SMALLRECT = 3;
	const long SC_MARK_SHORTARROW = 4;
	const long SC_MARK_EMPTY = 5;
	const long SC_MARK_ARROWDOWN = 6;
	const long SC_MARK_MINUS = 7;
	const long SC_MARK_PLUS = 8;
	const long SC_MARK_VLINE = 9;
	const long SC_MARK_LCORNER = 10;
	const long SC_MARK_TCORNER = 11;
	const long SC_MARK_BOXPLUS = 12;
	const long SC_MARK_BOXPLUSCONNECTED = 13;
	const long SC_MARK_BOXMINUS = 14;
	const long SC_MARK_BOXMINUSCONNECTED = 15;
	const long SC_MARK_LCORNERCURVE = 16;
	const long SC_MARK_TCORNERCURVE = 17;
	const long SC_MARK_CIRCLEPLUS = 18;
	const long SC_MARK_CIRCLEPLUSCONNECTED = 19;
	const long SC_MARK_CIRCLEMINUS = 20;
	const long SC_MARK_CIRCLEMINUSCONNECTED = 21;
	const long SC_MARK_BACKGROUND = 22;
	const long SC_MARK_DOTDOTDOT = 23;
	const long SC_MARK_ARROWS = 24;
	const long SC_MARK_PIXMAP = 25;
	const long SC_MARK_FULLRECT = 26;
	const long SC_MARK_LEFTRECT = 27;
	const long SC_MARK_CHARACTER = 10000;
	const long SC_MARKNUM_FOLDEREND = 25;
	const long SC_MARKNUM_FOLDEROPENMID = 26;
	const long SC_MARKNUM_FOLDERMIDTAIL = 27;
	const long SC_MARKNUM_FOLDERTAIL = 28;
	const long SC_MARKNUM_FOLDERSUB = 29;
	const long SC_MARKNUM_FOLDER = 30;
	const long SC_MARKNUM_FOLDEROPEN = 31;
	const long SC_MASK_FOLDERS = 0xFE000000;
	void markerDefine(in long markerNumber, in long markerSymbol);
	void markerSetFore(in long markerNumber, in long fore);
	void markerSetBack(in long markerNumber, in long back);
	void markerDelete(in long line, in long markerNumber);
	void markerDeleteAll(in long markerNumber);
	long markerGet(in long line);
	long markerPrevious(in long lineStart, in long markerMask);
	void markerDefinePixmap(in long markerNumber, in wstring pixmap);
	void markerAddSet(in long line, in long set);
	void markerSetAlpha(in long markerNumber, in long alpha);
	const long SC_MARGIN_SYMBOL = 0;
	const long SC_MARGIN_NUMBER = 1;
	const long SC_MARGIN_BACK = 2;
	const long SC_MARGIN_FORE = 3;
	void setMarginTypeN(in long margin, in long marginType);
	long getMarginTypeN(in long margin);
	void setMarginWidthN(in long margin, in long pixelWidth);
	long getMarginWidthN(in long margin);
	void setMarginMaskN(in long margin, in long mask);
	long getMarginMaskN(in long margin);
	void setMarginSensitiveN(in long margin, in boolean sensitive);
	boolean getMarginSensitiveN(in long margin);
	const long STYLE_DEFAULT = 32;
	const long STYLE_LINENUMBER = 33;
	const long STYLE_BRACELIGHT = 34;
	const long STYLE_BRACEBAD = 35;
	const long STYLE_CONTROLCHAR = 36;
	const long STYLE_INDENTGUIDE = 37;
	const long STYLE_CALLTIP = 38;
	const long STYLE_LASTPREDEFINED = 39;
	const long STYLE_MAX = 255;
	const long SC_CHARSET_ANSI = 0;
	const long SC_CHARSET_DEFAULT = 1;
	const long SC_CHARSET_BALTIC = 186;
	const long SC_CHARSET_CHINESEBIG5 = 136;
	const long SC_CHARSET_EASTEUROPE = 238;
	const long SC_CHARSET_GB2312 = 134;
	const long SC_CHARSET_GREEK = 161;
	const long SC_CHARSET_HANGUL = 129;
	const long SC_CHARSET_MAC = 77;
	const long SC_CHARSET_OEM = 255;
	const long SC_CHARSET_RUSSIAN = 204;
	const long SC_CHARSET_CYRILLIC = 1251;
	const long SC_CHARSET_SHIFTJIS = 128;
	const long SC_CHARSET_SYMBOL = 2;
	const long SC_CHARSET_TURKISH = 162;
	const long SC_CHARSET_JOHAB = 130;
	const long SC_CHARSET_HEBREW = 177;
	const long SC_CHARSET_ARABIC = 178;
	const long SC_CHARSET_VIETNAMESE = 163;
	const long SC_CHARSET_THAI = 222;
	const long SC_CHARSET_8859_15 = 1000;
	void styleClearAll();
	void styleSetBack(in long style, in long back);
	void styleSetBold(in long style, in boolean bold);
	void styleSetItalic(in long style, in boolean italic);
	void styleSetSize(in long style, in long sizePoints);
	void styleSetFont(in long style, in wstring fontName);
	void styleSetEOLFilled(in long style, in boolean filled);
	void styleResetDefault();
	void styleSetUnderline(in long style, in boolean underline);
	const long SC_CASE_MIXED = 0;
	const long SC_CASE_UPPER = 1;
	const long SC_CASE_LOWER = 2;
	long styleGetFore(in long style);
	long styleGetBack(in long style);
	boolean styleGetBold(in long style);
	boolean styleGetItalic(in long style);
	long styleGetSize(in long style);
	long styleGetFont(in long style, out wstring fontName);
	boolean styleGetEOLFilled(in long style);
	boolean styleGetUnderline(in long style);
	long styleGetCase(in long style);
	long styleGetCharacterSet(in long style);
	boolean styleGetVisible(in long style);
	boolean styleGetChangeable(in long style);
	boolean styleGetHotSpot(in long style);
	void styleSetCase(in long style, in long caseForce);
	void styleSetCharacterSet(in long style, in long characterSet);
	void styleSetHotSpot(in long style, in boolean hotspot);
	void setSelFore(in boolean useSetting, in long fore);
	void setSelBack(in boolean useSetting, in long back);
	attribute long selAlpha;
	attribute boolean selEOLFilled;
	void clearAllCmdKeys();
	void setStylingEx(in long length, in wstring styles);
	void styleSetVisible(in long style, in boolean visible);
	attribute long caretPeriod;
	void setWordChars(in wstring characters);
	void beginUndoAction();
	void endUndoAction();
	const long INDIC_PLAIN = 0;
	const long INDIC_SQUIGGLE = 1;
	const long INDIC_TT = 2;
	const long INDIC_DIAGONAL = 3;
	const long INDIC_STRIKE = 4;
	const long INDIC_HIDDEN = 5;
	const long INDIC_BOX = 6;
	const long INDIC_ROUNDBOX = 7;
	const long INDIC_MAX = 31;
	const long INDIC_CONTAINER = 8;
	const long INDIC0_MASK = 0x20;
	const long INDIC1_MASK = 0x40;
	const long INDIC2_MASK = 0x80;
	const long INDICS_MASK = 0xE0;
	void indicSetStyle(in long indic, in long style);
	long indicGetStyle(in long indic);
	void indicSetFore(in long indic, in long fore);
	long indicGetFore(in long indic);
	void indicSetUnder(in long indic, in boolean under);
	boolean indicGetUnder(in long indic);
	void setWhitespaceFore(in boolean useSetting, in long fore);
	void setWhitespaceBack(in boolean useSetting, in long back);
	attribute long styleBits;
	void setLineState(in long line, in long state);
	long getLineState(in long line);
	readonly attribute long maxLineState;
	attribute boolean caretLineVisible;
	attribute long caretLineBack;
	void styleSetChangeable(in long style, in boolean changeable);
	void autoCShow(in long lenEntered, in wstring itemList);
	void autoCCancel();
	boolean autoCActive();
	long autoCPosStart();
	void autoCComplete();
	void autoCStops(in wstring characterSet);
	attribute long autoCSeparator;
	void autoCSelect(in wstring text);
	attribute boolean autoCCancelAtStart;
	void autoCSetFillUps(in wstring characterSet);
	attribute boolean autoCChooseSingle;
	attribute boolean autoCIgnoreCase;
	void userListShow(in long listType, in wstring itemList);
	attribute boolean autoCAutoHide;
	attribute boolean autoCDropRestOfWord;
	void registerImage(in long type, in wstring xpmData);
	void clearRegisteredImages();
	attribute long autoCTypeSeparator;
	attribute long autoCMaxWidth;
	attribute long autoCMaxHeight;
	attribute long indent;
	attribute boolean useTabs;
	void setLineIndentation(in long line, in long indentSize);
	long getLineIndentation(in long line);
	long getLineIndentPosition(in long line);
	long getColumn(in long pos);
	attribute boolean hScrollBar;
	const long SC_IV_NONE = 0;
	const long SC_IV_REAL = 1;
	const long SC_IV_LOOKFORWARD = 2;
	const long SC_IV_LOOKBOTH = 3;
	attribute long indentationGuides;
	attribute long highlightGuide;
	long getLineEndPosition(in long line);
	attribute long codePage;
	attribute long caretFore;
	attribute boolean usePalette;
	attribute long printMagnification;
	const long SC_PRINT_NORMAL = 0;
	const long SC_PRINT_INVERTLIGHT = 1;
	const long SC_PRINT_BLACKONWHITE = 2;
	const long SC_PRINT_COLOURONWHITE = 3;
	const long SC_PRINT_COLOURONWHITEDEFAULTBG = 4;
	attribute long printColourMode;
	const long SCFIND_WHOLEWORD = 2;
	const long SCFIND_MATCHCASE = 4;
	const long SCFIND_WORDSTART = 0x00100000;
	const long SCFIND_REGEXP = 0x00200000;
	const long SCFIND_POSIX = 0x00400000;
	//long formatRange(in boolean draw, formatrange fr);
	readonly attribute long firstVisibleLine;
	readonly attribute long lineCount;
	attribute long marginLeft;
	attribute long marginRight;
	readonly attribute boolean modify;
	void setSel(in long start, in long end);
	long pointXFromPosition(in long pos);
	long pointYFromPosition(in long pos);
	long lineFromPosition(in long pos);
	long positionFromLine(in long line);
	void lineScroll(in long columns, in long lines);
	void scrollCaret();
	boolean canPaste();
	boolean canUndo();
	void emptyUndoBuffer();
	void undo();
	void cut();
	void copy();
	void paste();
	void clear();
	readonly attribute long textLength;
	readonly attribute long directFunction;
	readonly attribute long directPointer;
	attribute boolean overtype;
	attribute long caretWidth;
	attribute long targetStart;
	attribute long targetEnd;
	long replaceTarget(in long length, in wstring text);
	long replaceTargetRE(in long length, in wstring text);
	long searchInTarget(in long length, in wstring text);
	attribute long searchFlags;
	void callTipShow(in long pos, in wstring definition);
	void callTipCancel();
	boolean callTipActive();
	long callTipPosStart();
	void callTipSetHlt(in long start, in long end);
	void callTipSetBack(in long back);
	void callTipSetFore(in long fore);
	void callTipSetForeHlt(in long fore);
	void callTipUseStyle(in long tabSize);
	long visibleFromDocLine(in long line);
	long docLineFromVisible(in long lineDisplay);
	long wrapCount(in long line);
	const long SC_FOLDLEVELBASE = 0x400;
	const long SC_FOLDLEVELWHITEFLAG = 0x1000;
	const long SC_FOLDLEVELHEADERFLAG = 0x2000;
	const long SC_FOLDLEVELBOXHEADERFLAG = 0x4000;
	const long SC_FOLDLEVELBOXFOOTERFLAG = 0x8000;
	const long SC_FOLDLEVELCONTRACTED = 0x10000;
	const long SC_FOLDLEVELUNINDENT = 0x20000;
	const long SC_FOLDLEVELNUMBERMASK = 0x0FFF;
	void setFoldLevel(in long line, in long level);
	long getFoldLevel(in long line);
	long getLastChild(in long line, in long level);
	long getFoldParent(in long line);
	void showLines(in long lineStart, in long lineEnd);
	void hideLines(in long lineStart, in long lineEnd);
	boolean getLineVisible(in long line);
	void setFoldExpanded(in long line, in boolean expanded);
	boolean getFoldExpanded(in long line);
	void toggleFold(in long line);
	void ensureVisible(in long line);
	const long SC_FOLDFLAG_LINEBEFORE_EXPANDED = 0x0002;
	const long SC_FOLDFLAG_LINEBEFORE_CONTRACTED = 0x0004;
	const long SC_FOLDFLAG_LINEAFTER_EXPANDED = 0x0008;
	const long SC_FOLDFLAG_LINEAFTER_CONTRACTED = 0x0010;
	const long SC_FOLDFLAG_LEVELNUMBERS = 0x0040;
	const long SC_FOLDFLAG_BOX = 0x0001;
	void setFoldFlags(in long flags);
	void ensureVisibleEnforcePolicy(in long line);
	attribute boolean tabIndents;
	attribute boolean backSpaceUnIndents;
	const long SC_TIME_FOREVER = 10000000;
	attribute long mouseDwellTime;
	long wordStartPosition(in long pos, in boolean onlyWordCharacters);
	long wordEndPosition(in long pos, in boolean onlyWordCharacters);
	const long SC_WRAP_NONE = 0;
	const long SC_WRAP_WORD = 1;
	const long SC_WRAP_CHAR = 2;
	attribute long wrapMode;
	const long SC_WRAPVISUALFLAG_NONE = 0x0000;
	const long SC_WRAPVISUALFLAG_END = 0x0001;
	const long SC_WRAPVISUALFLAG_START = 0x0002;
	attribute long wrapVisualFlags;
	const long SC_WRAPVISUALFLAGLOC_DEFAULT = 0x0000;
	const long SC_WRAPVISUALFLAGLOC_END_BY_TEXT = 0x0001;
	const long SC_WRAPVISUALFLAGLOC_START_BY_TEXT = 0x0002;
	attribute long wrapVisualFlagsLocation;
	attribute long wrapStartIndent;
	const long SC_CACHE_NONE = 0;
	const long SC_CACHE_CARET = 1;
	const long SC_CACHE_PAGE = 2;
	const long SC_CACHE_DOCUMENT = 3;
	attribute long layoutCache;
	attribute boolean scrollWidthTracking;
	long textWidth(in long style, in wstring text);
	attribute boolean endAtLastLine;
	long textHeight(in long line);
	attribute boolean vScrollBar;
	void appendText(in long length, in wstring text);
	attribute boolean twoPhaseDraw;
	void targetFromSelection();
	void linesJoin();
	void linesSplit(in long pixelWidth);
	void setFoldMarginColour(in boolean useSetting, in long back);
	void setFoldMarginHiColour(in boolean useSetting, in long fore);
	void lineDown();
	void lineDownExtend();
	void lineUp();
	void lineUpExtend();
	void charLeft();
	void charLeftExtend();
	void charRight();
	void charRightExtend();
	void wordLeft();
	void wordLeftExtend();
	void wordRight();
	void wordRightExtend();
	void home();
	void homeExtend();
	void lineEnd();
	void lineEndExtend();
	void documentStart();
	void documentStartExtend();
	void documentEnd();
	void documentEndExtend();
	void pageUp();
	void pageUpExtend();
	void pageDown();
	void pageDownExtend();
	void editToggleOvertype();
	void cancel();
	void tab();
	void backTab();
	void formFeed();
	void vCHome();
	void vCHomeExtend();
	void zoomIn();
	void zoomOut();
	void delWordLeft();
	void delWordRight();
	void delWordRightEnd();
	void lineCut();
	void lineDelete();
	void lineTranspose();
	void lineDuplicate();
	void lowerCase();
	void upperCase();
	void lineScrollDown();
	void lineScrollUp();
	void deleteBackNotLine();
	void homeDisplay();
	void homeDisplayExtend();
	void lineEndDisplay();
	void lineEndDisplayExtend();
	void homeWrap();
	void homeWrapExtend();
	void lineEndWrap();
	void lineEndWrapExtend();
	void vCHomeWrap();
	void vCHomeWrapExtend();
	void lineCopy();
	void moveCaretInsideView();
	long lineLength(in long line);
	void braceHighlight(in long pos1, in long pos2);
	void braceBadLight(in long pos);
	long braceMatch(in long pos);
	attribute boolean viewEOL;
	attribute long docPointer;
	const long EDGE_NONE = 0;
	const long EDGE_LINE = 1;
	const long EDGE_BACKGROUND = 2;
	attribute long edgeColumn;
	attribute long edgeMode;
	attribute long edgeColour;
	void searchAnchor();
	long searchNext(in long flags, in wstring text);
	long searchPrev(in long flags, in wstring text);
	readonly attribute long linesOnScreen;
	void usePopUp(in boolean allowPopUp);
	readonly attribute boolean selectionIsRectangle;
	attribute long zoom;
	long createDocument();
	void addRefDocument(in long doc);
	void releaseDocument(in long doc);
	attribute long modEventMask;
	attribute boolean focus;
	attribute long status;
	attribute boolean mouseDownCaptures;
	const long SC_CURSORNORMAL = -1;
	const long SC_CURSORWAIT = 4;
	attribute long cursor;
	attribute long controlCharSymbol;
	void wordPartLeft();
	void wordPartLeftExtend();
	void wordPartRight();
	void wordPartRightExtend();
	const long VISIBLE_SLOP = 0x01;
	const long VISIBLE_STRICT = 0x04;
	void setVisiblePolicy(in long visiblePolicy, in long visibleSlop);
	void delLineLeft();
	void delLineRight();
	void chooseCaretX();
	void grabFocus();
	const long CARET_SLOP = 0x01;
	const long CARET_STRICT = 0x04;
	const long CARET_JUMPS = 0x10;
	const long CARET_EVEN = 0x08;
	void setXCaretPolicy(in long caretPolicy, in long caretSlop);
	void setYCaretPolicy(in long caretPolicy, in long caretSlop);
	attribute long printWrapMode;
	attribute long hotspotActiveFore;
	attribute long hotspotActiveBack;
	attribute boolean hotspotActiveUnderline;
	attribute boolean hotspotSingleLine;
	void paraDown();
	void paraDownExtend();
	void paraUp();
	void paraUpExtend();
	long positionBefore(in long pos);
	long positionAfter(in long pos);
	void copyRange(in long start, in long end);
	void copyText(in long length, in wstring text);
	const long SC_SEL_STREAM = 0;
	const long SC_SEL_RECTANGLE = 1;
	const long SC_SEL_LINES = 2;
	attribute long selectionMode;
	long getLineSelStartPosition(in long line);
	long getLineSelEndPosition(in long line);
	void lineDownRectExtend();
	void lineUpRectExtend();
	void charLeftRectExtend();
	void charRightRectExtend();
	void homeRectExtend();
	void vCHomeRectExtend();
	void lineEndRectExtend();
	void pageUpRectExtend();
	void pageDownRectExtend();
	void stutteredPageUp();
	void stutteredPageUpExtend();
	void stutteredPageDown();
	void stutteredPageDownExtend();
	void wordLeftEnd();
	void wordLeftEndExtend();
	void wordRightEnd();
	void wordRightEndExtend();
	void setWhitespaceChars(in wstring characters);
	void setCharsDefault();
	long autoCGetCurrent();
	void allocate(in long bytes);
	long targetAsUTF8(out wstring s);
	void setLengthForEncode(in long bytes);
	long encodedFromUTF8(in wstring utf8, out wstring encoded);
	long findColumn(in long line, in long column);
	attribute boolean caretSticky;
	void toggleCaretSticky();
	attribute boolean pasteConvertEndings;
	void selectionDuplicate();
	const long SC_ALPHA_TRANSPARENT = 0;
	const long SC_ALPHA_OPAQUE = 255;
	const long SC_ALPHA_NOALPHA = 256;
	attribute long caretLineBackAlpha;
	const long CARETSTYLE_INVISIBLE = 0;
	const long CARETSTYLE_LINE = 1;
	const long CARETSTYLE_BLOCK = 2;
	attribute long caretStyle;
	attribute long indicatorCurrent;
	attribute long indicatorValue;
	void indicatorFillRange(in long position, in long fillLength);
	void indicatorClearRange(in long position, in long clearLength);
	long indicatorAllOnFor(in long position);
	long indicatorValueAt(in long indicator, in long position);
	long indicatorStart(in long indicator, in long position);
	long indicatorEnd(in long indicator, in long position);
	attribute long positionCache;
	void copyAllowLine();
	readonly attribute long characterPointer;
	attribute boolean keysUnicode;
	void startRecord();
	void stopRecord();
	attribute long lexer;
	void colourise(in long start, in long end);
	void setProperty(in wstring key, in wstring value);
	const long KEYWORDSET_MAX = 8;
	void setKeyWords(in long keywordSet, in wstring keyWords);
	void setLexerLanguage(in wstring language);
	void loadLexerLibrary(in wstring path);
	long getProperty(in wstring key, out wstring buf);
	long getPropertyExpanded(in wstring key, out wstring buf);
	long getPropertyInt(in wstring key);
	readonly attribute long styleBitsNeeded;
	const long SC_MOD_INSERTTEXT = 0x1;
	const long SC_MOD_DELETETEXT = 0x2;
	const long SC_MOD_CHANGESTYLE = 0x4;
	const long SC_MOD_CHANGEFOLD = 0x8;
	const long SC_PERFORMED_USER = 0x10;
	const long SC_PERFORMED_UNDO = 0x20;
	const long SC_PERFORMED_REDO = 0x40;
	const long SC_MULTISTEPUNDOREDO = 0x80;
	const long SC_LASTSTEPINUNDOREDO = 0x100;
	const long SC_MOD_CHANGEMARKER = 0x200;
	const long SC_MOD_BEFOREINSERT = 0x400;
	const long SC_MOD_BEFOREDELETE = 0x800;
	const long SC_MULTILINEUNDOREDO = 0x1000;
	const long SC_STARTACTION = 0x2000;
	const long SC_MOD_CHANGEINDICATOR = 0x4000;
	const long SC_MOD_CHANGELINESTATE = 0x8000;
	const long SC_MODEVENTMASKALL = 0xFFFF;
	const long SCEN_CHANGE = 768;
	const long SCEN_SETFOCUS = 512;
	const long SCEN_KILLFOCUS = 256;
	const long SCK_DOWN = 300;
	const long SCK_UP = 301;
	const long SCK_LEFT = 302;
	const long SCK_RIGHT = 303;
	const long SCK_HOME = 304;
	const long SCK_END = 305;
	const long SCK_PRIOR = 306;
	const long SCK_NEXT = 307;
	const long SCK_DELETE = 308;
	const long SCK_INSERT = 309;
	const long SCK_ESCAPE = 7;
	const long SCK_BACK = 8;
	const long SCK_TAB = 9;
	const long SCK_RETURN = 13;
	const long SCK_ADD = 310;
	const long SCK_SUBTRACT = 311;
	const long SCK_DIVIDE = 312;
	const long SCK_WIN = 313;
	const long SCK_RWIN = 314;
	const long SCK_MENU = 315;
	const long SCMOD_NORM = 0;
	const long SCMOD_SHIFT = 1;
	const long SCMOD_CTRL = 2;
	const long SCMOD_ALT = 4;
	const long SCLEX_CONTAINER = 0;
	const long SCLEX_NULL = 1;
	const long SCLEX_PYTHON = 2;
	const long SCLEX_CPP = 3;
	const long SCLEX_HTML = 4;
	const long SCLEX_XML = 5;
	const long SCLEX_PERL = 6;
	const long SCLEX_SQL = 7;
	const long SCLEX_VB = 8;
	const long SCLEX_PROPERTIES = 9;
	const long SCLEX_ERRORLIST = 10;
	const long SCLEX_MAKEFILE = 11;
	const long SCLEX_BATCH = 12;
	const long SCLEX_XCODE = 13;
	const long SCLEX_LATEX = 14;
	const long SCLEX_LUA = 15;
	const long SCLEX_DIFF = 16;
	const long SCLEX_CONF = 17;
	const long SCLEX_PASCAL = 18;
	const long SCLEX_AVE = 19;
	const long SCLEX_ADA = 20;
	const long SCLEX_LISP = 21;
	const long SCLEX_RUBY = 22;
	const long SCLEX_EIFFEL = 23;
	const long SCLEX_EIFFELKW = 24;
	const long SCLEX_TCL = 25;
	const long SCLEX_NNCRONTAB = 26;
	const long SCLEX_BULLANT = 27;
	const long SCLEX_VBSCRIPT = 28;
	const long SCLEX_BAAN = 31;
	const long SCLEX_MATLAB = 32;
	const long SCLEX_SCRIPTOL = 33;
	const long SCLEX_ASM = 34;
	const long SCLEX_CPPNOCASE = 35;
	const long SCLEX_FORTRAN = 36;
	const long SCLEX_F77 = 37;
	const long SCLEX_CSS = 38;
	const long SCLEX_POV = 39;
	const long SCLEX_LOUT = 40;
	const long SCLEX_ESCRIPT = 41;
	const long SCLEX_PS = 42;
	const long SCLEX_NSIS = 43;
	const long SCLEX_MMIXAL = 44;
	const long SCLEX_CLW = 45;
	const long SCLEX_CLWNOCASE = 46;
	const long SCLEX_LOT = 47;
	const long SCLEX_YAML = 48;
	const long SCLEX_TEX = 49;
	const long SCLEX_METAPOST = 50;
	const long SCLEX_POWERBASIC = 51;
	const long SCLEX_FORTH = 52;
	const long SCLEX_ERLANG = 53;
	const long SCLEX_OCTAVE = 54;
	const long SCLEX_MSSQL = 55;
	const long SCLEX_VERILOG = 56;
	const long SCLEX_KIX = 57;
	const long SCLEX_GUI4CLI = 58;
	const long SCLEX_SPECMAN = 59;
	const long SCLEX_AU3 = 60;
	const long SCLEX_APDL = 61;
	const long SCLEX_BASH = 62;
	const long SCLEX_ASN1 = 63;
	const long SCLEX_VHDL = 64;
	const long SCLEX_CAML = 65;
	const long SCLEX_BLITZBASIC = 66;
	const long SCLEX_PUREBASIC = 67;
	const long SCLEX_HASKELL = 68;
	const long SCLEX_PHPSCRIPT = 69;
	const long SCLEX_TADS3 = 70;
	const long SCLEX_REBOL = 71;
	const long SCLEX_SMALLTALK = 72;
	const long SCLEX_FLAGSHIP = 73;
	const long SCLEX_CSOUND = 74;
	const long SCLEX_FREEBASIC = 75;
	const long SCLEX_INNOSETUP = 76;
	const long SCLEX_OPAL = 77;
	const long SCLEX_SPICE = 78;
	const long SCLEX_D = 79;
	const long SCLEX_CMAKE = 80;
	const long SCLEX_GAP = 81;
	const long SCLEX_PLM = 82;
	const long SCLEX_PROGRESS = 83;
	const long SCLEX_ABAQUS = 84;
	const long SCLEX_ASYMPTOTE = 85;
	const long SCLEX_R = 86;
	const long SCLEX_MAGIK = 87;
	const long SCLEX_POWERSHELL = 88;
	const long SCLEX_AUTOMATIC = 1000;
	const long SCE_P_DEFAULT = 0;
	const long SCE_P_COMMENTLINE = 1;
	const long SCE_P_NUMBER = 2;
	const long SCE_P_STRING = 3;
	const long SCE_P_CHARACTER = 4;
	const long SCE_P_WORD = 5;
	const long SCE_P_TRIPLE = 6;
	const long SCE_P_TRIPLEDOUBLE = 7;
	const long SCE_P_CLASSNAME = 8;
	const long SCE_P_DEFNAME = 9;
	const long SCE_P_OPERATOR = 10;
	const long SCE_P_IDENTIFIER = 11;
	const long SCE_P_COMMENTBLOCK = 12;
	const long SCE_P_STRINGEOL = 13;
	const long SCE_P_WORD2 = 14;
	const long SCE_P_DECORATOR = 15;
	const long SCE_C_DEFAULT = 0;
	const long SCE_C_COMMENT = 1;
	const long SCE_C_COMMENTLINE = 2;
	const long SCE_C_COMMENTDOC = 3;
	const long SCE_C_NUMBER = 4;
	const long SCE_C_WORD = 5;
	const long SCE_C_STRING = 6;
	const long SCE_C_CHARACTER = 7;
	const long SCE_C_UUID = 8;
	const long SCE_C_PREPROCESSOR = 9;
	const long SCE_C_OPERATOR = 10;
	const long SCE_C_IDENTIFIER = 11;
	const long SCE_C_STRINGEOL = 12;
	const long SCE_C_VERBATIM = 13;
	const long SCE_C_REGEX = 14;
	const long SCE_C_COMMENTLINEDOC = 15;
	const long SCE_C_WORD2 = 16;
	const long SCE_C_COMMENTDOCKEYWORD = 17;
	const long SCE_C_COMMENTDOCKEYWORDERROR = 18;
	const long SCE_C_GLOBALCLASS = 19;
	const long SCE_D_DEFAULT = 0;
	const long SCE_D_COMMENT = 1;
	const long SCE_D_COMMENTLINE = 2;
	const long SCE_D_COMMENTDOC = 3;
	const long SCE_D_COMMENTNESTED = 4;
	const long SCE_D_NUMBER = 5;
	const long SCE_D_WORD = 6;
	const long SCE_D_WORD2 = 7;
	const long SCE_D_WORD3 = 8;
	const long SCE_D_TYPEDEF = 9;
	const long SCE_D_STRING = 10;
	const long SCE_D_STRINGEOL = 11;
	const long SCE_D_CHARACTER = 12;
	const long SCE_D_OPERATOR = 13;
	const long SCE_D_IDENTIFIER = 14;
	const long SCE_D_COMMENTLINEDOC = 15;
	const long SCE_D_COMMENTDOCKEYWORD = 16;
	const long SCE_D_COMMENTDOCKEYWORDERROR = 17;
	const long SCE_TCL_DEFAULT = 0;
	const long SCE_TCL_COMMENT = 1;
	const long SCE_TCL_COMMENTLINE = 2;
	const long SCE_TCL_NUMBER = 3;
	const long SCE_TCL_WORD_IN_QUOTE = 4;
	const long SCE_TCL_IN_QUOTE = 5;
	const long SCE_TCL_OPERATOR = 6;
	const long SCE_TCL_IDENTIFIER = 7;
	const long SCE_TCL_SUBSTITUTION = 8;
	const long SCE_TCL_SUB_BRACE = 9;
	const long SCE_TCL_MODIFIER = 10;
	const long SCE_TCL_EXPAND = 11;
	const long SCE_TCL_WORD = 12;
	const long SCE_TCL_WORD2 = 13;
	const long SCE_TCL_WORD3 = 14;
	const long SCE_TCL_WORD4 = 15;
	const long SCE_TCL_WORD5 = 16;
	const long SCE_TCL_WORD6 = 17;
	const long SCE_TCL_WORD7 = 18;
	const long SCE_TCL_WORD8 = 19;
	const long SCE_TCL_COMMENT_BOX = 20;
	const long SCE_TCL_BLOCK_COMMENT = 21;
	const long SCE_H_DEFAULT = 0;
	const long SCE_H_TAG = 1;
	const long SCE_H_TAGUNKNOWN = 2;
	const long SCE_H_ATTRIBUTE = 3;
	const long SCE_H_ATTRIBUTEUNKNOWN = 4;
	const long SCE_H_NUMBER = 5;
	const long SCE_H_DOUBLESTRING = 6;
	const long SCE_H_SINGLESTRING = 7;
	const long SCE_H_OTHER = 8;
	const long SCE_H_COMMENT = 9;
	const long SCE_H_ENTITY = 10;
	const long SCE_H_TAGEND = 11;
	const long SCE_H_XMLSTART = 12;
	const long SCE_H_XMLEND = 13;
	const long SCE_H_SCRIPT = 14;
	const long SCE_H_ASP = 15;
	const long SCE_H_ASPAT = 16;
	const long SCE_H_CDATA = 17;
	const long SCE_H_QUESTION = 18;
	const long SCE_H_VALUE = 19;
	const long SCE_H_XCCOMMENT = 20;
	const long SCE_H_SGML_DEFAULT = 21;
	const long SCE_H_SGML_COMMAND = 22;
	const long SCE_H_SGML_1ST_PARAM = 23;
	const long SCE_H_SGML_DOUBLESTRING = 24;
	const long SCE_H_SGML_SIMPLESTRING = 25;
	const long SCE_H_SGML_ERROR = 26;
	const long SCE_H_SGML_SPECIAL = 27;
	const long SCE_H_SGML_ENTITY = 28;
	const long SCE_H_SGML_COMMENT = 29;
	const long SCE_H_SGML_1ST_PARAM_COMMENT = 30;
	const long SCE_H_SGML_BLOCK_DEFAULT = 31;
	const long SCE_HJ_START = 40;
	const long SCE_HJ_DEFAULT = 41;
	const long SCE_HJ_COMMENT = 42;
	const long SCE_HJ_COMMENTLINE = 43;
	const long SCE_HJ_COMMENTDOC = 44;
	const long SCE_HJ_NUMBER = 45;
	const long SCE_HJ_WORD = 46;
	const long SCE_HJ_KEYWORD = 47;
	const long SCE_HJ_DOUBLESTRING = 48;
	const long SCE_HJ_SINGLESTRING = 49;
	const long SCE_HJ_SYMBOLS = 50;
	const long SCE_HJ_STRINGEOL = 51;
	const long SCE_HJ_REGEX = 52;
	const long SCE_HJA_START = 55;
	const long SCE_HJA_DEFAULT = 56;
	const long SCE_HJA_COMMENT = 57;
	const long SCE_HJA_COMMENTLINE = 58;
	const long SCE_HJA_COMMENTDOC = 59;
	const long SCE_HJA_NUMBER = 60;
	const long SCE_HJA_WORD = 61;
	const long SCE_HJA_KEYWORD = 62;
	const long SCE_HJA_DOUBLESTRING = 63;
	const long SCE_HJA_SINGLESTRING = 64;
	const long SCE_HJA_SYMBOLS = 65;
	const long SCE_HJA_STRINGEOL = 66;
	const long SCE_HJA_REGEX = 67;
	const long SCE_HB_START = 70;
	const long SCE_HB_DEFAULT = 71;
	const long SCE_HB_COMMENTLINE = 72;
	const long SCE_HB_NUMBER = 73;
	const long SCE_HB_WORD = 74;
	const long SCE_HB_STRING = 75;
	const long SCE_HB_IDENTIFIER = 76;
	const long SCE_HB_STRINGEOL = 77;
	const long SCE_HBA_START = 80;
	const long SCE_HBA_DEFAULT = 81;
	const long SCE_HBA_COMMENTLINE = 82;
	const long SCE_HBA_NUMBER = 83;
	const long SCE_HBA_WORD = 84;
	const long SCE_HBA_STRING = 85;
	const long SCE_HBA_IDENTIFIER = 86;
	const long SCE_HBA_STRINGEOL = 87;
	const long SCE_HP_START = 90;
	const long SCE_HP_DEFAULT = 91;
	const long SCE_HP_COMMENTLINE = 92;
	const long SCE_HP_NUMBER = 93;
	const long SCE_HP_STRING = 94;
	const long SCE_HP_CHARACTER = 95;
	const long SCE_HP_WORD = 96;
	const long SCE_HP_TRIPLE = 97;
	const long SCE_HP_TRIPLEDOUBLE = 98;
	const long SCE_HP_CLASSNAME = 99;
	const long SCE_HP_DEFNAME = 100;
	const long SCE_HP_OPERATOR = 101;
	const long SCE_HP_IDENTIFIER = 102;
	const long SCE_HPHP_COMPLEX_VARIABLE = 104;
	const long SCE_HPA_START = 105;
	const long SCE_HPA_DEFAULT = 106;
	const long SCE_HPA_COMMENTLINE = 107;
	const long SCE_HPA_NUMBER = 108;
	const long SCE_HPA_STRING = 109;
	const long SCE_HPA_CHARACTER = 110;
	const long SCE_HPA_WORD = 111;
	const long SCE_HPA_TRIPLE = 112;
	const long SCE_HPA_TRIPLEDOUBLE = 113;
	const long SCE_HPA_CLASSNAME = 114;
	const long SCE_HPA_DEFNAME = 115;
	const long SCE_HPA_OPERATOR = 116;
	const long SCE_HPA_IDENTIFIER = 117;
	const long SCE_HPHP_DEFAULT = 118;
	const long SCE_HPHP_HSTRING = 119;
	const long SCE_HPHP_SIMPLESTRING = 120;
	const long SCE_HPHP_WORD = 121;
	const long SCE_HPHP_NUMBER = 122;
	const long SCE_HPHP_VARIABLE = 123;
	const long SCE_HPHP_COMMENT = 124;
	const long SCE_HPHP_COMMENTLINE = 125;
	const long SCE_HPHP_HSTRING_VARIABLE = 126;
	const long SCE_HPHP_OPERATOR = 127;
	const long SCE_PL_DEFAULT = 0;
	const long SCE_PL_ERROR = 1;
	const long SCE_PL_COMMENTLINE = 2;
	const long SCE_PL_POD = 3;
	const long SCE_PL_NUMBER = 4;
	const long SCE_PL_WORD = 5;
	const long SCE_PL_STRING = 6;
	const long SCE_PL_CHARACTER = 7;
	const long SCE_PL_PUNCTUATION = 8;
	const long SCE_PL_PREPROCESSOR = 9;
	const long SCE_PL_OPERATOR = 10;
	const long SCE_PL_IDENTIFIER = 11;
	const long SCE_PL_SCALAR = 12;
	const long SCE_PL_ARRAY = 13;
	const long SCE_PL_HASH = 14;
	const long SCE_PL_SYMBOLTABLE = 15;
	const long SCE_PL_VARIABLE_INDEXER = 16;
	const long SCE_PL_REGEX = 17;
	const long SCE_PL_REGSUBST = 18;
	const long SCE_PL_LONGQUOTE = 19;
	const long SCE_PL_BACKTICKS = 20;
	const long SCE_PL_DATASECTION = 21;
	const long SCE_PL_HERE_DELIM = 22;
	const long SCE_PL_HERE_Q = 23;
	const long SCE_PL_HERE_QQ = 24;
	const long SCE_PL_HERE_QX = 25;
	const long SCE_PL_STRING_Q = 26;
	const long SCE_PL_STRING_QQ = 27;
	const long SCE_PL_STRING_QX = 28;
	const long SCE_PL_STRING_QR = 29;
	const long SCE_PL_STRING_QW = 30;
	const long SCE_PL_POD_VERB = 31;
	const long SCE_PL_SUB_PROTOTYPE = 40;
	const long SCE_PL_FORMAT_IDENT = 41;
	const long SCE_PL_FORMAT = 42;
	const long SCE_RB_DEFAULT = 0;
	const long SCE_RB_ERROR = 1;
	const long SCE_RB_COMMENTLINE = 2;
	const long SCE_RB_POD = 3;
	const long SCE_RB_NUMBER = 4;
	const long SCE_RB_WORD = 5;
	const long SCE_RB_STRING = 6;
	const long SCE_RB_CHARACTER = 7;
	const long SCE_RB_CLASSNAME = 8;
	const long SCE_RB_DEFNAME = 9;
	const long SCE_RB_OPERATOR = 10;
	const long SCE_RB_IDENTIFIER = 11;
	const long SCE_RB_REGEX = 12;
	const long SCE_RB_GLOBAL = 13;
	const long SCE_RB_SYMBOL = 14;
	const long SCE_RB_MODULE_NAME = 15;
	const long SCE_RB_INSTANCE_VAR = 16;
	const long SCE_RB_CLASS_VAR = 17;
	const long SCE_RB_BACKTICKS = 18;
	const long SCE_RB_DATASECTION = 19;
	const long SCE_RB_HERE_DELIM = 20;
	const long SCE_RB_HERE_Q = 21;
	const long SCE_RB_HERE_QQ = 22;
	const long SCE_RB_HERE_QX = 23;
	const long SCE_RB_STRING_Q = 24;
	const long SCE_RB_STRING_QQ = 25;
	const long SCE_RB_STRING_QX = 26;
	const long SCE_RB_STRING_QR = 27;
	const long SCE_RB_STRING_QW = 28;
	const long SCE_RB_WORD_DEMOTED = 29;
	const long SCE_RB_STDIN = 30;
	const long SCE_RB_STDOUT = 31;
	const long SCE_RB_STDERR = 40;
	const long SCE_RB_UPPER_BOUND = 41;
	const long SCE_B_DEFAULT = 0;
	const long SCE_B_COMMENT = 1;
	const long SCE_B_NUMBER = 2;
	const long SCE_B_KEYWORD = 3;
	const long SCE_B_STRING = 4;
	const long SCE_B_PREPROCESSOR = 5;
	const long SCE_B_OPERATOR = 6;
	const long SCE_B_IDENTIFIER = 7;
	const long SCE_B_DATE = 8;
	const long SCE_B_STRINGEOL = 9;
	const long SCE_B_KEYWORD2 = 10;
	const long SCE_B_KEYWORD3 = 11;
	const long SCE_B_KEYWORD4 = 12;
	const long SCE_B_CONSTANT = 13;
	const long SCE_B_ASM = 14;
	const long SCE_B_LABEL = 15;
	const long SCE_B_ERROR = 16;
	const long SCE_B_HEXNUMBER = 17;
	const long SCE_B_BINNUMBER = 18;
	const long SCE_PROPS_DEFAULT = 0;
	const long SCE_PROPS_COMMENT = 1;
	const long SCE_PROPS_SECTION = 2;
	const long SCE_PROPS_ASSIGNMENT = 3;
	const long SCE_PROPS_DEFVAL = 4;
	const long SCE_PROPS_KEY = 5;
	const long SCE_L_DEFAULT = 0;
	const long SCE_L_COMMAND = 1;
	const long SCE_L_TAG = 2;
	const long SCE_L_MATH = 3;
	const long SCE_L_COMMENT = 4;
	const long SCE_LUA_DEFAULT = 0;
	const long SCE_LUA_COMMENT = 1;
	const long SCE_LUA_COMMENTLINE = 2;
	const long SCE_LUA_COMMENTDOC = 3;
	const long SCE_LUA_NUMBER = 4;
	const long SCE_LUA_WORD = 5;
	const long SCE_LUA_STRING = 6;
	const long SCE_LUA_CHARACTER = 7;
	const long SCE_LUA_LITERALSTRING = 8;
	const long SCE_LUA_PREPROCESSOR = 9;
	const long SCE_LUA_OPERATOR = 10;
	const long SCE_LUA_IDENTIFIER = 11;
	const long SCE_LUA_STRINGEOL = 12;
	const long SCE_LUA_WORD2 = 13;
	const long SCE_LUA_WORD3 = 14;
	const long SCE_LUA_WORD4 = 15;
	const long SCE_LUA_WORD5 = 16;
	const long SCE_LUA_WORD6 = 17;
	const long SCE_LUA_WORD7 = 18;
	const long SCE_LUA_WORD8 = 19;
	const long SCE_ERR_DEFAULT = 0;
	const long SCE_ERR_PYTHON = 1;
	const long SCE_ERR_GCC = 2;
	const long SCE_ERR_MS = 3;
	const long SCE_ERR_CMD = 4;
	const long SCE_ERR_BORLAND = 5;
	const long SCE_ERR_PERL = 6;
	const long SCE_ERR_NET = 7;
	const long SCE_ERR_LUA = 8;
	const long SCE_ERR_CTAG = 9;
	const long SCE_ERR_DIFF_CHANGED = 10;
	const long SCE_ERR_DIFF_ADDITION = 11;
	const long SCE_ERR_DIFF_DELETION = 12;
	const long SCE_ERR_DIFF_MESSAGE = 13;
	const long SCE_ERR_PHP = 14;
	const long SCE_ERR_ELF = 15;
	const long SCE_ERR_IFC = 16;
	const long SCE_ERR_IFORT = 17;
	const long SCE_ERR_ABSF = 18;
	const long SCE_ERR_TIDY = 19;
	const long SCE_ERR_JAVA_STACK = 20;
	const long SCE_ERR_VALUE = 21;
	const long SCE_BAT_DEFAULT = 0;
	const long SCE_BAT_COMMENT = 1;
	const long SCE_BAT_WORD = 2;
	const long SCE_BAT_LABEL = 3;
	const long SCE_BAT_HIDE = 4;
	const long SCE_BAT_COMMAND = 5;
	const long SCE_BAT_IDENTIFIER = 6;
	const long SCE_BAT_OPERATOR = 7;
	const long SCE_MAKE_DEFAULT = 0;
	const long SCE_MAKE_COMMENT = 1;
	const long SCE_MAKE_PREPROCESSOR = 2;
	const long SCE_MAKE_IDENTIFIER = 3;
	const long SCE_MAKE_OPERATOR = 4;
	const long SCE_MAKE_TARGET = 5;
	const long SCE_MAKE_IDEOL = 9;
	const long SCE_DIFF_DEFAULT = 0;
	const long SCE_DIFF_COMMENT = 1;
	const long SCE_DIFF_COMMAND = 2;
	const long SCE_DIFF_HEADER = 3;
	const long SCE_DIFF_POSITION = 4;
	const long SCE_DIFF_DELETED = 5;
	const long SCE_DIFF_ADDED = 6;
	const long SCE_DIFF_CHANGED = 7;
	const long SCE_CONF_DEFAULT = 0;
	const long SCE_CONF_COMMENT = 1;
	const long SCE_CONF_NUMBER = 2;
	const long SCE_CONF_IDENTIFIER = 3;
	const long SCE_CONF_EXTENSION = 4;
	const long SCE_CONF_PARAMETER = 5;
	const long SCE_CONF_STRING = 6;
	const long SCE_CONF_OPERATOR = 7;
	const long SCE_CONF_IP = 8;
	const long SCE_CONF_DIRECTIVE = 9;
	const long SCE_AVE_DEFAULT = 0;
	const long SCE_AVE_COMMENT = 1;
	const long SCE_AVE_NUMBER = 2;
	const long SCE_AVE_WORD = 3;
	const long SCE_AVE_STRING = 6;
	const long SCE_AVE_ENUM = 7;
	const long SCE_AVE_STRINGEOL = 8;
	const long SCE_AVE_IDENTIFIER = 9;
	const long SCE_AVE_OPERATOR = 10;
	const long SCE_AVE_WORD1 = 11;
	const long SCE_AVE_WORD2 = 12;
	const long SCE_AVE_WORD3 = 13;
	const long SCE_AVE_WORD4 = 14;
	const long SCE_AVE_WORD5 = 15;
	const long SCE_AVE_WORD6 = 16;
	const long SCE_ADA_DEFAULT = 0;
	const long SCE_ADA_WORD = 1;
	const long SCE_ADA_IDENTIFIER = 2;
	const long SCE_ADA_NUMBER = 3;
	const long SCE_ADA_DELIMITER = 4;
	const long SCE_ADA_CHARACTER = 5;
	const long SCE_ADA_CHARACTEREOL = 6;
	const long SCE_ADA_STRING = 7;
	const long SCE_ADA_STRINGEOL = 8;
	const long SCE_ADA_LABEL = 9;
	const long SCE_ADA_COMMENTLINE = 10;
	const long SCE_ADA_ILLEGAL = 11;
	const long SCE_BAAN_DEFAULT = 0;
	const long SCE_BAAN_COMMENT = 1;
	const long SCE_BAAN_COMMENTDOC = 2;
	const long SCE_BAAN_NUMBER = 3;
	const long SCE_BAAN_WORD = 4;
	const long SCE_BAAN_STRING = 5;
	const long SCE_BAAN_PREPROCESSOR = 6;
	const long SCE_BAAN_OPERATOR = 7;
	const long SCE_BAAN_IDENTIFIER = 8;
	const long SCE_BAAN_STRINGEOL = 9;
	const long SCE_BAAN_WORD2 = 10;
	const long SCE_LISP_DEFAULT = 0;
	const long SCE_LISP_COMMENT = 1;
	const long SCE_LISP_NUMBER = 2;
	const long SCE_LISP_KEYWORD = 3;
	const long SCE_LISP_KEYWORD_KW = 4;
	const long SCE_LISP_SYMBOL = 5;
	const long SCE_LISP_STRING = 6;
	const long SCE_LISP_STRINGEOL = 8;
	const long SCE_LISP_IDENTIFIER = 9;
	const long SCE_LISP_OPERATOR = 10;
	const long SCE_LISP_SPECIAL = 11;
	const long SCE_LISP_MULTI_COMMENT = 12;
	const long SCE_EIFFEL_DEFAULT = 0;
	const long SCE_EIFFEL_COMMENTLINE = 1;
	const long SCE_EIFFEL_NUMBER = 2;
	const long SCE_EIFFEL_WORD = 3;
	const long SCE_EIFFEL_STRING = 4;
	const long SCE_EIFFEL_CHARACTER = 5;
	const long SCE_EIFFEL_OPERATOR = 6;
	const long SCE_EIFFEL_IDENTIFIER = 7;
	const long SCE_EIFFEL_STRINGEOL = 8;
	const long SCE_NNCRONTAB_DEFAULT = 0;
	const long SCE_NNCRONTAB_COMMENT = 1;
	const long SCE_NNCRONTAB_TASK = 2;
	const long SCE_NNCRONTAB_SECTION = 3;
	const long SCE_NNCRONTAB_KEYWORD = 4;
	const long SCE_NNCRONTAB_MODIFIER = 5;
	const long SCE_NNCRONTAB_ASTERISK = 6;
	const long SCE_NNCRONTAB_NUMBER = 7;
	const long SCE_NNCRONTAB_STRING = 8;
	const long SCE_NNCRONTAB_ENVIRONMENT = 9;
	const long SCE_NNCRONTAB_IDENTIFIER = 10;
	const long SCE_FORTH_DEFAULT = 0;
	const long SCE_FORTH_COMMENT = 1;
	const long SCE_FORTH_COMMENT_ML = 2;
	const long SCE_FORTH_IDENTIFIER = 3;
	const long SCE_FORTH_CONTROL = 4;
	const long SCE_FORTH_KEYWORD = 5;
	const long SCE_FORTH_DEFWORD = 6;
	const long SCE_FORTH_PREWORD1 = 7;
	const long SCE_FORTH_PREWORD2 = 8;
	const long SCE_FORTH_NUMBER = 9;
	const long SCE_FORTH_STRING = 10;
	const long SCE_FORTH_LOCALE = 11;
	const long SCE_MATLAB_DEFAULT = 0;
	const long SCE_MATLAB_COMMENT = 1;
	const long SCE_MATLAB_COMMAND = 2;
	const long SCE_MATLAB_NUMBER = 3;
	const long SCE_MATLAB_KEYWORD = 4;
	const long SCE_MATLAB_STRING = 5;
	const long SCE_MATLAB_OPERATOR = 6;
	const long SCE_MATLAB_IDENTIFIER = 7;
	const long SCE_MATLAB_DOUBLEQUOTESTRING = 8;
	const long SCE_SCRIPTOL_DEFAULT = 0;
	const long SCE_SCRIPTOL_WHITE = 1;
	const long SCE_SCRIPTOL_COMMENTLINE = 2;
	const long SCE_SCRIPTOL_PERSISTENT = 3;
	const long SCE_SCRIPTOL_CSTYLE = 4;
	const long SCE_SCRIPTOL_COMMENTBLOCK = 5;
	const long SCE_SCRIPTOL_NUMBER = 6;
	const long SCE_SCRIPTOL_STRING = 7;
	const long SCE_SCRIPTOL_CHARACTER = 8;
	const long SCE_SCRIPTOL_STRINGEOL = 9;
	const long SCE_SCRIPTOL_KEYWORD = 10;
	const long SCE_SCRIPTOL_OPERATOR = 11;
	const long SCE_SCRIPTOL_IDENTIFIER = 12;
	const long SCE_SCRIPTOL_TRIPLE = 13;
	const long SCE_SCRIPTOL_CLASSNAME = 14;
	const long SCE_SCRIPTOL_PREPROCESSOR = 15;
	const long SCE_ASM_DEFAULT = 0;
	const long SCE_ASM_COMMENT = 1;
	const long SCE_ASM_NUMBER = 2;
	const long SCE_ASM_STRING = 3;
	const long SCE_ASM_OPERATOR = 4;
	const long SCE_ASM_IDENTIFIER = 5;
	const long SCE_ASM_CPUINSTRUCTION = 6;
	const long SCE_ASM_MATHINSTRUCTION = 7;
	const long SCE_ASM_REGISTER = 8;
	const long SCE_ASM_DIRECTIVE = 9;
	const long SCE_ASM_DIRECTIVEOPERAND = 10;
	const long SCE_ASM_COMMENTBLOCK = 11;
	const long SCE_ASM_CHARACTER = 12;
	const long SCE_ASM_STRINGEOL = 13;
	const long SCE_ASM_EXTINSTRUCTION = 14;
	const long SCE_F_DEFAULT = 0;
	const long SCE_F_COMMENT = 1;
	const long SCE_F_NUMBER = 2;
	const long SCE_F_STRING1 = 3;
	const long SCE_F_STRING2 = 4;
	const long SCE_F_STRINGEOL = 5;
	const long SCE_F_OPERATOR = 6;
	const long SCE_F_IDENTIFIER = 7;
	const long SCE_F_WORD = 8;
	const long SCE_F_WORD2 = 9;
	const long SCE_F_WORD3 = 10;
	const long SCE_F_PREPROCESSOR = 11;
	const long SCE_F_OPERATOR2 = 12;
	const long SCE_F_LABEL = 13;
	const long SCE_F_CONTINUATION = 14;
	const long SCE_CSS_DEFAULT = 0;
	const long SCE_CSS_TAG = 1;
	const long SCE_CSS_CLASS = 2;
	const long SCE_CSS_PSEUDOCLASS = 3;
	const long SCE_CSS_UNKNOWN_PSEUDOCLASS = 4;
	const long SCE_CSS_OPERATOR = 5;
	const long SCE_CSS_IDENTIFIER = 6;
	const long SCE_CSS_UNKNOWN_IDENTIFIER = 7;
	const long SCE_CSS_VALUE = 8;
	const long SCE_CSS_COMMENT = 9;
	const long SCE_CSS_ID = 10;
	const long SCE_CSS_IMPORTANT = 11;
	const long SCE_CSS_DIRECTIVE = 12;
	const long SCE_CSS_DOUBLESTRING = 13;
	const long SCE_CSS_SINGLESTRING = 14;
	const long SCE_CSS_IDENTIFIER2 = 15;
	const long SCE_CSS_ATTRIBUTE = 16;
	const long SCE_POV_DEFAULT = 0;
	const long SCE_POV_COMMENT = 1;
	const long SCE_POV_COMMENTLINE = 2;
	const long SCE_POV_NUMBER = 3;
	const long SCE_POV_OPERATOR = 4;
	const long SCE_POV_IDENTIFIER = 5;
	const long SCE_POV_STRING = 6;
	const long SCE_POV_STRINGEOL = 7;
	const long SCE_POV_DIRECTIVE = 8;
	const long SCE_POV_BADDIRECTIVE = 9;
	const long SCE_POV_WORD2 = 10;
	const long SCE_POV_WORD3 = 11;
	const long SCE_POV_WORD4 = 12;
	const long SCE_POV_WORD5 = 13;
	const long SCE_POV_WORD6 = 14;
	const long SCE_POV_WORD7 = 15;
	const long SCE_POV_WORD8 = 16;
	const long SCE_LOUT_DEFAULT = 0;
	const long SCE_LOUT_COMMENT = 1;
	const long SCE_LOUT_NUMBER = 2;
	const long SCE_LOUT_WORD = 3;
	const long SCE_LOUT_WORD2 = 4;
	const long SCE_LOUT_WORD3 = 5;
	const long SCE_LOUT_WORD4 = 6;
	const long SCE_LOUT_STRING = 7;
	const long SCE_LOUT_OPERATOR = 8;
	const long SCE_LOUT_IDENTIFIER = 9;
	const long SCE_LOUT_STRINGEOL = 10;
	const long SCE_ESCRIPT_DEFAULT = 0;
	const long SCE_ESCRIPT_COMMENT = 1;
	const long SCE_ESCRIPT_COMMENTLINE = 2;
	const long SCE_ESCRIPT_COMMENTDOC = 3;
	const long SCE_ESCRIPT_NUMBER = 4;
	const long SCE_ESCRIPT_WORD = 5;
	const long SCE_ESCRIPT_STRING = 6;
	const long SCE_ESCRIPT_OPERATOR = 7;
	const long SCE_ESCRIPT_IDENTIFIER = 8;
	const long SCE_ESCRIPT_BRACE = 9;
	const long SCE_ESCRIPT_WORD2 = 10;
	const long SCE_ESCRIPT_WORD3 = 11;
	const long SCE_PS_DEFAULT = 0;
	const long SCE_PS_COMMENT = 1;
	const long SCE_PS_DSC_COMMENT = 2;
	const long SCE_PS_DSC_VALUE = 3;
	const long SCE_PS_NUMBER = 4;
	const long SCE_PS_NAME = 5;
	const long SCE_PS_KEYWORD = 6;
	const long SCE_PS_LITERAL = 7;
	const long SCE_PS_IMMEVAL = 8;
	const long SCE_PS_PAREN_ARRAY = 9;
	const long SCE_PS_PAREN_DICT = 10;
	const long SCE_PS_PAREN_PROC = 11;
	const long SCE_PS_TEXT = 12;
	const long SCE_PS_HEXSTRING = 13;
	const long SCE_PS_BASE85STRING = 14;
	const long SCE_PS_BADSTRINGCHAR = 15;
	const long SCE_NSIS_DEFAULT = 0;
	const long SCE_NSIS_COMMENT = 1;
	const long SCE_NSIS_STRINGDQ = 2;
	const long SCE_NSIS_STRINGLQ = 3;
	const long SCE_NSIS_STRINGRQ = 4;
	const long SCE_NSIS_FUNCTION = 5;
	const long SCE_NSIS_VARIABLE = 6;
	const long SCE_NSIS_LABEL = 7;
	const long SCE_NSIS_USERDEFINED = 8;
	const long SCE_NSIS_SECTIONDEF = 9;
	const long SCE_NSIS_SUBSECTIONDEF = 10;
	const long SCE_NSIS_IFDEFINEDEF = 11;
	const long SCE_NSIS_MACRODEF = 12;
	const long SCE_NSIS_STRINGVAR = 13;
	const long SCE_NSIS_NUMBER = 14;
	const long SCE_NSIS_SECTIONGROUP = 15;
	const long SCE_NSIS_PAGEEX = 16;
	const long SCE_NSIS_FUNCTIONDEF = 17;
	const long SCE_NSIS_COMMENTBOX = 18;
	const long SCE_MMIXAL_LEADWS = 0;
	const long SCE_MMIXAL_COMMENT = 1;
	const long SCE_MMIXAL_LABEL = 2;
	const long SCE_MMIXAL_OPCODE = 3;
	const long SCE_MMIXAL_OPCODE_PRE = 4;
	const long SCE_MMIXAL_OPCODE_VALID = 5;
	const long SCE_MMIXAL_OPCODE_UNKNOWN = 6;
	const long SCE_MMIXAL_OPCODE_POST = 7;
	const long SCE_MMIXAL_OPERANDS = 8;
	const long SCE_MMIXAL_NUMBER = 9;
	const long SCE_MMIXAL_REF = 10;
	const long SCE_MMIXAL_CHAR = 11;
	const long SCE_MMIXAL_STRING = 12;
	const long SCE_MMIXAL_REGISTER = 13;
	const long SCE_MMIXAL_HEX = 14;
	const long SCE_MMIXAL_OPERATOR = 15;
	const long SCE_MMIXAL_SYMBOL = 16;
	const long SCE_MMIXAL_INCLUDE = 17;
	const long SCE_CLW_DEFAULT = 0;
	const long SCE_CLW_LABEL = 1;
	const long SCE_CLW_COMMENT = 2;
	const long SCE_CLW_STRING = 3;
	const long SCE_CLW_USER_IDENTIFIER = 4;
	const long SCE_CLW_INTEGER_CONSTANT = 5;
	const long SCE_CLW_REAL_CONSTANT = 6;
	const long SCE_CLW_PICTURE_STRING = 7;
	const long SCE_CLW_KEYWORD = 8;
	const long SCE_CLW_COMPILER_DIRECTIVE = 9;
	const long SCE_CLW_RUNTIME_EXPRESSIONS = 10;
	const long SCE_CLW_BUILTIN_PROCEDURES_FUNCTION = 11;
	const long SCE_CLW_STRUCTURE_DATA_TYPE = 12;
	const long SCE_CLW_ATTRIBUTE = 13;
	const long SCE_CLW_STANDARD_EQUATE = 14;
	const long SCE_CLW_ERROR = 15;
	const long SCE_CLW_DEPRECATED = 16;
	const long SCE_LOT_DEFAULT = 0;
	const long SCE_LOT_HEADER = 1;
	const long SCE_LOT_BREAK = 2;
	const long SCE_LOT_SET = 3;
	const long SCE_LOT_PASS = 4;
	const long SCE_LOT_FAIL = 5;
	const long SCE_LOT_ABORT = 6;
	const long SCE_YAML_DEFAULT = 0;
	const long SCE_YAML_COMMENT = 1;
	const long SCE_YAML_IDENTIFIER = 2;
	const long SCE_YAML_KEYWORD = 3;
	const long SCE_YAML_NUMBER = 4;
	const long SCE_YAML_REFERENCE = 5;
	const long SCE_YAML_DOCUMENT = 6;
	const long SCE_YAML_TEXT = 7;
	const long SCE_YAML_ERROR = 8;
	const long SCE_YAML_OPERATOR = 9;
	const long SCE_TEX_DEFAULT = 0;
	const long SCE_TEX_SPECIAL = 1;
	const long SCE_TEX_GROUP = 2;
	const long SCE_TEX_SYMBOL = 3;
	const long SCE_TEX_COMMAND = 4;
	const long SCE_TEX_TEXT = 5;
	const long SCE_METAPOST_DEFAULT = 0;
	const long SCE_METAPOST_SPECIAL = 1;
	const long SCE_METAPOST_GROUP = 2;
	const long SCE_METAPOST_SYMBOL = 3;
	const long SCE_METAPOST_COMMAND = 4;
	const long SCE_METAPOST_TEXT = 5;
	const long SCE_METAPOST_EXTRA = 6;
	const long SCE_ERLANG_DEFAULT = 0;
	const long SCE_ERLANG_COMMENT = 1;
	const long SCE_ERLANG_VARIABLE = 2;
	const long SCE_ERLANG_NUMBER = 3;
	const long SCE_ERLANG_KEYWORD = 4;
	const long SCE_ERLANG_STRING = 5;
	const long SCE_ERLANG_OPERATOR = 6;
	const long SCE_ERLANG_ATOM = 7;
	const long SCE_ERLANG_FUNCTION_NAME = 8;
	const long SCE_ERLANG_CHARACTER = 9;
	const long SCE_ERLANG_MACRO = 10;
	const long SCE_ERLANG_RECORD = 11;
	const long SCE_ERLANG_SEPARATOR = 12;
	const long SCE_ERLANG_NODE_NAME = 13;
	const long SCE_ERLANG_UNKNOWN = 31;
	const long SCE_MSSQL_DEFAULT = 0;
	const long SCE_MSSQL_COMMENT = 1;
	const long SCE_MSSQL_LINE_COMMENT = 2;
	const long SCE_MSSQL_NUMBER = 3;
	const long SCE_MSSQL_STRING = 4;
	const long SCE_MSSQL_OPERATOR = 5;
	const long SCE_MSSQL_IDENTIFIER = 6;
	const long SCE_MSSQL_VARIABLE = 7;
	const long SCE_MSSQL_COLUMN_NAME = 8;
	const long SCE_MSSQL_STATEMENT = 9;
	const long SCE_MSSQL_DATATYPE = 10;
	const long SCE_MSSQL_SYSTABLE = 11;
	const long SCE_MSSQL_GLOBAL_VARIABLE = 12;
	const long SCE_MSSQL_FUNCTION = 13;
	const long SCE_MSSQL_STORED_PROCEDURE = 14;
	const long SCE_MSSQL_DEFAULT_PREF_DATATYPE = 15;
	const long SCE_MSSQL_COLUMN_NAME_2 = 16;
	const long SCE_V_DEFAULT = 0;
	const long SCE_V_COMMENT = 1;
	const long SCE_V_COMMENTLINE = 2;
	const long SCE_V_COMMENTLINEBANG = 3;
	const long SCE_V_NUMBER = 4;
	const long SCE_V_WORD = 5;
	const long SCE_V_STRING = 6;
	const long SCE_V_WORD2 = 7;
	const long SCE_V_WORD3 = 8;
	const long SCE_V_PREPROCESSOR = 9;
	const long SCE_V_OPERATOR = 10;
	const long SCE_V_IDENTIFIER = 11;
	const long SCE_V_STRINGEOL = 12;
	const long SCE_V_USER = 19;
	const long SCE_KIX_DEFAULT = 0;
	const long SCE_KIX_COMMENT = 1;
	const long SCE_KIX_STRING1 = 2;
	const long SCE_KIX_STRING2 = 3;
	const long SCE_KIX_NUMBER = 4;
	const long SCE_KIX_VAR = 5;
	const long SCE_KIX_MACRO = 6;
	const long SCE_KIX_KEYWORD = 7;
	const long SCE_KIX_FUNCTIONS = 8;
	const long SCE_KIX_OPERATOR = 9;
	const long SCE_KIX_IDENTIFIER = 31;
	const long SCE_GC_DEFAULT = 0;
	const long SCE_GC_COMMENTLINE = 1;
	const long SCE_GC_COMMENTBLOCK = 2;
	const long SCE_GC_GLOBAL = 3;
	const long SCE_GC_EVENT = 4;
	const long SCE_GC_ATTRIBUTE = 5;
	const long SCE_GC_CONTROL = 6;
	const long SCE_GC_COMMAND = 7;
	const long SCE_GC_STRING = 8;
	const long SCE_GC_OPERATOR = 9;
	const long SCE_SN_DEFAULT = 0;
	const long SCE_SN_CODE = 1;
	const long SCE_SN_COMMENTLINE = 2;
	const long SCE_SN_COMMENTLINEBANG = 3;
	const long SCE_SN_NUMBER = 4;
	const long SCE_SN_WORD = 5;
	const long SCE_SN_STRING = 6;
	const long SCE_SN_WORD2 = 7;
	const long SCE_SN_WORD3 = 8;
	const long SCE_SN_PREPROCESSOR = 9;
	const long SCE_SN_OPERATOR = 10;
	const long SCE_SN_IDENTIFIER = 11;
	const long SCE_SN_STRINGEOL = 12;
	const long SCE_SN_REGEXTAG = 13;
	const long SCE_SN_SIGNAL = 14;
	const long SCE_SN_USER = 19;
	const long SCE_AU3_DEFAULT = 0;
	const long SCE_AU3_COMMENT = 1;
	const long SCE_AU3_COMMENTBLOCK = 2;
	const long SCE_AU3_NUMBER = 3;
	const long SCE_AU3_FUNCTION = 4;
	const long SCE_AU3_KEYWORD = 5;
	const long SCE_AU3_MACRO = 6;
	const long SCE_AU3_STRING = 7;
	const long SCE_AU3_OPERATOR = 8;
	const long SCE_AU3_VARIABLE = 9;
	const long SCE_AU3_SENT = 10;
	const long SCE_AU3_PREPROCESSOR = 11;
	const long SCE_AU3_SPECIAL = 12;
	const long SCE_AU3_EXPAND = 13;
	const long SCE_AU3_COMOBJ = 14;
	const long SCE_AU3_UDF = 15;
	const long SCE_APDL_DEFAULT = 0;
	const long SCE_APDL_COMMENT = 1;
	const long SCE_APDL_COMMENTBLOCK = 2;
	const long SCE_APDL_NUMBER = 3;
	const long SCE_APDL_STRING = 4;
	const long SCE_APDL_OPERATOR = 5;
	const long SCE_APDL_WORD = 6;
	const long SCE_APDL_PROCESSOR = 7;
	const long SCE_APDL_COMMAND = 8;
	const long SCE_APDL_SLASHCOMMAND = 9;
	const long SCE_APDL_STARCOMMAND = 10;
	const long SCE_APDL_ARGUMENT = 11;
	const long SCE_APDL_FUNCTION = 12;
	const long SCE_SH_DEFAULT = 0;
	const long SCE_SH_ERROR = 1;
	const long SCE_SH_COMMENTLINE = 2;
	const long SCE_SH_NUMBER = 3;
	const long SCE_SH_WORD = 4;
	const long SCE_SH_STRING = 5;
	const long SCE_SH_CHARACTER = 6;
	const long SCE_SH_OPERATOR = 7;
	const long SCE_SH_IDENTIFIER = 8;
	const long SCE_SH_SCALAR = 9;
	const long SCE_SH_PARAM = 10;
	const long SCE_SH_BACKTICKS = 11;
	const long SCE_SH_HERE_DELIM = 12;
	const long SCE_SH_HERE_Q = 13;
	const long SCE_ASN1_DEFAULT = 0;
	const long SCE_ASN1_COMMENT = 1;
	const long SCE_ASN1_IDENTIFIER = 2;
	const long SCE_ASN1_STRING = 3;
	const long SCE_ASN1_OID = 4;
	const long SCE_ASN1_SCALAR = 5;
	const long SCE_ASN1_KEYWORD = 6;
	const long SCE_ASN1_ATTRIBUTE = 7;
	const long SCE_ASN1_DESCRIPTOR = 8;
	const long SCE_ASN1_TYPE = 9;
	const long SCE_ASN1_OPERATOR = 10;
	const long SCE_VHDL_DEFAULT = 0;
	const long SCE_VHDL_COMMENT = 1;
	const long SCE_VHDL_COMMENTLINEBANG = 2;
	const long SCE_VHDL_NUMBER = 3;
	const long SCE_VHDL_STRING = 4;
	const long SCE_VHDL_OPERATOR = 5;
	const long SCE_VHDL_IDENTIFIER = 6;
	const long SCE_VHDL_STRINGEOL = 7;
	const long SCE_VHDL_KEYWORD = 8;
	const long SCE_VHDL_STDOPERATOR = 9;
	const long SCE_VHDL_ATTRIBUTE = 10;
	const long SCE_VHDL_STDFUNCTION = 11;
	const long SCE_VHDL_STDPACKAGE = 12;
	const long SCE_VHDL_STDTYPE = 13;
	const long SCE_VHDL_USERWORD = 14;
	const long SCE_CAML_DEFAULT = 0;
	const long SCE_CAML_IDENTIFIER = 1;
	const long SCE_CAML_TAGNAME = 2;
	const long SCE_CAML_KEYWORD = 3;
	const long SCE_CAML_KEYWORD2 = 4;
	const long SCE_CAML_KEYWORD3 = 5;
	const long SCE_CAML_LINENUM = 6;
	const long SCE_CAML_OPERATOR = 7;
	const long SCE_CAML_NUMBER = 8;
	const long SCE_CAML_CHAR = 9;
	const long SCE_CAML_STRING = 11;
	const long SCE_CAML_COMMENT = 12;
	const long SCE_CAML_COMMENT1 = 13;
	const long SCE_CAML_COMMENT2 = 14;
	const long SCE_CAML_COMMENT3 = 15;
	const long SCE_HA_DEFAULT = 0;
	const long SCE_HA_IDENTIFIER = 1;
	const long SCE_HA_KEYWORD = 2;
	const long SCE_HA_NUMBER = 3;
	const long SCE_HA_STRING = 4;
	const long SCE_HA_CHARACTER = 5;
	const long SCE_HA_CLASS = 6;
	const long SCE_HA_MODULE = 7;
	const long SCE_HA_CAPITAL = 8;
	const long SCE_HA_DATA = 9;
	const long SCE_HA_IMPORT = 10;
	const long SCE_HA_OPERATOR = 11;
	const long SCE_HA_INSTANCE = 12;
	const long SCE_HA_COMMENTLINE = 13;
	const long SCE_HA_COMMENTBLOCK = 14;
	const long SCE_HA_COMMENTBLOCK2 = 15;
	const long SCE_HA_COMMENTBLOCK3 = 16;
	const long SCE_T3_DEFAULT = 0;
	const long SCE_T3_X_DEFAULT = 1;
	const long SCE_T3_PREPROCESSOR = 2;
	const long SCE_T3_BLOCK_COMMENT = 3;
	const long SCE_T3_LINE_COMMENT = 4;
	const long SCE_T3_OPERATOR = 5;
	const long SCE_T3_KEYWORD = 6;
	const long SCE_T3_NUMBER = 7;
	const long SCE_T3_IDENTIFIER = 8;
	const long SCE_T3_S_STRING = 9;
	const long SCE_T3_D_STRING = 10;
	const long SCE_T3_X_STRING = 11;
	const long SCE_T3_LIB_DIRECTIVE = 12;
	const long SCE_T3_MSG_PARAM = 13;
	const long SCE_T3_HTML_TAG = 14;
	const long SCE_T3_HTML_DEFAULT = 15;
	const long SCE_T3_HTML_STRING = 16;
	const long SCE_T3_USER1 = 17;
	const long SCE_T3_USER2 = 18;
	const long SCE_T3_USER3 = 19;
	const long SCE_T3_BRACE = 20;
	const long SCE_REBOL_DEFAULT = 0;
	const long SCE_REBOL_COMMENTLINE = 1;
	const long SCE_REBOL_COMMENTBLOCK = 2;
	const long SCE_REBOL_PREFACE = 3;
	const long SCE_REBOL_OPERATOR = 4;
	const long SCE_REBOL_CHARACTER = 5;
	const long SCE_REBOL_QUOTEDSTRING = 6;
	const long SCE_REBOL_BRACEDSTRING = 7;
	const long SCE_REBOL_NUMBER = 8;
	const long SCE_REBOL_PAIR = 9;
	const long SCE_REBOL_TUPLE = 10;
	const long SCE_REBOL_BINARY = 11;
	const long SCE_REBOL_MONEY = 12;
	const long SCE_REBOL_ISSUE = 13;
	const long SCE_REBOL_TAG = 14;
	const long SCE_REBOL_FILE = 15;
	const long SCE_REBOL_EMAIL = 16;
	const long SCE_REBOL_URL = 17;
	const long SCE_REBOL_DATE = 18;
	const long SCE_REBOL_TIME = 19;
	const long SCE_REBOL_IDENTIFIER = 20;
	const long SCE_REBOL_WORD = 21;
	const long SCE_REBOL_WORD2 = 22;
	const long SCE_REBOL_WORD3 = 23;
	const long SCE_REBOL_WORD4 = 24;
	const long SCE_REBOL_WORD5 = 25;
	const long SCE_REBOL_WORD6 = 26;
	const long SCE_REBOL_WORD7 = 27;
	const long SCE_REBOL_WORD8 = 28;
	const long SCE_SQL_DEFAULT = 0;
	const long SCE_SQL_COMMENT = 1;
	const long SCE_SQL_COMMENTLINE = 2;
	const long SCE_SQL_COMMENTDOC = 3;
	const long SCE_SQL_NUMBER = 4;
	const long SCE_SQL_WORD = 5;
	const long SCE_SQL_STRING = 6;
	const long SCE_SQL_CHARACTER = 7;
	const long SCE_SQL_SQLPLUS = 8;
	const long SCE_SQL_SQLPLUS_PROMPT = 9;
	const long SCE_SQL_OPERATOR = 10;
	const long SCE_SQL_IDENTIFIER = 11;
	const long SCE_SQL_SQLPLUS_COMMENT = 13;
	const long SCE_SQL_COMMENTLINEDOC = 15;
	const long SCE_SQL_WORD2 = 16;
	const long SCE_SQL_COMMENTDOCKEYWORD = 17;
	const long SCE_SQL_COMMENTDOCKEYWORDERROR = 18;
	const long SCE_SQL_USER1 = 19;
	const long SCE_SQL_USER2 = 20;
	const long SCE_SQL_USER3 = 21;
	const long SCE_SQL_USER4 = 22;
	const long SCE_SQL_QUOTEDIDENTIFIER = 23;
	const long SCE_ST_DEFAULT = 0;
	const long SCE_ST_STRING = 1;
	const long SCE_ST_NUMBER = 2;
	const long SCE_ST_COMMENT = 3;
	const long SCE_ST_SYMBOL = 4;
	const long SCE_ST_BINARY = 5;
	const long SCE_ST_BOOL = 6;
	const long SCE_ST_SELF = 7;
	const long SCE_ST_SUPER = 8;
	const long SCE_ST_NIL = 9;
	const long SCE_ST_GLOBAL = 10;
	const long SCE_ST_RETURN = 11;
	const long SCE_ST_SPECIAL = 12;
	const long SCE_ST_KWSEND = 13;
	const long SCE_ST_ASSIGN = 14;
	const long SCE_ST_CHARACTER = 15;
	const long SCE_ST_SPEC_SEL = 16;
	const long SCE_FS_DEFAULT = 0;
	const long SCE_FS_COMMENT = 1;
	const long SCE_FS_COMMENTLINE = 2;
	const long SCE_FS_COMMENTDOC = 3;
	const long SCE_FS_COMMENTLINEDOC = 4;
	const long SCE_FS_COMMENTDOCKEYWORD = 5;
	const long SCE_FS_COMMENTDOCKEYWORDERROR = 6;
	const long SCE_FS_KEYWORD = 7;
	const long SCE_FS_KEYWORD2 = 8;
	const long SCE_FS_KEYWORD3 = 9;
	const long SCE_FS_KEYWORD4 = 10;
	const long SCE_FS_NUMBER = 11;
	const long SCE_FS_STRING = 12;
	const long SCE_FS_PREPROCESSOR = 13;
	const long SCE_FS_OPERATOR = 14;
	const long SCE_FS_IDENTIFIER = 15;
	const long SCE_FS_DATE = 16;
	const long SCE_FS_STRINGEOL = 17;
	const long SCE_FS_CONSTANT = 18;
	const long SCE_FS_ASM = 19;
	const long SCE_FS_LABEL = 20;
	const long SCE_FS_ERROR = 21;
	const long SCE_FS_HEXNUMBER = 22;
	const long SCE_FS_BINNUMBER = 23;
	const long SCE_CSOUND_DEFAULT = 0;
	const long SCE_CSOUND_COMMENT = 1;
	const long SCE_CSOUND_NUMBER = 2;
	const long SCE_CSOUND_OPERATOR = 3;
	const long SCE_CSOUND_INSTR = 4;
	const long SCE_CSOUND_IDENTIFIER = 5;
	const long SCE_CSOUND_OPCODE = 6;
	const long SCE_CSOUND_HEADERSTMT = 7;
	const long SCE_CSOUND_USERKEYWORD = 8;
	const long SCE_CSOUND_COMMENTBLOCK = 9;
	const long SCE_CSOUND_PARAM = 10;
	const long SCE_CSOUND_ARATE_VAR = 11;
	const long SCE_CSOUND_KRATE_VAR = 12;
	const long SCE_CSOUND_IRATE_VAR = 13;
	const long SCE_CSOUND_GLOBAL_VAR = 14;
	const long SCE_CSOUND_STRINGEOL = 15;
	const long SCE_INNO_DEFAULT = 0;
	const long SCE_INNO_COMMENT = 1;
	const long SCE_INNO_KEYWORD = 2;
	const long SCE_INNO_PARAMETER = 3;
	const long SCE_INNO_SECTION = 4;
	const long SCE_INNO_PREPROC = 5;
	const long SCE_INNO_PREPROC_INLINE = 6;
	const long SCE_INNO_COMMENT_PASCAL = 7;
	const long SCE_INNO_KEYWORD_PASCAL = 8;
	const long SCE_INNO_KEYWORD_USER = 9;
	const long SCE_INNO_STRING_DOUBLE = 10;
	const long SCE_INNO_STRING_SINGLE = 11;
	const long SCE_INNO_IDENTIFIER = 12;
	const long SCE_OPAL_SPACE = 0;
	const long SCE_OPAL_COMMENT_BLOCK = 1;
	const long SCE_OPAL_COMMENT_LINE = 2;
	const long SCE_OPAL_INTEGER = 3;
	const long SCE_OPAL_KEYWORD = 4;
	const long SCE_OPAL_SORT = 5;
	const long SCE_OPAL_STRING = 6;
	const long SCE_OPAL_PAR = 7;
	const long SCE_OPAL_BOOL_CONST = 8;
	const long SCE_OPAL_DEFAULT = 32;
	const long SCE_SPICE_DEFAULT = 0;
	const long SCE_SPICE_IDENTIFIER = 1;
	const long SCE_SPICE_KEYWORD = 2;
	const long SCE_SPICE_KEYWORD2 = 3;
	const long SCE_SPICE_KEYWORD3 = 4;
	const long SCE_SPICE_NUMBER = 5;
	const long SCE_SPICE_DELIMITER = 6;
	const long SCE_SPICE_VALUE = 7;
	const long SCE_SPICE_COMMENTLINE = 8;
	const long SCE_CMAKE_DEFAULT = 0;
	const long SCE_CMAKE_COMMENT = 1;
	const long SCE_CMAKE_STRINGDQ = 2;
	const long SCE_CMAKE_STRINGLQ = 3;
	const long SCE_CMAKE_STRINGRQ = 4;
	const long SCE_CMAKE_COMMANDS = 5;
	const long SCE_CMAKE_PARAMETERS = 6;
	const long SCE_CMAKE_VARIABLE = 7;
	const long SCE_CMAKE_USERDEFINED = 8;
	const long SCE_CMAKE_WHILEDEF = 9;
	const long SCE_CMAKE_FOREACHDEF = 10;
	const long SCE_CMAKE_IFDEFINEDEF = 11;
	const long SCE_CMAKE_MACRODEF = 12;
	const long SCE_CMAKE_STRINGVAR = 13;
	const long SCE_CMAKE_NUMBER = 14;
	const long SCE_GAP_DEFAULT = 0;
	const long SCE_GAP_IDENTIFIER = 1;
	const long SCE_GAP_KEYWORD = 2;
	const long SCE_GAP_KEYWORD2 = 3;
	const long SCE_GAP_KEYWORD3 = 4;
	const long SCE_GAP_KEYWORD4 = 5;
	const long SCE_GAP_STRING = 6;
	const long SCE_GAP_CHAR = 7;
	const long SCE_GAP_OPERATOR = 8;
	const long SCE_GAP_COMMENT = 9;
	const long SCE_GAP_NUMBER = 10;
	const long SCE_GAP_STRINGEOL = 11;
	const long SCE_PLM_DEFAULT = 0;
	const long SCE_PLM_COMMENT = 1;
	const long SCE_PLM_STRING = 2;
	const long SCE_PLM_NUMBER = 3;
	const long SCE_PLM_IDENTIFIER = 4;
	const long SCE_PLM_OPERATOR = 5;
	const long SCE_PLM_CONTROL = 6;
	const long SCE_PLM_KEYWORD = 7;
	const long SCE_4GL_DEFAULT = 0;
	const long SCE_4GL_NUMBER = 1;
	const long SCE_4GL_WORD = 2;
	const long SCE_4GL_STRING = 3;
	const long SCE_4GL_CHARACTER = 4;
	const long SCE_4GL_PREPROCESSOR = 5;
	const long SCE_4GL_OPERATOR = 6;
	const long SCE_4GL_IDENTIFIER = 7;
	const long SCE_4GL_BLOCK = 8;
	const long SCE_4GL_END = 9;
	const long SCE_4GL_COMMENT1 = 10;
	const long SCE_4GL_COMMENT2 = 11;
	const long SCE_4GL_COMMENT3 = 12;
	const long SCE_4GL_COMMENT4 = 13;
	const long SCE_4GL_COMMENT5 = 14;
	const long SCE_4GL_COMMENT6 = 15;
	const long SCE_4GL_DEFAULT_ = 16;
	const long SCE_4GL_NUMBER_ = 17;
	const long SCE_4GL_WORD_ = 18;
	const long SCE_4GL_STRING_ = 19;
	const long SCE_4GL_CHARACTER_ = 20;
	const long SCE_4GL_PREPROCESSOR_ = 21;
	const long SCE_4GL_OPERATOR_ = 22;
	const long SCE_4GL_IDENTIFIER_ = 23;
	const long SCE_4GL_BLOCK_ = 24;
	const long SCE_4GL_END_ = 25;
	const long SCE_4GL_COMMENT1_ = 26;
	const long SCE_4GL_COMMENT2_ = 27;
	const long SCE_4GL_COMMENT3_ = 28;
	const long SCE_4GL_COMMENT4_ = 29;
	const long SCE_4GL_COMMENT5_ = 30;
	const long SCE_4GL_COMMENT6_ = 31;
	const long SCE_ABAQUS_DEFAULT = 0;
	const long SCE_ABAQUS_COMMENT = 1;
	const long SCE_ABAQUS_COMMENTBLOCK = 2;
	const long SCE_ABAQUS_NUMBER = 3;
	const long SCE_ABAQUS_STRING = 4;
	const long SCE_ABAQUS_OPERATOR = 5;
	const long SCE_ABAQUS_WORD = 6;
	const long SCE_ABAQUS_PROCESSOR = 7;
	const long SCE_ABAQUS_COMMAND = 8;
	const long SCE_ABAQUS_SLASHCOMMAND = 9;
	const long SCE_ABAQUS_STARCOMMAND = 10;
	const long SCE_ABAQUS_ARGUMENT = 11;
	const long SCE_ABAQUS_FUNCTION = 12;
	const long SCE_ASY_DEFAULT = 0;
	const long SCE_ASY_COMMENT = 1;
	const long SCE_ASY_COMMENTLINE = 2;
	const long SCE_ASY_NUMBER = 3;
	const long SCE_ASY_WORD = 4;
	const long SCE_ASY_STRING = 5;
	const long SCE_ASY_CHARACTER = 6;
	const long SCE_ASY_OPERATOR = 7;
	const long SCE_ASY_IDENTIFIER = 8;
	const long SCE_ASY_STRINGEOL = 9;
	const long SCE_ASY_COMMENTLINEDOC = 10;
	const long SCE_ASY_WORD2 = 11;
	const long SCE_R_DEFAULT = 0;
	const long SCE_R_COMMENT = 1;
	const long SCE_R_KWORD = 2;
	const long SCE_R_BASEKWORD = 3;
	const long SCE_R_OTHERKWORD = 4;
	const long SCE_R_NUMBER = 5;
	const long SCE_R_STRING = 6;
	const long SCE_R_STRING2 = 7;
	const long SCE_R_OPERATOR = 8;
	const long SCE_R_IDENTIFIER = 9;
	const long SCE_R_INFIX = 10;
	const long SCE_R_INFIXEOL = 11;
	const long SCE_MAGIK_DEFAULT = 0;
	const long SCE_MAGIK_COMMENT = 1;
	const long SCE_MAGIK_HYPER_COMMENT = 16;
	const long SCE_MAGIK_STRING = 2;
	const long SCE_MAGIK_CHARACTER = 3;
	const long SCE_MAGIK_NUMBER = 4;
	const long SCE_MAGIK_IDENTIFIER = 5;
	const long SCE_MAGIK_OPERATOR = 6;
	const long SCE_MAGIK_FLOW = 7;
	const long SCE_MAGIK_CONTAINER = 8;
	const long SCE_MAGIK_BRACKET_BLOCK = 9;
	const long SCE_MAGIK_BRACE_BLOCK = 10;
	const long SCE_MAGIK_SQBRACKET_BLOCK = 11;
	const long SCE_MAGIK_UNKNOWN_KEYWORD = 12;
	const long SCE_MAGIK_KEYWORD = 13;
	const long SCE_MAGIK_PRAGMA = 14;
	const long SCE_MAGIK_SYMBOL = 15;
	const long SCE_POWERSHELL_DEFAULT = 0;
	const long SCE_POWERSHELL_COMMENT = 1;
	const long SCE_POWERSHELL_STRING = 2;
	const long SCE_POWERSHELL_CHARACTER = 3;
	const long SCE_POWERSHELL_NUMBER = 4;
	const long SCE_POWERSHELL_VARIABLE = 5;
	const long SCE_POWERSHELL_OPERATOR = 6;
	const long SCE_POWERSHELL_IDENTIFIER = 7;
	const long SCE_POWERSHELL_KEYWORD = 8;
	const long SCE_POWERSHELL_CMDLET = 9;
	const long SCE_POWERSHELL_ALIAS = 10;
	void setCaretPolicy(in long caretPolicy, in long caretSlop);
	const long CARET_CENTER = 0x02;
	const long CARET_XEVEN = 0x08;
	const long CARET_XJUMPS = 0x10;
	const long SCN_CHECKBRACE = 2007;
	const long SCLEX_ASP = 29;
	const long SCLEX_PHP = 30;
