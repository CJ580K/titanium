/*
 * WARNING this file was generated by Appcelerator's idl2npapi
 */

#include "ISciMozEvents.h"

#include "npSupport.h"
#include "ISciMoz_np.h"
#include "ISciMoz.h"

static void ISciMoz_initializeIdentifiers(void)
{
    NPN_GetStringIdentifiers(_ISciMoz_pluginPropertyIdentifierNames, _ISciMoz_NumberOfProperties, _ISciMoz_pluginPropertyIdentifiers);
    NPN_GetStringIdentifiers(_ISciMoz_pluginMethodIdentifierNames, _ISciMoz_NumberOfMethods, _ISciMoz_pluginMethodIdentifiers);
}

bool ISciMoz_identifiersInitialized = false;

bool ISciMoz_pluginInvokeDefault(NPObject *obj, const NPVariant *args, uint32_t argCount, NPVariant *result)
{
    return false;
}

void ISciMoz_pluginInvalidate(NPObject *obj)
{
    // Release any remaining references to JavaScript objects.
}

extern ISciMoz* Create_ISciMoz();

NPObject *ISciMoz_pluginAllocate(NPP npp, NPClass *theClass)
{
    ISciMoz *newInstance = Create_ISciMoz();

    if (!ISciMoz_identifiersInitialized) {
        ISciMoz_identifiersInitialized = true;
        ISciMoz_initializeIdentifiers();
    }

    return newInstance;
}

void ISciMoz_pluginDeallocate(NPObject *obj)
{
    free(obj);
}

bool ISciMoz_pluginRemoveProperty (NPObject *npobj, NPIdentifier name) {
  return false;
}

bool ISciMoz_pluginEnumerate (NPObject *npobj, NPIdentifier **value, uint32_t *count) {
  *count = _ISciMoz_NumberOfProperties + _ISciMoz_NumberOfMethods;

  value = (NPIdentifier**) malloc(sizeof(NPIdentifier*) * (*count));
  int i = 0, index = 0;

  for (i = 0; i < _ISciMoz_NumberOfProperties; i++, index++) value[index] = &_ISciMoz_pluginPropertyIdentifiers[i];
  for (i = 0; i < _ISciMoz_NumberOfMethods; i++, index++) value[index] = &_ISciMoz_pluginMethodIdentifiers[i];

  return true;
}

bool ISciMoz_pluginHasProperty(NPObject *obj, NPIdentifier name)
{
    int i;
    for (i = 0; i < _ISciMoz_NumberOfProperties; i++)
        if (name ==  _ISciMoz_pluginPropertyIdentifiers[i])
            return true;
    return false;
}

bool ISciMoz_pluginHasMethod(NPObject *obj, NPIdentifier name)
{
    int i;
    for (i = 0; i <  _ISciMoz_NumberOfMethods; i++)
        if (name ==  _ISciMoz_pluginMethodIdentifiers[i])
            return true;
    return false;
}


bool ISciMoz_pluginGetProperty(NPObject *obj, NPIdentifier name, NPVariant *variant) {
	ISciMoz *instance = (ISciMoz *) obj;
	
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_name]) {
		STRINGZ_TO_NPVARIANT(instance->GetName().c_str(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_text]) {
		STRINGZ_TO_NPVARIANT(instance->GetText().c_str(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selText]) {
		STRINGZ_TO_NPVARIANT(instance->GetSelText().c_str(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_lastCharCodeAdded]) {
		INT32_TO_NPVARIANT(instance->GetLastCharCodeAdded(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_isOwned]) {
		BOOLEAN_TO_NPVARIANT(instance->GetIsOwned(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_visible]) {
		BOOLEAN_TO_NPVARIANT(instance->GetVisible(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_isTracking]) {
		BOOLEAN_TO_NPVARIANT(instance->GetIsTracking(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_inDragSession]) {
		BOOLEAN_TO_NPVARIANT(instance->GetInDragSession(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_undoCollection]) {
		BOOLEAN_TO_NPVARIANT(instance->GetUndoCollection(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_viewWS]) {
		INT32_TO_NPVARIANT(instance->GetViewWS(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_endStyled]) {
		INT32_TO_NPVARIANT(instance->GetEndStyled(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_eOLMode]) {
		INT32_TO_NPVARIANT(instance->GetEOLMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_bufferedDraw]) {
		BOOLEAN_TO_NPVARIANT(instance->GetBufferedDraw(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_tabWidth]) {
		INT32_TO_NPVARIANT(instance->GetTabWidth(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selAlpha]) {
		INT32_TO_NPVARIANT(instance->GetSelAlpha(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selEOLFilled]) {
		BOOLEAN_TO_NPVARIANT(instance->GetSelEOLFilled(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretPeriod]) {
		INT32_TO_NPVARIANT(instance->GetCaretPeriod(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_styleBits]) {
		INT32_TO_NPVARIANT(instance->GetStyleBits(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_maxLineState]) {
		INT32_TO_NPVARIANT(instance->GetMaxLineState(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineVisible]) {
		BOOLEAN_TO_NPVARIANT(instance->GetCaretLineVisible(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineBack]) {
		INT32_TO_NPVARIANT(instance->GetCaretLineBack(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCSeparator]) {
		INT32_TO_NPVARIANT(instance->GetAutoCSeparator(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCCancelAtStart]) {
		BOOLEAN_TO_NPVARIANT(instance->GetAutoCCancelAtStart(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCChooseSingle]) {
		BOOLEAN_TO_NPVARIANT(instance->GetAutoCChooseSingle(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCIgnoreCase]) {
		BOOLEAN_TO_NPVARIANT(instance->GetAutoCIgnoreCase(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCAutoHide]) {
		BOOLEAN_TO_NPVARIANT(instance->GetAutoCAutoHide(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCDropRestOfWord]) {
		BOOLEAN_TO_NPVARIANT(instance->GetAutoCDropRestOfWord(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCTypeSeparator]) {
		INT32_TO_NPVARIANT(instance->GetAutoCTypeSeparator(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCMaxWidth]) {
		INT32_TO_NPVARIANT(instance->GetAutoCMaxWidth(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCMaxHeight]) {
		INT32_TO_NPVARIANT(instance->GetAutoCMaxHeight(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indent]) {
		INT32_TO_NPVARIANT(instance->GetIndent(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_useTabs]) {
		BOOLEAN_TO_NPVARIANT(instance->GetUseTabs(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hScrollBar]) {
		BOOLEAN_TO_NPVARIANT(instance->GetHScrollBar(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indentationGuides]) {
		INT32_TO_NPVARIANT(instance->GetIndentationGuides(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_highlightGuide]) {
		INT32_TO_NPVARIANT(instance->GetHighlightGuide(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_codePage]) {
		INT32_TO_NPVARIANT(instance->GetCodePage(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretFore]) {
		INT32_TO_NPVARIANT(instance->GetCaretFore(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_usePalette]) {
		BOOLEAN_TO_NPVARIANT(instance->GetUsePalette(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printMagnification]) {
		INT32_TO_NPVARIANT(instance->GetPrintMagnification(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printColourMode]) {
		INT32_TO_NPVARIANT(instance->GetPrintColourMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_firstVisibleLine]) {
		INT32_TO_NPVARIANT(instance->GetFirstVisibleLine(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_lineCount]) {
		INT32_TO_NPVARIANT(instance->GetLineCount(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_marginLeft]) {
		INT32_TO_NPVARIANT(instance->GetMarginLeft(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_marginRight]) {
		INT32_TO_NPVARIANT(instance->GetMarginRight(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_modify]) {
		BOOLEAN_TO_NPVARIANT(instance->GetModify(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_textLength]) {
		INT32_TO_NPVARIANT(instance->GetTextLength(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_directFunction]) {
		INT32_TO_NPVARIANT(instance->GetDirectFunction(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_directPointer]) {
		INT32_TO_NPVARIANT(instance->GetDirectPointer(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_overtype]) {
		BOOLEAN_TO_NPVARIANT(instance->GetOvertype(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretWidth]) {
		INT32_TO_NPVARIANT(instance->GetCaretWidth(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_targetStart]) {
		INT32_TO_NPVARIANT(instance->GetTargetStart(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_targetEnd]) {
		INT32_TO_NPVARIANT(instance->GetTargetEnd(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_searchFlags]) {
		INT32_TO_NPVARIANT(instance->GetSearchFlags(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_tabIndents]) {
		BOOLEAN_TO_NPVARIANT(instance->GetTabIndents(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_backSpaceUnIndents]) {
		BOOLEAN_TO_NPVARIANT(instance->GetBackSpaceUnIndents(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_mouseDwellTime]) {
		INT32_TO_NPVARIANT(instance->GetMouseDwellTime(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapMode]) {
		INT32_TO_NPVARIANT(instance->GetWrapMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapVisualFlags]) {
		INT32_TO_NPVARIANT(instance->GetWrapVisualFlags(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapVisualFlagsLocation]) {
		INT32_TO_NPVARIANT(instance->GetWrapVisualFlagsLocation(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapStartIndent]) {
		INT32_TO_NPVARIANT(instance->GetWrapStartIndent(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_layoutCache]) {
		INT32_TO_NPVARIANT(instance->GetLayoutCache(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_scrollWidthTracking]) {
		BOOLEAN_TO_NPVARIANT(instance->GetScrollWidthTracking(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_endAtLastLine]) {
		BOOLEAN_TO_NPVARIANT(instance->GetEndAtLastLine(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_vScrollBar]) {
		BOOLEAN_TO_NPVARIANT(instance->GetVScrollBar(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_twoPhaseDraw]) {
		BOOLEAN_TO_NPVARIANT(instance->GetTwoPhaseDraw(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_viewEOL]) {
		BOOLEAN_TO_NPVARIANT(instance->GetViewEOL(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_docPointer]) {
		INT32_TO_NPVARIANT(instance->GetDocPointer(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeColumn]) {
		INT32_TO_NPVARIANT(instance->GetEdgeColumn(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeMode]) {
		INT32_TO_NPVARIANT(instance->GetEdgeMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeColour]) {
		INT32_TO_NPVARIANT(instance->GetEdgeColour(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_linesOnScreen]) {
		INT32_TO_NPVARIANT(instance->GetLinesOnScreen(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionIsRectangle]) {
		BOOLEAN_TO_NPVARIANT(instance->GetSelectionIsRectangle(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_zoom]) {
		INT32_TO_NPVARIANT(instance->GetZoom(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_modEventMask]) {
		INT32_TO_NPVARIANT(instance->GetModEventMask(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_focus]) {
		BOOLEAN_TO_NPVARIANT(instance->GetFocus(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_status]) {
		INT32_TO_NPVARIANT(instance->GetStatus(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_mouseDownCaptures]) {
		BOOLEAN_TO_NPVARIANT(instance->GetMouseDownCaptures(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_cursor]) {
		INT32_TO_NPVARIANT(instance->GetCursor(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_controlCharSymbol]) {
		INT32_TO_NPVARIANT(instance->GetControlCharSymbol(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printWrapMode]) {
		INT32_TO_NPVARIANT(instance->GetPrintWrapMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveFore]) {
		INT32_TO_NPVARIANT(instance->GetHotspotActiveFore(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveBack]) {
		INT32_TO_NPVARIANT(instance->GetHotspotActiveBack(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveUnderline]) {
		BOOLEAN_TO_NPVARIANT(instance->GetHotspotActiveUnderline(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotSingleLine]) {
		BOOLEAN_TO_NPVARIANT(instance->GetHotspotSingleLine(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionMode]) {
		INT32_TO_NPVARIANT(instance->GetSelectionMode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretSticky]) {
		BOOLEAN_TO_NPVARIANT(instance->GetCaretSticky(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_pasteConvertEndings]) {
		BOOLEAN_TO_NPVARIANT(instance->GetPasteConvertEndings(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineBackAlpha]) {
		INT32_TO_NPVARIANT(instance->GetCaretLineBackAlpha(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretStyle]) {
		INT32_TO_NPVARIANT(instance->GetCaretStyle(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indicatorCurrent]) {
		INT32_TO_NPVARIANT(instance->GetIndicatorCurrent(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indicatorValue]) {
		INT32_TO_NPVARIANT(instance->GetIndicatorValue(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_positionCache]) {
		INT32_TO_NPVARIANT(instance->GetPositionCache(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_characterPointer]) {
		INT32_TO_NPVARIANT(instance->GetCharacterPointer(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_keysUnicode]) {
		BOOLEAN_TO_NPVARIANT(instance->GetKeysUnicode(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_lexer]) {
		INT32_TO_NPVARIANT(instance->GetLexer(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_styleBitsNeeded]) {
		INT32_TO_NPVARIANT(instance->GetStyleBitsNeeded(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_length]) {
		INT32_TO_NPVARIANT(instance->GetLength(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_currentPos]) {
		INT32_TO_NPVARIANT(instance->GetCurrentPos(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_anchor]) {
		INT32_TO_NPVARIANT(instance->GetAnchor(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_readOnly]) {
		BOOLEAN_TO_NPVARIANT(instance->GetReadOnly(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionStart]) {
		INT32_TO_NPVARIANT(instance->GetSelectionStart(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionEnd]) {
		INT32_TO_NPVARIANT(instance->GetSelectionEnd(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_scrollWidth]) {
		INT32_TO_NPVARIANT(instance->GetScrollWidth(), *variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_xOffset]) {
		INT32_TO_NPVARIANT(instance->GetXOffset(), *variant);
		return true;
	}
	
	return false;
}

bool ISciMoz_pluginSetProperty(NPObject *obj, NPIdentifier name, NPVariant *variant) {
	ISciMoz *instance = (ISciMoz *) obj;
	
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_name]) {
		instance->SetName(NPStringToString(NPVARIANT_TO_STRING(*variant)));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_text]) {
		instance->SetText(NPStringToString(NPVARIANT_TO_STRING(*variant)));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_lastCharCodeAdded]) {
		instance->SetLastCharCodeAdded(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_visible]) {
		instance->SetVisible(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_undoCollection]) {
		instance->SetUndoCollection(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_viewWS]) {
		instance->SetViewWS(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_eOLMode]) {
		instance->SetEOLMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_bufferedDraw]) {
		instance->SetBufferedDraw(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_tabWidth]) {
		instance->SetTabWidth(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selAlpha]) {
		instance->SetSelAlpha(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selEOLFilled]) {
		instance->SetSelEOLFilled(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretPeriod]) {
		instance->SetCaretPeriod(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_styleBits]) {
		instance->SetStyleBits(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineVisible]) {
		instance->SetCaretLineVisible(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineBack]) {
		instance->SetCaretLineBack(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCSeparator]) {
		instance->SetAutoCSeparator(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCCancelAtStart]) {
		instance->SetAutoCCancelAtStart(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCChooseSingle]) {
		instance->SetAutoCChooseSingle(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCIgnoreCase]) {
		instance->SetAutoCIgnoreCase(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCAutoHide]) {
		instance->SetAutoCAutoHide(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCDropRestOfWord]) {
		instance->SetAutoCDropRestOfWord(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCTypeSeparator]) {
		instance->SetAutoCTypeSeparator(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCMaxWidth]) {
		instance->SetAutoCMaxWidth(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_autoCMaxHeight]) {
		instance->SetAutoCMaxHeight(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indent]) {
		instance->SetIndent(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_useTabs]) {
		instance->SetUseTabs(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hScrollBar]) {
		instance->SetHScrollBar(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indentationGuides]) {
		instance->SetIndentationGuides(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_highlightGuide]) {
		instance->SetHighlightGuide(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_codePage]) {
		instance->SetCodePage(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretFore]) {
		instance->SetCaretFore(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_usePalette]) {
		instance->SetUsePalette(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printMagnification]) {
		instance->SetPrintMagnification(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printColourMode]) {
		instance->SetPrintColourMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_marginLeft]) {
		instance->SetMarginLeft(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_marginRight]) {
		instance->SetMarginRight(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_overtype]) {
		instance->SetOvertype(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretWidth]) {
		instance->SetCaretWidth(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_targetStart]) {
		instance->SetTargetStart(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_targetEnd]) {
		instance->SetTargetEnd(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_searchFlags]) {
		instance->SetSearchFlags(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_tabIndents]) {
		instance->SetTabIndents(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_backSpaceUnIndents]) {
		instance->SetBackSpaceUnIndents(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_mouseDwellTime]) {
		instance->SetMouseDwellTime(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapMode]) {
		instance->SetWrapMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapVisualFlags]) {
		instance->SetWrapVisualFlags(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapVisualFlagsLocation]) {
		instance->SetWrapVisualFlagsLocation(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_wrapStartIndent]) {
		instance->SetWrapStartIndent(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_layoutCache]) {
		instance->SetLayoutCache(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_scrollWidthTracking]) {
		instance->SetScrollWidthTracking(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_endAtLastLine]) {
		instance->SetEndAtLastLine(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_vScrollBar]) {
		instance->SetVScrollBar(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_twoPhaseDraw]) {
		instance->SetTwoPhaseDraw(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_viewEOL]) {
		instance->SetViewEOL(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_docPointer]) {
		instance->SetDocPointer(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeColumn]) {
		instance->SetEdgeColumn(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeMode]) {
		instance->SetEdgeMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_edgeColour]) {
		instance->SetEdgeColour(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_zoom]) {
		instance->SetZoom(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_modEventMask]) {
		instance->SetModEventMask(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_focus]) {
		instance->SetFocus(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_status]) {
		instance->SetStatus(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_mouseDownCaptures]) {
		instance->SetMouseDownCaptures(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_cursor]) {
		instance->SetCursor(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_controlCharSymbol]) {
		instance->SetControlCharSymbol(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_printWrapMode]) {
		instance->SetPrintWrapMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveFore]) {
		instance->SetHotspotActiveFore(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveBack]) {
		instance->SetHotspotActiveBack(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotActiveUnderline]) {
		instance->SetHotspotActiveUnderline(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_hotspotSingleLine]) {
		instance->SetHotspotSingleLine(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionMode]) {
		instance->SetSelectionMode(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretSticky]) {
		instance->SetCaretSticky(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_pasteConvertEndings]) {
		instance->SetPasteConvertEndings(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretLineBackAlpha]) {
		instance->SetCaretLineBackAlpha(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_caretStyle]) {
		instance->SetCaretStyle(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indicatorCurrent]) {
		instance->SetIndicatorCurrent(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_indicatorValue]) {
		instance->SetIndicatorValue(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_positionCache]) {
		instance->SetPositionCache(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_keysUnicode]) {
		instance->SetKeysUnicode(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_lexer]) {
		instance->SetLexer(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_currentPos]) {
		instance->SetCurrentPos(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_anchor]) {
		instance->SetAnchor(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_readOnly]) {
		instance->SetReadOnly(NPVARIANT_TO_BOOLEAN(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionStart]) {
		instance->SetSelectionStart(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_selectionEnd]) {
		instance->SetSelectionEnd(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_scrollWidth]) {
		instance->SetScrollWidth(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	if (name == _ISciMoz_pluginPropertyIdentifiers[_ISciMoz_xOffset]) {
		instance->SetXOffset(NPVARIANT_TO_INT32(*variant));
		VOID_TO_NPVARIANT(*variant);
		return true;
	}
	
	return false;
}


bool ISciMoz_pluginInvoke(NPObject *obj, NPIdentifier name, const NPVariant *args, uint32_t argCount, NPVariant *result) {
	ISciMoz *instance = (ISciMoz *) obj;
	
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hookEvents]) {
		instance->hookEvents((ISciMozEvents*)NPVARIANT_TO_OBJECT(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hookEventsWithStrongReference]) {
		instance->hookEventsWithStrongReference((ISciMozEvents*)NPVARIANT_TO_OBJECT(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hookSomeEvents]) {
		instance->hookSomeEvents((ISciMozEvents*)NPVARIANT_TO_OBJECT(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hookSomeEventsWithStrongReference]) {
		instance->hookSomeEventsWithStrongReference((ISciMozEvents*)NPVARIANT_TO_OBJECT(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_unhookEvents]) {
		instance->unhookEvents((ISciMozEvents*)NPVARIANT_TO_OBJECT(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setCommandUpdateTarget]) {
		instance->setCommandUpdateTarget(NPVARIANT_TO_OBJECT(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_sendUpdateCommands]) {
		instance->sendUpdateCommands(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getStyledText]) {
		instance->getStyledText(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]),NPVARIANT_TO_INT32(args[2]),NPVARIANT_TO_INT32(args[3]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getCurLine]) {
		int32 returnval = instance->getCurLine(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_assignCmdKey]) {
		instance->assignCmdKey(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]),NPVARIANT_TO_INT32(args[2]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clearCmdKey]) {
		instance->clearCmdKey(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getTextRange]) {
		std::string returnval = instance->getTextRange(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		STRINGZ_TO_NPVARIANT(returnval.c_str(), *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_doBraceMatch]) {
		instance->doBraceMatch();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getWCharAt]) {
		char returnval = instance->getWCharAt(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charPosAtPosition]) {
		int32 returnval = instance->charPosAtPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_addChar]) {
		instance->addChar(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLine]) {
		int32 returnval = instance->getLine(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_endDrop]) {
		instance->endDrop();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_handleTextEvent]) {
		std::string returnval = instance->handleTextEvent(NPVARIANT_TO_OBJECT(args[0]));
		STRINGZ_TO_NPVARIANT(returnval.c_str(), *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_addStyledText]) {
		instance->addStyledText(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clearAll]) {
		instance->clearAll();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clearDocumentStyle]) {
		instance->clearDocumentStyle();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getCharAt]) {
		int32 returnval = instance->getCharAt(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getStyleAt]) {
		int32 returnval = instance->getStyleAt(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_redo]) {
		instance->redo();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setSavePoint]) {
		instance->setSavePoint();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_canRedo]) {
		bool returnval = instance->canRedo();
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerLineFromHandle]) {
		int32 returnval = instance->markerLineFromHandle(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerDeleteHandle]) {
		instance->markerDeleteHandle(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_positionFromPoint]) {
		int32 returnval = instance->positionFromPoint(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_positionFromPointClose]) {
		int32 returnval = instance->positionFromPointClose(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_convertEOLs]) {
		instance->convertEOLs(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerDefine]) {
		instance->markerDefine(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerSetFore]) {
		instance->markerSetFore(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerSetBack]) {
		instance->markerSetBack(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerDelete]) {
		instance->markerDelete(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerDeleteAll]) {
		instance->markerDeleteAll(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerGet]) {
		int32 returnval = instance->markerGet(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerPrevious]) {
		int32 returnval = instance->markerPrevious(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerDefinePixmap]) {
		instance->markerDefinePixmap(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerAddSet]) {
		instance->markerAddSet(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerSetAlpha]) {
		instance->markerSetAlpha(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setMarginTypeN]) {
		instance->setMarginTypeN(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getMarginTypeN]) {
		int32 returnval = instance->getMarginTypeN(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setMarginWidthN]) {
		instance->setMarginWidthN(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getMarginWidthN]) {
		int32 returnval = instance->getMarginWidthN(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setMarginMaskN]) {
		instance->setMarginMaskN(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getMarginMaskN]) {
		int32 returnval = instance->getMarginMaskN(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setMarginSensitiveN]) {
		instance->setMarginSensitiveN(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getMarginSensitiveN]) {
		bool returnval = instance->getMarginSensitiveN(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleClearAll]) {
		instance->styleClearAll();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetBack]) {
		instance->styleSetBack(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetBold]) {
		instance->styleSetBold(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetItalic]) {
		instance->styleSetItalic(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetSize]) {
		instance->styleSetSize(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetFont]) {
		instance->styleSetFont(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetEOLFilled]) {
		instance->styleSetEOLFilled(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleResetDefault]) {
		instance->styleResetDefault();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetUnderline]) {
		instance->styleSetUnderline(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetFore]) {
		int32 returnval = instance->styleGetFore(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetBack]) {
		int32 returnval = instance->styleGetBack(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetBold]) {
		bool returnval = instance->styleGetBold(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetItalic]) {
		bool returnval = instance->styleGetItalic(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetSize]) {
		int32 returnval = instance->styleGetSize(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetFont]) {
		int32 returnval = instance->styleGetFont(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetEOLFilled]) {
		bool returnval = instance->styleGetEOLFilled(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetUnderline]) {
		bool returnval = instance->styleGetUnderline(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetCase]) {
		int32 returnval = instance->styleGetCase(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetCharacterSet]) {
		int32 returnval = instance->styleGetCharacterSet(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetVisible]) {
		bool returnval = instance->styleGetVisible(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetChangeable]) {
		bool returnval = instance->styleGetChangeable(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleGetHotSpot]) {
		bool returnval = instance->styleGetHotSpot(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetCase]) {
		instance->styleSetCase(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetCharacterSet]) {
		instance->styleSetCharacterSet(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetHotSpot]) {
		instance->styleSetHotSpot(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setSelFore]) {
		instance->setSelFore(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setSelBack]) {
		instance->setSelBack(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clearAllCmdKeys]) {
		instance->clearAllCmdKeys();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setStylingEx]) {
		instance->setStylingEx(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetVisible]) {
		instance->styleSetVisible(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setWordChars]) {
		instance->setWordChars(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_beginUndoAction]) {
		instance->beginUndoAction();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_endUndoAction]) {
		instance->endUndoAction();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicSetStyle]) {
		instance->indicSetStyle(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicGetStyle]) {
		int32 returnval = instance->indicGetStyle(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicSetFore]) {
		instance->indicSetFore(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicGetFore]) {
		int32 returnval = instance->indicGetFore(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicSetUnder]) {
		instance->indicSetUnder(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicGetUnder]) {
		bool returnval = instance->indicGetUnder(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setWhitespaceFore]) {
		instance->setWhitespaceFore(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setWhitespaceBack]) {
		instance->setWhitespaceBack(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setLineState]) {
		instance->setLineState(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineState]) {
		int32 returnval = instance->getLineState(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetChangeable]) {
		instance->styleSetChangeable(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCShow]) {
		instance->autoCShow(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCCancel]) {
		instance->autoCCancel();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCActive]) {
		bool returnval = instance->autoCActive();
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCPosStart]) {
		int32 returnval = instance->autoCPosStart();
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCComplete]) {
		instance->autoCComplete();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCStops]) {
		instance->autoCStops(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCSelect]) {
		instance->autoCSelect(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCSetFillUps]) {
		instance->autoCSetFillUps(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_userListShow]) {
		instance->userListShow(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_registerImage]) {
		instance->registerImage(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clearRegisteredImages]) {
		instance->clearRegisteredImages();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setLineIndentation]) {
		instance->setLineIndentation(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineIndentation]) {
		int32 returnval = instance->getLineIndentation(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineIndentPosition]) {
		int32 returnval = instance->getLineIndentPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getColumn]) {
		int32 returnval = instance->getColumn(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineEndPosition]) {
		int32 returnval = instance->getLineEndPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setSel]) {
		instance->setSel(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pointXFromPosition]) {
		int32 returnval = instance->pointXFromPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pointYFromPosition]) {
		int32 returnval = instance->pointYFromPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineFromPosition]) {
		int32 returnval = instance->lineFromPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_positionFromLine]) {
		int32 returnval = instance->positionFromLine(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineScroll]) {
		instance->lineScroll(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_scrollCaret]) {
		instance->scrollCaret();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_canPaste]) {
		bool returnval = instance->canPaste();
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_canUndo]) {
		bool returnval = instance->canUndo();
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_emptyUndoBuffer]) {
		instance->emptyUndoBuffer();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_undo]) {
		instance->undo();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_cut]) {
		instance->cut();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_copy]) {
		instance->copy();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_paste]) {
		instance->paste();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_clear]) {
		instance->clear();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_replaceTarget]) {
		int32 returnval = instance->replaceTarget(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_replaceTargetRE]) {
		int32 returnval = instance->replaceTargetRE(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_searchInTarget]) {
		int32 returnval = instance->searchInTarget(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipShow]) {
		instance->callTipShow(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipCancel]) {
		instance->callTipCancel();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipActive]) {
		bool returnval = instance->callTipActive();
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipPosStart]) {
		int32 returnval = instance->callTipPosStart();
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipSetHlt]) {
		instance->callTipSetHlt(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipSetBack]) {
		instance->callTipSetBack(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipSetFore]) {
		instance->callTipSetFore(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipSetForeHlt]) {
		instance->callTipSetForeHlt(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_callTipUseStyle]) {
		instance->callTipUseStyle(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_visibleFromDocLine]) {
		int32 returnval = instance->visibleFromDocLine(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_docLineFromVisible]) {
		int32 returnval = instance->docLineFromVisible(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wrapCount]) {
		int32 returnval = instance->wrapCount(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setFoldLevel]) {
		instance->setFoldLevel(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getFoldLevel]) {
		int32 returnval = instance->getFoldLevel(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLastChild]) {
		int32 returnval = instance->getLastChild(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getFoldParent]) {
		int32 returnval = instance->getFoldParent(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_showLines]) {
		instance->showLines(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hideLines]) {
		instance->hideLines(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineVisible]) {
		bool returnval = instance->getLineVisible(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setFoldExpanded]) {
		instance->setFoldExpanded(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getFoldExpanded]) {
		bool returnval = instance->getFoldExpanded(NPVARIANT_TO_INT32(args[0]));
		BOOLEAN_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_toggleFold]) {
		instance->toggleFold(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_ensureVisible]) {
		instance->ensureVisible(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setFoldFlags]) {
		instance->setFoldFlags(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_ensureVisibleEnforcePolicy]) {
		instance->ensureVisibleEnforcePolicy(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordStartPosition]) {
		int32 returnval = instance->wordStartPosition(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordEndPosition]) {
		int32 returnval = instance->wordEndPosition(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_BOOLEAN(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_textWidth]) {
		int32 returnval = instance->textWidth(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_textHeight]) {
		int32 returnval = instance->textHeight(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_appendText]) {
		instance->appendText(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_targetFromSelection]) {
		instance->targetFromSelection();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_linesJoin]) {
		instance->linesJoin();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_linesSplit]) {
		instance->linesSplit(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setFoldMarginColour]) {
		instance->setFoldMarginColour(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setFoldMarginHiColour]) {
		instance->setFoldMarginHiColour(NPVARIANT_TO_BOOLEAN(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineDown]) {
		instance->lineDown();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineDownExtend]) {
		instance->lineDownExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineUp]) {
		instance->lineUp();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineUpExtend]) {
		instance->lineUpExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charLeft]) {
		instance->charLeft();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charLeftExtend]) {
		instance->charLeftExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charRight]) {
		instance->charRight();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charRightExtend]) {
		instance->charRightExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordLeft]) {
		instance->wordLeft();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordLeftExtend]) {
		instance->wordLeftExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordRight]) {
		instance->wordRight();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordRightExtend]) {
		instance->wordRightExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeExtend]) {
		instance->homeExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEnd]) {
		instance->lineEnd();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndExtend]) {
		instance->lineEndExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_documentStart]) {
		instance->documentStart();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_documentStartExtend]) {
		instance->documentStartExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_documentEnd]) {
		instance->documentEnd();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_documentEndExtend]) {
		instance->documentEndExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageUp]) {
		instance->pageUp();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageUpExtend]) {
		instance->pageUpExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageDown]) {
		instance->pageDown();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageDownExtend]) {
		instance->pageDownExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_editToggleOvertype]) {
		instance->editToggleOvertype();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_cancel]) {
		instance->cancel();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_tab]) {
		instance->tab();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_backTab]) {
		instance->backTab();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_formFeed]) {
		instance->formFeed();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_vCHome]) {
		instance->vCHome();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_vCHomeExtend]) {
		instance->vCHomeExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_zoomIn]) {
		instance->zoomIn();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_zoomOut]) {
		instance->zoomOut();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_delWordLeft]) {
		instance->delWordLeft();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_delWordRight]) {
		instance->delWordRight();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_delWordRightEnd]) {
		instance->delWordRightEnd();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineCut]) {
		instance->lineCut();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineDelete]) {
		instance->lineDelete();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineTranspose]) {
		instance->lineTranspose();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineDuplicate]) {
		instance->lineDuplicate();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lowerCase]) {
		instance->lowerCase();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_upperCase]) {
		instance->upperCase();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineScrollDown]) {
		instance->lineScrollDown();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineScrollUp]) {
		instance->lineScrollUp();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_deleteBackNotLine]) {
		instance->deleteBackNotLine();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeDisplay]) {
		instance->homeDisplay();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeDisplayExtend]) {
		instance->homeDisplayExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndDisplay]) {
		instance->lineEndDisplay();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndDisplayExtend]) {
		instance->lineEndDisplayExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeWrap]) {
		instance->homeWrap();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeWrapExtend]) {
		instance->homeWrapExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndWrap]) {
		instance->lineEndWrap();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndWrapExtend]) {
		instance->lineEndWrapExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_vCHomeWrap]) {
		instance->vCHomeWrap();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_vCHomeWrapExtend]) {
		instance->vCHomeWrapExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineCopy]) {
		instance->lineCopy();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_moveCaretInsideView]) {
		instance->moveCaretInsideView();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineLength]) {
		int32 returnval = instance->lineLength(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_braceHighlight]) {
		instance->braceHighlight(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_braceBadLight]) {
		instance->braceBadLight(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_braceMatch]) {
		int32 returnval = instance->braceMatch(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_searchAnchor]) {
		instance->searchAnchor();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_searchNext]) {
		int32 returnval = instance->searchNext(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_searchPrev]) {
		int32 returnval = instance->searchPrev(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_usePopUp]) {
		instance->usePopUp(NPVARIANT_TO_BOOLEAN(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_createDocument]) {
		int32 returnval = instance->createDocument();
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_addRefDocument]) {
		instance->addRefDocument(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_releaseDocument]) {
		instance->releaseDocument(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordPartLeft]) {
		instance->wordPartLeft();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordPartLeftExtend]) {
		instance->wordPartLeftExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordPartRight]) {
		instance->wordPartRight();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordPartRightExtend]) {
		instance->wordPartRightExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setVisiblePolicy]) {
		instance->setVisiblePolicy(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_delLineLeft]) {
		instance->delLineLeft();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_delLineRight]) {
		instance->delLineRight();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_chooseCaretX]) {
		instance->chooseCaretX();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_grabFocus]) {
		instance->grabFocus();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setXCaretPolicy]) {
		instance->setXCaretPolicy(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setYCaretPolicy]) {
		instance->setYCaretPolicy(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_paraDown]) {
		instance->paraDown();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_paraDownExtend]) {
		instance->paraDownExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_paraUp]) {
		instance->paraUp();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_paraUpExtend]) {
		instance->paraUpExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_positionBefore]) {
		int32 returnval = instance->positionBefore(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_positionAfter]) {
		int32 returnval = instance->positionAfter(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_copyRange]) {
		instance->copyRange(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_copyText]) {
		instance->copyText(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineSelStartPosition]) {
		int32 returnval = instance->getLineSelStartPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getLineSelEndPosition]) {
		int32 returnval = instance->getLineSelEndPosition(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineDownRectExtend]) {
		instance->lineDownRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineUpRectExtend]) {
		instance->lineUpRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charLeftRectExtend]) {
		instance->charLeftRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_charRightRectExtend]) {
		instance->charRightRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_homeRectExtend]) {
		instance->homeRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_vCHomeRectExtend]) {
		instance->vCHomeRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_lineEndRectExtend]) {
		instance->lineEndRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageUpRectExtend]) {
		instance->pageUpRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_pageDownRectExtend]) {
		instance->pageDownRectExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_stutteredPageUp]) {
		instance->stutteredPageUp();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_stutteredPageUpExtend]) {
		instance->stutteredPageUpExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_stutteredPageDown]) {
		instance->stutteredPageDown();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_stutteredPageDownExtend]) {
		instance->stutteredPageDownExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordLeftEnd]) {
		instance->wordLeftEnd();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordLeftEndExtend]) {
		instance->wordLeftEndExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordRightEnd]) {
		instance->wordRightEnd();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_wordRightEndExtend]) {
		instance->wordRightEndExtend();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setWhitespaceChars]) {
		instance->setWhitespaceChars(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setCharsDefault]) {
		instance->setCharsDefault();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_autoCGetCurrent]) {
		int32 returnval = instance->autoCGetCurrent();
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_allocate]) {
		instance->allocate(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_targetAsUTF8]) {
		int32 returnval = instance->targetAsUTF8(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setLengthForEncode]) {
		instance->setLengthForEncode(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_encodedFromUTF8]) {
		int32 returnval = instance->encodedFromUTF8(NPStringToString(NPVARIANT_TO_STRING(args[0])),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_findColumn]) {
		int32 returnval = instance->findColumn(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_toggleCaretSticky]) {
		instance->toggleCaretSticky();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_selectionDuplicate]) {
		instance->selectionDuplicate();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorFillRange]) {
		instance->indicatorFillRange(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorClearRange]) {
		instance->indicatorClearRange(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorAllOnFor]) {
		int32 returnval = instance->indicatorAllOnFor(NPVARIANT_TO_INT32(args[0]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorValueAt]) {
		int32 returnval = instance->indicatorValueAt(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorStart]) {
		int32 returnval = instance->indicatorStart(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_indicatorEnd]) {
		int32 returnval = instance->indicatorEnd(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_copyAllowLine]) {
		instance->copyAllowLine();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_startRecord]) {
		instance->startRecord();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_stopRecord]) {
		instance->stopRecord();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_colourise]) {
		instance->colourise(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setProperty]) {
		instance->setProperty(NPStringToString(NPVARIANT_TO_STRING(args[0])),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setKeyWords]) {
		instance->setKeyWords(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setLexerLanguage]) {
		instance->setLexerLanguage(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_loadLexerLibrary]) {
		instance->loadLexerLibrary(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getProperty]) {
		int32 returnval = instance->getProperty(NPStringToString(NPVARIANT_TO_STRING(args[0])),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getPropertyExpanded]) {
		int32 returnval = instance->getPropertyExpanded(NPStringToString(NPVARIANT_TO_STRING(args[0])),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_getPropertyInt]) {
		int32 returnval = instance->getPropertyInt(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setCaretPolicy]) {
		instance->setCaretPolicy(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_addText]) {
		instance->addText(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_insertText]) {
		instance->insertText(NPVARIANT_TO_INT32(args[0]),NPStringToString(NPVARIANT_TO_STRING(args[1])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_selectAll]) {
		instance->selectAll();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_gotoLine]) {
		instance->gotoLine(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_gotoPos]) {
		instance->gotoPos(NPVARIANT_TO_INT32(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_startStyling]) {
		instance->startStyling(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_setStyling]) {
		instance->setStyling(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerAdd]) {
		int32 returnval = instance->markerAdd(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_markerNext]) {
		int32 returnval = instance->markerNext(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		INT32_TO_NPVARIANT(returnval, *result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_styleSetFore]) {
		instance->styleSetFore(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_hideSelection]) {
		instance->hideSelection(NPVARIANT_TO_BOOLEAN(args[0]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_replaceSel]) {
		instance->replaceSel(NPStringToString(NPVARIANT_TO_STRING(args[0])));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_deleteBack]) {
		instance->deleteBack();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_newLine]) {
		instance->newLine();
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_buttonDown]) {
		instance->buttonDown(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]),NPVARIANT_TO_INT32(args[2]),NPVARIANT_TO_INT32(args[3]),NPVARIANT_TO_BOOLEAN(args[4]),NPVARIANT_TO_BOOLEAN(args[5]),NPVARIANT_TO_BOOLEAN(args[6]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_buttonUp]) {
		instance->buttonUp(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]),NPVARIANT_TO_INT32(args[2]),NPVARIANT_TO_INT32(args[3]),NPVARIANT_TO_BOOLEAN(args[4]),NPVARIANT_TO_BOOLEAN(args[5]),NPVARIANT_TO_BOOLEAN(args[6]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	if (name == _ISciMoz_pluginMethodIdentifiers[_ISciMoz_buttonMove]) {
		instance->buttonMove(NPVARIANT_TO_INT32(args[0]),NPVARIANT_TO_INT32(args[1]));
		VOID_TO_NPVARIANT(*result);
		
		return true;
	}
	
	return false;
}