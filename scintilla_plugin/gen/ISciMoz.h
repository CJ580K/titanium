/*
 * WARNING this file was generated by Appcelerator's idl2npapi
 */
#ifndef _ISCIMOZ_H
#define _ISCIMOZ_H

#include <npapi.h>
#include <npruntime.h>
#include <string>

#include "ISciMozEvents.h"


class ISciMoz : public NPObject
{
public:
	
	virtual std::string GetName() = 0;
	virtual void SetName(std::string value) = 0;

	virtual std::string GetText() = 0;
	virtual void SetText(std::string value) = 0;

	virtual std::string GetSelText() = 0;

	virtual int32 GetLastCharCodeAdded() = 0;
	virtual void SetLastCharCodeAdded(int32 value) = 0;

	virtual bool GetIsOwned() = 0;

	virtual bool GetVisible() = 0;
	virtual void SetVisible(bool value) = 0;

	virtual bool GetIsTracking() = 0;

	virtual bool GetInDragSession() = 0;

	virtual bool GetUndoCollection() = 0;
	virtual void SetUndoCollection(bool value) = 0;

	virtual int32 GetViewWS() = 0;
	virtual void SetViewWS(int32 value) = 0;

	virtual int32 GetEndStyled() = 0;

	virtual int32 GetEOLMode() = 0;
	virtual void SetEOLMode(int32 value) = 0;

	virtual bool GetBufferedDraw() = 0;
	virtual void SetBufferedDraw(bool value) = 0;

	virtual int32 GetTabWidth() = 0;
	virtual void SetTabWidth(int32 value) = 0;

	virtual int32 GetSelAlpha() = 0;
	virtual void SetSelAlpha(int32 value) = 0;

	virtual bool GetSelEOLFilled() = 0;
	virtual void SetSelEOLFilled(bool value) = 0;

	virtual int32 GetCaretPeriod() = 0;
	virtual void SetCaretPeriod(int32 value) = 0;

	virtual int32 GetStyleBits() = 0;
	virtual void SetStyleBits(int32 value) = 0;

	virtual int32 GetMaxLineState() = 0;

	virtual bool GetCaretLineVisible() = 0;
	virtual void SetCaretLineVisible(bool value) = 0;

	virtual int32 GetCaretLineBack() = 0;
	virtual void SetCaretLineBack(int32 value) = 0;

	virtual int32 GetAutoCSeparator() = 0;
	virtual void SetAutoCSeparator(int32 value) = 0;

	virtual bool GetAutoCCancelAtStart() = 0;
	virtual void SetAutoCCancelAtStart(bool value) = 0;

	virtual bool GetAutoCChooseSingle() = 0;
	virtual void SetAutoCChooseSingle(bool value) = 0;

	virtual bool GetAutoCIgnoreCase() = 0;
	virtual void SetAutoCIgnoreCase(bool value) = 0;

	virtual bool GetAutoCAutoHide() = 0;
	virtual void SetAutoCAutoHide(bool value) = 0;

	virtual bool GetAutoCDropRestOfWord() = 0;
	virtual void SetAutoCDropRestOfWord(bool value) = 0;

	virtual int32 GetAutoCTypeSeparator() = 0;
	virtual void SetAutoCTypeSeparator(int32 value) = 0;

	virtual int32 GetAutoCMaxWidth() = 0;
	virtual void SetAutoCMaxWidth(int32 value) = 0;

	virtual int32 GetAutoCMaxHeight() = 0;
	virtual void SetAutoCMaxHeight(int32 value) = 0;

	virtual int32 GetIndent() = 0;
	virtual void SetIndent(int32 value) = 0;

	virtual bool GetUseTabs() = 0;
	virtual void SetUseTabs(bool value) = 0;

	virtual bool GetHScrollBar() = 0;
	virtual void SetHScrollBar(bool value) = 0;

	virtual int32 GetIndentationGuides() = 0;
	virtual void SetIndentationGuides(int32 value) = 0;

	virtual int32 GetHighlightGuide() = 0;
	virtual void SetHighlightGuide(int32 value) = 0;

	virtual int32 GetCodePage() = 0;
	virtual void SetCodePage(int32 value) = 0;

	virtual int32 GetCaretFore() = 0;
	virtual void SetCaretFore(int32 value) = 0;

	virtual bool GetUsePalette() = 0;
	virtual void SetUsePalette(bool value) = 0;

	virtual int32 GetPrintMagnification() = 0;
	virtual void SetPrintMagnification(int32 value) = 0;

	virtual int32 GetPrintColourMode() = 0;
	virtual void SetPrintColourMode(int32 value) = 0;

	virtual int32 GetFirstVisibleLine() = 0;

	virtual int32 GetLineCount() = 0;

	virtual int32 GetMarginLeft() = 0;
	virtual void SetMarginLeft(int32 value) = 0;

	virtual int32 GetMarginRight() = 0;
	virtual void SetMarginRight(int32 value) = 0;

	virtual bool GetModify() = 0;

	virtual int32 GetTextLength() = 0;

	virtual int32 GetDirectFunction() = 0;

	virtual int32 GetDirectPointer() = 0;

	virtual bool GetOvertype() = 0;
	virtual void SetOvertype(bool value) = 0;

	virtual int32 GetCaretWidth() = 0;
	virtual void SetCaretWidth(int32 value) = 0;

	virtual int32 GetTargetStart() = 0;
	virtual void SetTargetStart(int32 value) = 0;

	virtual int32 GetTargetEnd() = 0;
	virtual void SetTargetEnd(int32 value) = 0;

	virtual int32 GetSearchFlags() = 0;
	virtual void SetSearchFlags(int32 value) = 0;

	virtual bool GetTabIndents() = 0;
	virtual void SetTabIndents(bool value) = 0;

	virtual bool GetBackSpaceUnIndents() = 0;
	virtual void SetBackSpaceUnIndents(bool value) = 0;

	virtual int32 GetMouseDwellTime() = 0;
	virtual void SetMouseDwellTime(int32 value) = 0;

	virtual int32 GetWrapMode() = 0;
	virtual void SetWrapMode(int32 value) = 0;

	virtual int32 GetWrapVisualFlags() = 0;
	virtual void SetWrapVisualFlags(int32 value) = 0;

	virtual int32 GetWrapVisualFlagsLocation() = 0;
	virtual void SetWrapVisualFlagsLocation(int32 value) = 0;

	virtual int32 GetWrapStartIndent() = 0;
	virtual void SetWrapStartIndent(int32 value) = 0;

	virtual int32 GetLayoutCache() = 0;
	virtual void SetLayoutCache(int32 value) = 0;

	virtual bool GetScrollWidthTracking() = 0;
	virtual void SetScrollWidthTracking(bool value) = 0;

	virtual bool GetEndAtLastLine() = 0;
	virtual void SetEndAtLastLine(bool value) = 0;

	virtual bool GetVScrollBar() = 0;
	virtual void SetVScrollBar(bool value) = 0;

	virtual bool GetTwoPhaseDraw() = 0;
	virtual void SetTwoPhaseDraw(bool value) = 0;

	virtual bool GetViewEOL() = 0;
	virtual void SetViewEOL(bool value) = 0;

	virtual int32 GetDocPointer() = 0;
	virtual void SetDocPointer(int32 value) = 0;

	virtual int32 GetEdgeColumn() = 0;
	virtual void SetEdgeColumn(int32 value) = 0;

	virtual int32 GetEdgeMode() = 0;
	virtual void SetEdgeMode(int32 value) = 0;

	virtual int32 GetEdgeColour() = 0;
	virtual void SetEdgeColour(int32 value) = 0;

	virtual int32 GetLinesOnScreen() = 0;

	virtual bool GetSelectionIsRectangle() = 0;

	virtual int32 GetZoom() = 0;
	virtual void SetZoom(int32 value) = 0;

	virtual int32 GetModEventMask() = 0;
	virtual void SetModEventMask(int32 value) = 0;

	virtual bool GetFocus() = 0;
	virtual void SetFocus(bool value) = 0;

	virtual int32 GetStatus() = 0;
	virtual void SetStatus(int32 value) = 0;

	virtual bool GetMouseDownCaptures() = 0;
	virtual void SetMouseDownCaptures(bool value) = 0;

	virtual int32 GetCursor() = 0;
	virtual void SetCursor(int32 value) = 0;

	virtual int32 GetControlCharSymbol() = 0;
	virtual void SetControlCharSymbol(int32 value) = 0;

	virtual int32 GetPrintWrapMode() = 0;
	virtual void SetPrintWrapMode(int32 value) = 0;

	virtual int32 GetHotspotActiveFore() = 0;
	virtual void SetHotspotActiveFore(int32 value) = 0;

	virtual int32 GetHotspotActiveBack() = 0;
	virtual void SetHotspotActiveBack(int32 value) = 0;

	virtual bool GetHotspotActiveUnderline() = 0;
	virtual void SetHotspotActiveUnderline(bool value) = 0;

	virtual bool GetHotspotSingleLine() = 0;
	virtual void SetHotspotSingleLine(bool value) = 0;

	virtual int32 GetSelectionMode() = 0;
	virtual void SetSelectionMode(int32 value) = 0;

	virtual bool GetCaretSticky() = 0;
	virtual void SetCaretSticky(bool value) = 0;

	virtual bool GetPasteConvertEndings() = 0;
	virtual void SetPasteConvertEndings(bool value) = 0;

	virtual int32 GetCaretLineBackAlpha() = 0;
	virtual void SetCaretLineBackAlpha(int32 value) = 0;

	virtual int32 GetCaretStyle() = 0;
	virtual void SetCaretStyle(int32 value) = 0;

	virtual int32 GetIndicatorCurrent() = 0;
	virtual void SetIndicatorCurrent(int32 value) = 0;

	virtual int32 GetIndicatorValue() = 0;
	virtual void SetIndicatorValue(int32 value) = 0;

	virtual int32 GetPositionCache() = 0;
	virtual void SetPositionCache(int32 value) = 0;

	virtual int32 GetCharacterPointer() = 0;

	virtual bool GetKeysUnicode() = 0;
	virtual void SetKeysUnicode(bool value) = 0;

	virtual int32 GetLexer() = 0;
	virtual void SetLexer(int32 value) = 0;

	virtual int32 GetStyleBitsNeeded() = 0;

	virtual int32 GetLength() = 0;

	virtual int32 GetCurrentPos() = 0;
	virtual void SetCurrentPos(int32 value) = 0;

	virtual int32 GetAnchor() = 0;
	virtual void SetAnchor(int32 value) = 0;

	virtual bool GetReadOnly() = 0;
	virtual void SetReadOnly(bool value) = 0;

	virtual int32 GetSelectionStart() = 0;
	virtual void SetSelectionStart(int32 value) = 0;

	virtual int32 GetSelectionEnd() = 0;
	virtual void SetSelectionEnd(int32 value) = 0;

	virtual int32 GetScrollWidth() = 0;
	virtual void SetScrollWidth(int32 value) = 0;

	virtual int32 GetXOffset() = 0;
	virtual void SetXOffset(int32 value) = 0;

	
	virtual void hookEvents (ISciMozEvents* eventListener) = 0;
	virtual void hookEventsWithStrongReference (ISciMozEvents* eventListener) = 0;
	virtual void hookSomeEvents (ISciMozEvents* eventListener, uint32 mask) = 0;
	virtual void hookSomeEventsWithStrongReference (ISciMozEvents* eventListener, uint32 mask) = 0;
	virtual void unhookEvents (ISciMozEvents* eventListener) = 0;
	virtual void setCommandUpdateTarget (NPObject * window) = 0;
	virtual void sendUpdateCommands (std::string text) = 0;
	virtual void getStyledText (int32 min, int32 max, uint32 long, uint8_t str) = 0;
	virtual int32 getCurLine (std::string text) = 0;
	virtual void assignCmdKey (int32 key, int32 modifiers, int32 msg) = 0;
	virtual void clearCmdKey (int32 key, int32 modifiers) = 0;
	virtual std::string getTextRange (int32 min, int32 max) = 0;
	virtual void doBraceMatch () = 0;
	virtual char getWCharAt (int32 pos) = 0;
	virtual int32 charPosAtPosition (int32 position) = 0;
	virtual void addChar (uint32 ch) = 0;
	virtual int32 getLine (int32 line, std::string text) = 0;
	virtual void endDrop () = 0;
	virtual std::string handleTextEvent (NPObject * event) = 0;
	virtual void addStyledText (int32 length, std::string c) = 0;
	virtual void clearAll () = 0;
	virtual void clearDocumentStyle () = 0;
	virtual int32 getCharAt (int32 pos) = 0;
	virtual int32 getStyleAt (int32 pos) = 0;
	virtual void redo () = 0;
	virtual void setSavePoint () = 0;
	virtual bool canRedo () = 0;
	virtual int32 markerLineFromHandle (int32 handle) = 0;
	virtual void markerDeleteHandle (int32 handle) = 0;
	virtual int32 positionFromPoint (int32 x, int32 y) = 0;
	virtual int32 positionFromPointClose (int32 x, int32 y) = 0;
	virtual void convertEOLs (int32 eolMode) = 0;
	virtual void markerDefine (int32 markerNumber, int32 markerSymbol) = 0;
	virtual void markerSetFore (int32 markerNumber, int32 fore) = 0;
	virtual void markerSetBack (int32 markerNumber, int32 back) = 0;
	virtual void markerDelete (int32 line, int32 markerNumber) = 0;
	virtual void markerDeleteAll (int32 markerNumber) = 0;
	virtual int32 markerGet (int32 line) = 0;
	virtual int32 markerPrevious (int32 lineStart, int32 markerMask) = 0;
	virtual void markerDefinePixmap (int32 markerNumber, std::string pixmap) = 0;
	virtual void markerAddSet (int32 line, int32 set) = 0;
	virtual void markerSetAlpha (int32 markerNumber, int32 alpha) = 0;
	virtual void setMarginTypeN (int32 margin, int32 marginType) = 0;
	virtual int32 getMarginTypeN (int32 margin) = 0;
	virtual void setMarginWidthN (int32 margin, int32 pixelWidth) = 0;
	virtual int32 getMarginWidthN (int32 margin) = 0;
	virtual void setMarginMaskN (int32 margin, int32 mask) = 0;
	virtual int32 getMarginMaskN (int32 margin) = 0;
	virtual void setMarginSensitiveN (int32 margin, bool sensitive) = 0;
	virtual bool getMarginSensitiveN (int32 margin) = 0;
	virtual void styleClearAll () = 0;
	virtual void styleSetBack (int32 style, int32 back) = 0;
	virtual void styleSetBold (int32 style, bool bold) = 0;
	virtual void styleSetItalic (int32 style, bool italic) = 0;
	virtual void styleSetSize (int32 style, int32 sizePoints) = 0;
	virtual void styleSetFont (int32 style, std::string fontName) = 0;
	virtual void styleSetEOLFilled (int32 style, bool filled) = 0;
	virtual void styleResetDefault () = 0;
	virtual void styleSetUnderline (int32 style, bool underline) = 0;
	virtual int32 styleGetFore (int32 style) = 0;
	virtual int32 styleGetBack (int32 style) = 0;
	virtual bool styleGetBold (int32 style) = 0;
	virtual bool styleGetItalic (int32 style) = 0;
	virtual int32 styleGetSize (int32 style) = 0;
	virtual int32 styleGetFont (int32 style, std::string fontName) = 0;
	virtual bool styleGetEOLFilled (int32 style) = 0;
	virtual bool styleGetUnderline (int32 style) = 0;
	virtual int32 styleGetCase (int32 style) = 0;
	virtual int32 styleGetCharacterSet (int32 style) = 0;
	virtual bool styleGetVisible (int32 style) = 0;
	virtual bool styleGetChangeable (int32 style) = 0;
	virtual bool styleGetHotSpot (int32 style) = 0;
	virtual void styleSetCase (int32 style, int32 caseForce) = 0;
	virtual void styleSetCharacterSet (int32 style, int32 characterSet) = 0;
	virtual void styleSetHotSpot (int32 style, bool hotspot) = 0;
	virtual void setSelFore (bool useSetting, int32 fore) = 0;
	virtual void setSelBack (bool useSetting, int32 back) = 0;
	virtual void clearAllCmdKeys () = 0;
	virtual void setStylingEx (int32 length, std::string styles) = 0;
	virtual void styleSetVisible (int32 style, bool visible) = 0;
	virtual void setWordChars (std::string characters) = 0;
	virtual void beginUndoAction () = 0;
	virtual void endUndoAction () = 0;
	virtual void indicSetStyle (int32 indic, int32 style) = 0;
	virtual int32 indicGetStyle (int32 indic) = 0;
	virtual void indicSetFore (int32 indic, int32 fore) = 0;
	virtual int32 indicGetFore (int32 indic) = 0;
	virtual void indicSetUnder (int32 indic, bool under) = 0;
	virtual bool indicGetUnder (int32 indic) = 0;
	virtual void setWhitespaceFore (bool useSetting, int32 fore) = 0;
	virtual void setWhitespaceBack (bool useSetting, int32 back) = 0;
	virtual void setLineState (int32 line, int32 state) = 0;
	virtual int32 getLineState (int32 line) = 0;
	virtual void styleSetChangeable (int32 style, bool changeable) = 0;
	virtual void autoCShow (int32 lenEntered, std::string itemList) = 0;
	virtual void autoCCancel () = 0;
	virtual bool autoCActive () = 0;
	virtual int32 autoCPosStart () = 0;
	virtual void autoCComplete () = 0;
	virtual void autoCStops (std::string characterSet) = 0;
	virtual void autoCSelect (std::string text) = 0;
	virtual void autoCSetFillUps (std::string characterSet) = 0;
	virtual void userListShow (int32 listType, std::string itemList) = 0;
	virtual void registerImage (int32 type, std::string xpmData) = 0;
	virtual void clearRegisteredImages () = 0;
	virtual void setLineIndentation (int32 line, int32 indentSize) = 0;
	virtual int32 getLineIndentation (int32 line) = 0;
	virtual int32 getLineIndentPosition (int32 line) = 0;
	virtual int32 getColumn (int32 pos) = 0;
	virtual int32 getLineEndPosition (int32 line) = 0;
	virtual void setSel (int32 start, int32 end) = 0;
	virtual int32 pointXFromPosition (int32 pos) = 0;
	virtual int32 pointYFromPosition (int32 pos) = 0;
	virtual int32 lineFromPosition (int32 pos) = 0;
	virtual int32 positionFromLine (int32 line) = 0;
	virtual void lineScroll (int32 columns, int32 lines) = 0;
	virtual void scrollCaret () = 0;
	virtual bool canPaste () = 0;
	virtual bool canUndo () = 0;
	virtual void emptyUndoBuffer () = 0;
	virtual void undo () = 0;
	virtual void cut () = 0;
	virtual void copy () = 0;
	virtual void paste () = 0;
	virtual void clear () = 0;
	virtual int32 replaceTarget (int32 length, std::string text) = 0;
	virtual int32 replaceTargetRE (int32 length, std::string text) = 0;
	virtual int32 searchInTarget (int32 length, std::string text) = 0;
	virtual void callTipShow (int32 pos, std::string definition) = 0;
	virtual void callTipCancel () = 0;
	virtual bool callTipActive () = 0;
	virtual int32 callTipPosStart () = 0;
	virtual void callTipSetHlt (int32 start, int32 end) = 0;
	virtual void callTipSetBack (int32 back) = 0;
	virtual void callTipSetFore (int32 fore) = 0;
	virtual void callTipSetForeHlt (int32 fore) = 0;
	virtual void callTipUseStyle (int32 tabSize) = 0;
	virtual int32 visibleFromDocLine (int32 line) = 0;
	virtual int32 docLineFromVisible (int32 lineDisplay) = 0;
	virtual int32 wrapCount (int32 line) = 0;
	virtual void setFoldLevel (int32 line, int32 level) = 0;
	virtual int32 getFoldLevel (int32 line) = 0;
	virtual int32 getLastChild (int32 line, int32 level) = 0;
	virtual int32 getFoldParent (int32 line) = 0;
	virtual void showLines (int32 lineStart, int32 lineEnd) = 0;
	virtual void hideLines (int32 lineStart, int32 lineEnd) = 0;
	virtual bool getLineVisible (int32 line) = 0;
	virtual void setFoldExpanded (int32 line, bool expanded) = 0;
	virtual bool getFoldExpanded (int32 line) = 0;
	virtual void toggleFold (int32 line) = 0;
	virtual void ensureVisible (int32 line) = 0;
	virtual void setFoldFlags (int32 flags) = 0;
	virtual void ensureVisibleEnforcePolicy (int32 line) = 0;
	virtual int32 wordStartPosition (int32 pos, bool onlyWordCharacters) = 0;
	virtual int32 wordEndPosition (int32 pos, bool onlyWordCharacters) = 0;
	virtual int32 textWidth (int32 style, std::string text) = 0;
	virtual int32 textHeight (int32 line) = 0;
	virtual void appendText (int32 length, std::string text) = 0;
	virtual void targetFromSelection () = 0;
	virtual void linesJoin () = 0;
	virtual void linesSplit (int32 pixelWidth) = 0;
	virtual void setFoldMarginColour (bool useSetting, int32 back) = 0;
	virtual void setFoldMarginHiColour (bool useSetting, int32 fore) = 0;
	virtual void lineDown () = 0;
	virtual void lineDownExtend () = 0;
	virtual void lineUp () = 0;
	virtual void lineUpExtend () = 0;
	virtual void charLeft () = 0;
	virtual void charLeftExtend () = 0;
	virtual void charRight () = 0;
	virtual void charRightExtend () = 0;
	virtual void wordLeft () = 0;
	virtual void wordLeftExtend () = 0;
	virtual void wordRight () = 0;
	virtual void wordRightExtend () = 0;
	virtual void homeExtend () = 0;
	virtual void lineEnd () = 0;
	virtual void lineEndExtend () = 0;
	virtual void documentStart () = 0;
	virtual void documentStartExtend () = 0;
	virtual void documentEnd () = 0;
	virtual void documentEndExtend () = 0;
	virtual void pageUp () = 0;
	virtual void pageUpExtend () = 0;
	virtual void pageDown () = 0;
	virtual void pageDownExtend () = 0;
	virtual void editToggleOvertype () = 0;
	virtual void cancel () = 0;
	virtual void tab () = 0;
	virtual void backTab () = 0;
	virtual void formFeed () = 0;
	virtual void vCHome () = 0;
	virtual void vCHomeExtend () = 0;
	virtual void zoomIn () = 0;
	virtual void zoomOut () = 0;
	virtual void delWordLeft () = 0;
	virtual void delWordRight () = 0;
	virtual void delWordRightEnd () = 0;
	virtual void lineCut () = 0;
	virtual void lineDelete () = 0;
	virtual void lineTranspose () = 0;
	virtual void lineDuplicate () = 0;
	virtual void lowerCase () = 0;
	virtual void upperCase () = 0;
	virtual void lineScrollDown () = 0;
	virtual void lineScrollUp () = 0;
	virtual void deleteBackNotLine () = 0;
	virtual void homeDisplay () = 0;
	virtual void homeDisplayExtend () = 0;
	virtual void lineEndDisplay () = 0;
	virtual void lineEndDisplayExtend () = 0;
	virtual void homeWrap () = 0;
	virtual void homeWrapExtend () = 0;
	virtual void lineEndWrap () = 0;
	virtual void lineEndWrapExtend () = 0;
	virtual void vCHomeWrap () = 0;
	virtual void vCHomeWrapExtend () = 0;
	virtual void lineCopy () = 0;
	virtual void moveCaretInsideView () = 0;
	virtual int32 lineLength (int32 line) = 0;
	virtual void braceHighlight (int32 pos1, int32 pos2) = 0;
	virtual void braceBadLight (int32 pos) = 0;
	virtual int32 braceMatch (int32 pos) = 0;
	virtual void searchAnchor () = 0;
	virtual int32 searchNext (int32 flags, std::string text) = 0;
	virtual int32 searchPrev (int32 flags, std::string text) = 0;
	virtual void usePopUp (bool allowPopUp) = 0;
	virtual int32 createDocument () = 0;
	virtual void addRefDocument (int32 doc) = 0;
	virtual void releaseDocument (int32 doc) = 0;
	virtual void wordPartLeft () = 0;
	virtual void wordPartLeftExtend () = 0;
	virtual void wordPartRight () = 0;
	virtual void wordPartRightExtend () = 0;
	virtual void setVisiblePolicy (int32 visiblePolicy, int32 visibleSlop) = 0;
	virtual void delLineLeft () = 0;
	virtual void delLineRight () = 0;
	virtual void chooseCaretX () = 0;
	virtual void grabFocus () = 0;
	virtual void setXCaretPolicy (int32 caretPolicy, int32 caretSlop) = 0;
	virtual void setYCaretPolicy (int32 caretPolicy, int32 caretSlop) = 0;
	virtual void paraDown () = 0;
	virtual void paraDownExtend () = 0;
	virtual void paraUp () = 0;
	virtual void paraUpExtend () = 0;
	virtual int32 positionBefore (int32 pos) = 0;
	virtual int32 positionAfter (int32 pos) = 0;
	virtual void copyRange (int32 start, int32 end) = 0;
	virtual void copyText (int32 length, std::string text) = 0;
	virtual int32 getLineSelStartPosition (int32 line) = 0;
	virtual int32 getLineSelEndPosition (int32 line) = 0;
	virtual void lineDownRectExtend () = 0;
	virtual void lineUpRectExtend () = 0;
	virtual void charLeftRectExtend () = 0;
	virtual void charRightRectExtend () = 0;
	virtual void homeRectExtend () = 0;
	virtual void vCHomeRectExtend () = 0;
	virtual void lineEndRectExtend () = 0;
	virtual void pageUpRectExtend () = 0;
	virtual void pageDownRectExtend () = 0;
	virtual void stutteredPageUp () = 0;
	virtual void stutteredPageUpExtend () = 0;
	virtual void stutteredPageDown () = 0;
	virtual void stutteredPageDownExtend () = 0;
	virtual void wordLeftEnd () = 0;
	virtual void wordLeftEndExtend () = 0;
	virtual void wordRightEnd () = 0;
	virtual void wordRightEndExtend () = 0;
	virtual void setWhitespaceChars (std::string characters) = 0;
	virtual void setCharsDefault () = 0;
	virtual int32 autoCGetCurrent () = 0;
	virtual void allocate (int32 bytes) = 0;
	virtual int32 targetAsUTF8 (std::string s) = 0;
	virtual void setLengthForEncode (int32 bytes) = 0;
	virtual int32 encodedFromUTF8 (std::string utf8, std::string encoded) = 0;
	virtual int32 findColumn (int32 line, int32 column) = 0;
	virtual void toggleCaretSticky () = 0;
	virtual void selectionDuplicate () = 0;
	virtual void indicatorFillRange (int32 position, int32 fillLength) = 0;
	virtual void indicatorClearRange (int32 position, int32 clearLength) = 0;
	virtual int32 indicatorAllOnFor (int32 position) = 0;
	virtual int32 indicatorValueAt (int32 indicator, int32 position) = 0;
	virtual int32 indicatorStart (int32 indicator, int32 position) = 0;
	virtual int32 indicatorEnd (int32 indicator, int32 position) = 0;
	virtual void copyAllowLine () = 0;
	virtual void startRecord () = 0;
	virtual void stopRecord () = 0;
	virtual void colourise (int32 start, int32 end) = 0;
	virtual void setProperty (std::string key, std::string value) = 0;
	virtual void setKeyWords (int32 keywordSet, std::string keyWords) = 0;
	virtual void setLexerLanguage (std::string language) = 0;
	virtual void loadLexerLibrary (std::string path) = 0;
	virtual int32 getProperty (std::string key, std::string buf) = 0;
	virtual int32 getPropertyExpanded (std::string key, std::string buf) = 0;
	virtual int32 getPropertyInt (std::string key) = 0;
	virtual void setCaretPolicy (int32 caretPolicy, int32 caretSlop) = 0;
	virtual void addText (int32 length, std::string text) = 0;
	virtual void insertText (int32 pos, std::string text) = 0;
	virtual void selectAll () = 0;
	virtual void gotoLine (int32 line) = 0;
	virtual void gotoPos (int32 pos) = 0;
	virtual void startStyling (int32 pos, int32 mask) = 0;
	virtual void setStyling (int32 length, int32 style) = 0;
	virtual int32 markerAdd (int32 line, int32 markerNumber) = 0;
	virtual int32 markerNext (int32 lineStart, int32 markerMask) = 0;
	virtual void styleSetFore (int32 style, int32 fore) = 0;
	virtual void hideSelection (bool normal) = 0;
	virtual void replaceSel (std::string text) = 0;
	virtual void deleteBack () = 0;
	virtual void newLine () = 0;
	virtual void buttonDown (int32 x, int32 y, uint16 button, uint32 timeStamp, bool bShift, bool bCtrl, bool bAlt) = 0;
	virtual void buttonUp (int32 x, int32 y, uint16 button, uint32 timeStamp, bool bShift, bool bCtrl, bool bAlt) = 0;
	virtual void buttonMove (int32 x, int32 y) = 0;
	
	static const int32 INVALID_POSITION = -1;
	static const int32 SCWS_INVISIBLE = 0;
	static const int32 SCWS_VISIBLEALWAYS = 1;
	static const int32 SCWS_VISIBLEAFTERINDENT = 2;
	static const int32 SC_EOL_CRLF = 0;
	static const int32 SC_EOL_CR = 1;
	static const int32 SC_EOL_LF = 2;
	static const int32 SC_CP_UTF8 = 65001;
	static const int32 SC_CP_DBCS = 1;
	static const int32 MARKER_MAX = 31;
	static const int32 SC_MARK_CIRCLE = 0;
	static const int32 SC_MARK_ROUNDRECT = 1;
	static const int32 SC_MARK_ARROW = 2;
	static const int32 SC_MARK_SMALLRECT = 3;
	static const int32 SC_MARK_SHORTARROW = 4;
	static const int32 SC_MARK_EMPTY = 5;
	static const int32 SC_MARK_ARROWDOWN = 6;
	static const int32 SC_MARK_MINUS = 7;
	static const int32 SC_MARK_PLUS = 8;
	static const int32 SC_MARK_VLINE = 9;
	static const int32 SC_MARK_LCORNER = 10;
	static const int32 SC_MARK_TCORNER = 11;
	static const int32 SC_MARK_BOXPLUS = 12;
	static const int32 SC_MARK_BOXPLUSCONNECTED = 13;
	static const int32 SC_MARK_BOXMINUS = 14;
	static const int32 SC_MARK_BOXMINUSCONNECTED = 15;
	static const int32 SC_MARK_LCORNERCURVE = 16;
	static const int32 SC_MARK_TCORNERCURVE = 17;
	static const int32 SC_MARK_CIRCLEPLUS = 18;
	static const int32 SC_MARK_CIRCLEPLUSCONNECTED = 19;
	static const int32 SC_MARK_CIRCLEMINUS = 20;
	static const int32 SC_MARK_CIRCLEMINUSCONNECTED = 21;
	static const int32 SC_MARK_BACKGROUND = 22;
	static const int32 SC_MARK_DOTDOTDOT = 23;
	static const int32 SC_MARK_ARROWS = 24;
	static const int32 SC_MARK_PIXMAP = 25;
	static const int32 SC_MARK_FULLRECT = 26;
	static const int32 SC_MARK_LEFTRECT = 27;
	static const int32 SC_MARK_CHARACTER = 10000;
	static const int32 SC_MARKNUM_FOLDEREND = 25;
	static const int32 SC_MARKNUM_FOLDEROPENMID = 26;
	static const int32 SC_MARKNUM_FOLDERMIDTAIL = 27;
	static const int32 SC_MARKNUM_FOLDERTAIL = 28;
	static const int32 SC_MARKNUM_FOLDERSUB = 29;
	static const int32 SC_MARKNUM_FOLDER = 30;
	static const int32 SC_MARKNUM_FOLDEROPEN = 31;
	static const int32 SC_MASK_FOLDERS = 0xFE000000;
	static const int32 SC_MARGIN_SYMBOL = 0;
	static const int32 SC_MARGIN_NUMBER = 1;
	static const int32 SC_MARGIN_BACK = 2;
	static const int32 SC_MARGIN_FORE = 3;
	static const int32 STYLE_DEFAULT = 32;
	static const int32 STYLE_LINENUMBER = 33;
	static const int32 STYLE_BRACELIGHT = 34;
	static const int32 STYLE_BRACEBAD = 35;
	static const int32 STYLE_CONTROLCHAR = 36;
	static const int32 STYLE_INDENTGUIDE = 37;
	static const int32 STYLE_CALLTIP = 38;
	static const int32 STYLE_LASTPREDEFINED = 39;
	static const int32 STYLE_MAX = 255;
	static const int32 SC_CHARSET_ANSI = 0;
	static const int32 SC_CHARSET_DEFAULT = 1;
	static const int32 SC_CHARSET_BALTIC = 186;
	static const int32 SC_CHARSET_CHINESEBIG5 = 136;
	static const int32 SC_CHARSET_EASTEUROPE = 238;
	static const int32 SC_CHARSET_GB2312 = 134;
	static const int32 SC_CHARSET_GREEK = 161;
	static const int32 SC_CHARSET_HANGUL = 129;
	static const int32 SC_CHARSET_MAC = 77;
	static const int32 SC_CHARSET_OEM = 255;
	static const int32 SC_CHARSET_RUSSIAN = 204;
	static const int32 SC_CHARSET_CYRILLIC = 1251;
	static const int32 SC_CHARSET_SHIFTJIS = 128;
	static const int32 SC_CHARSET_SYMBOL = 2;
	static const int32 SC_CHARSET_TURKISH = 162;
	static const int32 SC_CHARSET_JOHAB = 130;
	static const int32 SC_CHARSET_HEBREW = 177;
	static const int32 SC_CHARSET_ARABIC = 178;
	static const int32 SC_CHARSET_VIETNAMESE = 163;
	static const int32 SC_CHARSET_THAI = 222;
	static const int32 SC_CHARSET_8859_15 = 1000;
	static const int32 SC_CASE_MIXED = 0;
	static const int32 SC_CASE_UPPER = 1;
	static const int32 SC_CASE_LOWER = 2;
	static const int32 INDIC_PLAIN = 0;
	static const int32 INDIC_SQUIGGLE = 1;
	static const int32 INDIC_TT = 2;
	static const int32 INDIC_DIAGONAL = 3;
	static const int32 INDIC_STRIKE = 4;
	static const int32 INDIC_HIDDEN = 5;
	static const int32 INDIC_BOX = 6;
	static const int32 INDIC_ROUNDBOX = 7;
	static const int32 INDIC_MAX = 31;
	static const int32 INDIC_CONTAINER = 8;
	static const int32 INDIC0_MASK = 0x20;
	static const int32 INDIC1_MASK = 0x40;
	static const int32 INDIC2_MASK = 0x80;
	static const int32 INDICS_MASK = 0xE0;
	static const int32 SC_IV_NONE = 0;
	static const int32 SC_IV_REAL = 1;
	static const int32 SC_IV_LOOKFORWARD = 2;
	static const int32 SC_IV_LOOKBOTH = 3;
	static const int32 SC_PRINT_NORMAL = 0;
	static const int32 SC_PRINT_INVERTLIGHT = 1;
	static const int32 SC_PRINT_BLACKONWHITE = 2;
	static const int32 SC_PRINT_COLOURONWHITE = 3;
	static const int32 SC_PRINT_COLOURONWHITEDEFAULTBG = 4;
	static const int32 SCFIND_WHOLEWORD = 2;
	static const int32 SCFIND_MATCHCASE = 4;
	static const int32 SCFIND_WORDSTART = 0x00100000;
	static const int32 SCFIND_REGEXP = 0x00200000;
	static const int32 SCFIND_POSIX = 0x00400000;
	static const int32 SC_FOLDLEVELBASE = 0x400;
	static const int32 SC_FOLDLEVELWHITEFLAG = 0x1000;
	static const int32 SC_FOLDLEVELHEADERFLAG = 0x2000;
	static const int32 SC_FOLDLEVELBOXHEADERFLAG = 0x4000;
	static const int32 SC_FOLDLEVELBOXFOOTERFLAG = 0x8000;
	static const int32 SC_FOLDLEVELCONTRACTED = 0x10000;
	static const int32 SC_FOLDLEVELUNINDENT = 0x20000;
	static const int32 SC_FOLDLEVELNUMBERMASK = 0x0FFF;
	static const int32 SC_FOLDFLAG_LINEBEFORE_EXPANDED = 0x0002;
	static const int32 SC_FOLDFLAG_LINEBEFORE_CONTRACTED = 0x0004;
	static const int32 SC_FOLDFLAG_LINEAFTER_EXPANDED = 0x0008;
	static const int32 SC_FOLDFLAG_LINEAFTER_CONTRACTED = 0x0010;
	static const int32 SC_FOLDFLAG_LEVELNUMBERS = 0x0040;
	static const int32 SC_FOLDFLAG_BOX = 0x0001;
	static const int32 SC_TIME_FOREVER = 10000000;
	static const int32 SC_WRAP_NONE = 0;
	static const int32 SC_WRAP_WORD = 1;
	static const int32 SC_WRAP_CHAR = 2;
	static const int32 SC_WRAPVISUALFLAG_NONE = 0x0000;
	static const int32 SC_WRAPVISUALFLAG_END = 0x0001;
	static const int32 SC_WRAPVISUALFLAG_START = 0x0002;
	static const int32 SC_WRAPVISUALFLAGLOC_DEFAULT = 0x0000;
	static const int32 SC_WRAPVISUALFLAGLOC_END_BY_TEXT = 0x0001;
	static const int32 SC_WRAPVISUALFLAGLOC_START_BY_TEXT = 0x0002;
	static const int32 SC_CACHE_NONE = 0;
	static const int32 SC_CACHE_CARET = 1;
	static const int32 SC_CACHE_PAGE = 2;
	static const int32 SC_CACHE_DOCUMENT = 3;
	static const int32 EDGE_NONE = 0;
	static const int32 EDGE_LINE = 1;
	static const int32 EDGE_BACKGROUND = 2;
	static const int32 SC_CURSORNORMAL = -1;
	static const int32 SC_CURSORWAIT = 4;
	static const int32 VISIBLE_SLOP = 0x01;
	static const int32 VISIBLE_STRICT = 0x04;
	static const int32 CARET_SLOP = 0x01;
	static const int32 CARET_STRICT = 0x04;
	static const int32 CARET_JUMPS = 0x10;
	static const int32 CARET_EVEN = 0x08;
	static const int32 SC_SEL_STREAM = 0;
	static const int32 SC_SEL_RECTANGLE = 1;
	static const int32 SC_SEL_LINES = 2;
	static const int32 SC_ALPHA_TRANSPARENT = 0;
	static const int32 SC_ALPHA_OPAQUE = 255;
	static const int32 SC_ALPHA_NOALPHA = 256;
	static const int32 CARETSTYLE_INVISIBLE = 0;
	static const int32 CARETSTYLE_LINE = 1;
	static const int32 CARETSTYLE_BLOCK = 2;
	static const int32 KEYWORDSET_MAX = 8;
	static const int32 SC_MOD_INSERTTEXT = 0x1;
	static const int32 SC_MOD_DELETETEXT = 0x2;
	static const int32 SC_MOD_CHANGESTYLE = 0x4;
	static const int32 SC_MOD_CHANGEFOLD = 0x8;
	static const int32 SC_PERFORMED_USER = 0x10;
	static const int32 SC_PERFORMED_UNDO = 0x20;
	static const int32 SC_PERFORMED_REDO = 0x40;
	static const int32 SC_MULTISTEPUNDOREDO = 0x80;
	static const int32 SC_LASTSTEPINUNDOREDO = 0x100;
	static const int32 SC_MOD_CHANGEMARKER = 0x200;
	static const int32 SC_MOD_BEFOREINSERT = 0x400;
	static const int32 SC_MOD_BEFOREDELETE = 0x800;
	static const int32 SC_MULTILINEUNDOREDO = 0x1000;
	static const int32 SC_STARTACTION = 0x2000;
	static const int32 SC_MOD_CHANGEINDICATOR = 0x4000;
	static const int32 SC_MOD_CHANGELINESTATE = 0x8000;
	static const int32 SC_MODEVENTMASKALL = 0xFFFF;
	static const int32 SCEN_CHANGE = 768;
	static const int32 SCEN_SETFOCUS = 512;
	static const int32 SCEN_KILLFOCUS = 256;
	static const int32 SCK_DOWN = 300;
	static const int32 SCK_UP = 301;
	static const int32 SCK_LEFT = 302;
	static const int32 SCK_RIGHT = 303;
	static const int32 SCK_HOME = 304;
	static const int32 SCK_END = 305;
	static const int32 SCK_PRIOR = 306;
	static const int32 SCK_NEXT = 307;
	static const int32 SCK_DELETE = 308;
	static const int32 SCK_INSERT = 309;
	static const int32 SCK_ESCAPE = 7;
	static const int32 SCK_BACK = 8;
	static const int32 SCK_TAB = 9;
	static const int32 SCK_RETURN = 13;
	static const int32 SCK_ADD = 310;
	static const int32 SCK_SUBTRACT = 311;
	static const int32 SCK_DIVIDE = 312;
	static const int32 SCK_WIN = 313;
	static const int32 SCK_RWIN = 314;
	static const int32 SCK_MENU = 315;
	static const int32 SCMOD_NORM = 0;
	static const int32 SCMOD_SHIFT = 1;
	static const int32 SCMOD_CTRL = 2;
	static const int32 SCMOD_ALT = 4;
	static const int32 SCLEX_CONTAINER = 0;
	static const int32 SCLEX_NULL = 1;
	static const int32 SCLEX_PYTHON = 2;
	static const int32 SCLEX_CPP = 3;
	static const int32 SCLEX_HTML = 4;
	static const int32 SCLEX_XML = 5;
	static const int32 SCLEX_PERL = 6;
	static const int32 SCLEX_SQL = 7;
	static const int32 SCLEX_VB = 8;
	static const int32 SCLEX_PROPERTIES = 9;
	static const int32 SCLEX_ERRORLIST = 10;
	static const int32 SCLEX_MAKEFILE = 11;
	static const int32 SCLEX_BATCH = 12;
	static const int32 SCLEX_XCODE = 13;
	static const int32 SCLEX_LATEX = 14;
	static const int32 SCLEX_LUA = 15;
	static const int32 SCLEX_DIFF = 16;
	static const int32 SCLEX_CONF = 17;
	static const int32 SCLEX_PASCAL = 18;
	static const int32 SCLEX_AVE = 19;
	static const int32 SCLEX_ADA = 20;
	static const int32 SCLEX_LISP = 21;
	static const int32 SCLEX_RUBY = 22;
	static const int32 SCLEX_EIFFEL = 23;
	static const int32 SCLEX_EIFFELKW = 24;
	static const int32 SCLEX_TCL = 25;
	static const int32 SCLEX_NNCRONTAB = 26;
	static const int32 SCLEX_BULLANT = 27;
	static const int32 SCLEX_VBSCRIPT = 28;
	static const int32 SCLEX_BAAN = 31;
	static const int32 SCLEX_MATLAB = 32;
	static const int32 SCLEX_SCRIPTOL = 33;
	static const int32 SCLEX_ASM = 34;
	static const int32 SCLEX_CPPNOCASE = 35;
	static const int32 SCLEX_FORTRAN = 36;
	static const int32 SCLEX_F77 = 37;
	static const int32 SCLEX_CSS = 38;
	static const int32 SCLEX_POV = 39;
	static const int32 SCLEX_LOUT = 40;
	static const int32 SCLEX_ESCRIPT = 41;
	static const int32 SCLEX_PS = 42;
	static const int32 SCLEX_NSIS = 43;
	static const int32 SCLEX_MMIXAL = 44;
	static const int32 SCLEX_CLW = 45;
	static const int32 SCLEX_CLWNOCASE = 46;
	static const int32 SCLEX_LOT = 47;
	static const int32 SCLEX_YAML = 48;
	static const int32 SCLEX_TEX = 49;
	static const int32 SCLEX_METAPOST = 50;
	static const int32 SCLEX_POWERBASIC = 51;
	static const int32 SCLEX_FORTH = 52;
	static const int32 SCLEX_ERLANG = 53;
	static const int32 SCLEX_OCTAVE = 54;
	static const int32 SCLEX_MSSQL = 55;
	static const int32 SCLEX_VERILOG = 56;
	static const int32 SCLEX_KIX = 57;
	static const int32 SCLEX_GUI4CLI = 58;
	static const int32 SCLEX_SPECMAN = 59;
	static const int32 SCLEX_AU3 = 60;
	static const int32 SCLEX_APDL = 61;
	static const int32 SCLEX_BASH = 62;
	static const int32 SCLEX_ASN1 = 63;
	static const int32 SCLEX_VHDL = 64;
	static const int32 SCLEX_CAML = 65;
	static const int32 SCLEX_BLITZBASIC = 66;
	static const int32 SCLEX_PUREBASIC = 67;
	static const int32 SCLEX_HASKELL = 68;
	static const int32 SCLEX_PHPSCRIPT = 69;
	static const int32 SCLEX_TADS3 = 70;
	static const int32 SCLEX_REBOL = 71;
	static const int32 SCLEX_SMALLTALK = 72;
	static const int32 SCLEX_FLAGSHIP = 73;
	static const int32 SCLEX_CSOUND = 74;
	static const int32 SCLEX_FREEBASIC = 75;
	static const int32 SCLEX_INNOSETUP = 76;
	static const int32 SCLEX_OPAL = 77;
	static const int32 SCLEX_SPICE = 78;
	static const int32 SCLEX_D = 79;
	static const int32 SCLEX_CMAKE = 80;
	static const int32 SCLEX_GAP = 81;
	static const int32 SCLEX_PLM = 82;
	static const int32 SCLEX_PROGRESS = 83;
	static const int32 SCLEX_ABAQUS = 84;
	static const int32 SCLEX_ASYMPTOTE = 85;
	static const int32 SCLEX_R = 86;
	static const int32 SCLEX_MAGIK = 87;
	static const int32 SCLEX_POWERSHELL = 88;
	static const int32 SCLEX_AUTOMATIC = 1000;
	static const int32 SCE_P_DEFAULT = 0;
	static const int32 SCE_P_COMMENTLINE = 1;
	static const int32 SCE_P_NUMBER = 2;
	static const int32 SCE_P_STRING = 3;
	static const int32 SCE_P_CHARACTER = 4;
	static const int32 SCE_P_WORD = 5;
	static const int32 SCE_P_TRIPLE = 6;
	static const int32 SCE_P_TRIPLEDOUBLE = 7;
	static const int32 SCE_P_CLASSNAME = 8;
	static const int32 SCE_P_DEFNAME = 9;
	static const int32 SCE_P_OPERATOR = 10;
	static const int32 SCE_P_IDENTIFIER = 11;
	static const int32 SCE_P_COMMENTBLOCK = 12;
	static const int32 SCE_P_STRINGEOL = 13;
	static const int32 SCE_P_WORD2 = 14;
	static const int32 SCE_P_DECORATOR = 15;
	static const int32 SCE_C_DEFAULT = 0;
	static const int32 SCE_C_COMMENT = 1;
	static const int32 SCE_C_COMMENTLINE = 2;
	static const int32 SCE_C_COMMENTDOC = 3;
	static const int32 SCE_C_NUMBER = 4;
	static const int32 SCE_C_WORD = 5;
	static const int32 SCE_C_STRING = 6;
	static const int32 SCE_C_CHARACTER = 7;
	static const int32 SCE_C_UUID = 8;
	static const int32 SCE_C_PREPROCESSOR = 9;
	static const int32 SCE_C_OPERATOR = 10;
	static const int32 SCE_C_IDENTIFIER = 11;
	static const int32 SCE_C_STRINGEOL = 12;
	static const int32 SCE_C_VERBATIM = 13;
	static const int32 SCE_C_REGEX = 14;
	static const int32 SCE_C_COMMENTLINEDOC = 15;
	static const int32 SCE_C_WORD2 = 16;
	static const int32 SCE_C_COMMENTDOCKEYWORD = 17;
	static const int32 SCE_C_COMMENTDOCKEYWORDERROR = 18;
	static const int32 SCE_C_GLOBALCLASS = 19;
	static const int32 SCE_D_DEFAULT = 0;
	static const int32 SCE_D_COMMENT = 1;
	static const int32 SCE_D_COMMENTLINE = 2;
	static const int32 SCE_D_COMMENTDOC = 3;
	static const int32 SCE_D_COMMENTNESTED = 4;
	static const int32 SCE_D_NUMBER = 5;
	static const int32 SCE_D_WORD = 6;
	static const int32 SCE_D_WORD2 = 7;
	static const int32 SCE_D_WORD3 = 8;
	static const int32 SCE_D_TYPEDEF = 9;
	static const int32 SCE_D_STRING = 10;
	static const int32 SCE_D_STRINGEOL = 11;
	static const int32 SCE_D_CHARACTER = 12;
	static const int32 SCE_D_OPERATOR = 13;
	static const int32 SCE_D_IDENTIFIER = 14;
	static const int32 SCE_D_COMMENTLINEDOC = 15;
	static const int32 SCE_D_COMMENTDOCKEYWORD = 16;
	static const int32 SCE_D_COMMENTDOCKEYWORDERROR = 17;
	static const int32 SCE_TCL_DEFAULT = 0;
	static const int32 SCE_TCL_COMMENT = 1;
	static const int32 SCE_TCL_COMMENTLINE = 2;
	static const int32 SCE_TCL_NUMBER = 3;
	static const int32 SCE_TCL_WORD_IN_QUOTE = 4;
	static const int32 SCE_TCL_IN_QUOTE = 5;
	static const int32 SCE_TCL_OPERATOR = 6;
	static const int32 SCE_TCL_IDENTIFIER = 7;
	static const int32 SCE_TCL_SUBSTITUTION = 8;
	static const int32 SCE_TCL_SUB_BRACE = 9;
	static const int32 SCE_TCL_MODIFIER = 10;
	static const int32 SCE_TCL_EXPAND = 11;
	static const int32 SCE_TCL_WORD = 12;
	static const int32 SCE_TCL_WORD2 = 13;
	static const int32 SCE_TCL_WORD3 = 14;
	static const int32 SCE_TCL_WORD4 = 15;
	static const int32 SCE_TCL_WORD5 = 16;
	static const int32 SCE_TCL_WORD6 = 17;
	static const int32 SCE_TCL_WORD7 = 18;
	static const int32 SCE_TCL_WORD8 = 19;
	static const int32 SCE_TCL_COMMENT_BOX = 20;
	static const int32 SCE_TCL_BLOCK_COMMENT = 21;
	static const int32 SCE_H_DEFAULT = 0;
	static const int32 SCE_H_TAG = 1;
	static const int32 SCE_H_TAGUNKNOWN = 2;
	static const int32 SCE_H_ATTRIBUTE = 3;
	static const int32 SCE_H_ATTRIBUTEUNKNOWN = 4;
	static const int32 SCE_H_NUMBER = 5;
	static const int32 SCE_H_DOUBLESTRING = 6;
	static const int32 SCE_H_SINGLESTRING = 7;
	static const int32 SCE_H_OTHER = 8;
	static const int32 SCE_H_COMMENT = 9;
	static const int32 SCE_H_ENTITY = 10;
	static const int32 SCE_H_TAGEND = 11;
	static const int32 SCE_H_XMLSTART = 12;
	static const int32 SCE_H_XMLEND = 13;
	static const int32 SCE_H_SCRIPT = 14;
	static const int32 SCE_H_ASP = 15;
	static const int32 SCE_H_ASPAT = 16;
	static const int32 SCE_H_CDATA = 17;
	static const int32 SCE_H_QUESTION = 18;
	static const int32 SCE_H_VALUE = 19;
	static const int32 SCE_H_XCCOMMENT = 20;
	static const int32 SCE_H_SGML_DEFAULT = 21;
	static const int32 SCE_H_SGML_COMMAND = 22;
	static const int32 SCE_H_SGML_1ST_PARAM = 23;
	static const int32 SCE_H_SGML_DOUBLESTRING = 24;
	static const int32 SCE_H_SGML_SIMPLESTRING = 25;
	static const int32 SCE_H_SGML_ERROR = 26;
	static const int32 SCE_H_SGML_SPECIAL = 27;
	static const int32 SCE_H_SGML_ENTITY = 28;
	static const int32 SCE_H_SGML_COMMENT = 29;
	static const int32 SCE_H_SGML_1ST_PARAM_COMMENT = 30;
	static const int32 SCE_H_SGML_BLOCK_DEFAULT = 31;
	static const int32 SCE_HJ_START = 40;
	static const int32 SCE_HJ_DEFAULT = 41;
	static const int32 SCE_HJ_COMMENT = 42;
	static const int32 SCE_HJ_COMMENTLINE = 43;
	static const int32 SCE_HJ_COMMENTDOC = 44;
	static const int32 SCE_HJ_NUMBER = 45;
	static const int32 SCE_HJ_WORD = 46;
	static const int32 SCE_HJ_KEYWORD = 47;
	static const int32 SCE_HJ_DOUBLESTRING = 48;
	static const int32 SCE_HJ_SINGLESTRING = 49;
	static const int32 SCE_HJ_SYMBOLS = 50;
	static const int32 SCE_HJ_STRINGEOL = 51;
	static const int32 SCE_HJ_REGEX = 52;
	static const int32 SCE_HJA_START = 55;
	static const int32 SCE_HJA_DEFAULT = 56;
	static const int32 SCE_HJA_COMMENT = 57;
	static const int32 SCE_HJA_COMMENTLINE = 58;
	static const int32 SCE_HJA_COMMENTDOC = 59;
	static const int32 SCE_HJA_NUMBER = 60;
	static const int32 SCE_HJA_WORD = 61;
	static const int32 SCE_HJA_KEYWORD = 62;
	static const int32 SCE_HJA_DOUBLESTRING = 63;
	static const int32 SCE_HJA_SINGLESTRING = 64;
	static const int32 SCE_HJA_SYMBOLS = 65;
	static const int32 SCE_HJA_STRINGEOL = 66;
	static const int32 SCE_HJA_REGEX = 67;
	static const int32 SCE_HB_START = 70;
	static const int32 SCE_HB_DEFAULT = 71;
	static const int32 SCE_HB_COMMENTLINE = 72;
	static const int32 SCE_HB_NUMBER = 73;
	static const int32 SCE_HB_WORD = 74;
	static const int32 SCE_HB_STRING = 75;
	static const int32 SCE_HB_IDENTIFIER = 76;
	static const int32 SCE_HB_STRINGEOL = 77;
	static const int32 SCE_HBA_START = 80;
	static const int32 SCE_HBA_DEFAULT = 81;
	static const int32 SCE_HBA_COMMENTLINE = 82;
	static const int32 SCE_HBA_NUMBER = 83;
	static const int32 SCE_HBA_WORD = 84;
	static const int32 SCE_HBA_STRING = 85;
	static const int32 SCE_HBA_IDENTIFIER = 86;
	static const int32 SCE_HBA_STRINGEOL = 87;
	static const int32 SCE_HP_START = 90;
	static const int32 SCE_HP_DEFAULT = 91;
	static const int32 SCE_HP_COMMENTLINE = 92;
	static const int32 SCE_HP_NUMBER = 93;
	static const int32 SCE_HP_STRING = 94;
	static const int32 SCE_HP_CHARACTER = 95;
	static const int32 SCE_HP_WORD = 96;
	static const int32 SCE_HP_TRIPLE = 97;
	static const int32 SCE_HP_TRIPLEDOUBLE = 98;
	static const int32 SCE_HP_CLASSNAME = 99;
	static const int32 SCE_HP_DEFNAME = 100;
	static const int32 SCE_HP_OPERATOR = 101;
	static const int32 SCE_HP_IDENTIFIER = 102;
	static const int32 SCE_HPHP_COMPLEX_VARIABLE = 104;
	static const int32 SCE_HPA_START = 105;
	static const int32 SCE_HPA_DEFAULT = 106;
	static const int32 SCE_HPA_COMMENTLINE = 107;
	static const int32 SCE_HPA_NUMBER = 108;
	static const int32 SCE_HPA_STRING = 109;
	static const int32 SCE_HPA_CHARACTER = 110;
	static const int32 SCE_HPA_WORD = 111;
	static const int32 SCE_HPA_TRIPLE = 112;
	static const int32 SCE_HPA_TRIPLEDOUBLE = 113;
	static const int32 SCE_HPA_CLASSNAME = 114;
	static const int32 SCE_HPA_DEFNAME = 115;
	static const int32 SCE_HPA_OPERATOR = 116;
	static const int32 SCE_HPA_IDENTIFIER = 117;
	static const int32 SCE_HPHP_DEFAULT = 118;
	static const int32 SCE_HPHP_HSTRING = 119;
	static const int32 SCE_HPHP_SIMPLESTRING = 120;
	static const int32 SCE_HPHP_WORD = 121;
	static const int32 SCE_HPHP_NUMBER = 122;
	static const int32 SCE_HPHP_VARIABLE = 123;
	static const int32 SCE_HPHP_COMMENT = 124;
	static const int32 SCE_HPHP_COMMENTLINE = 125;
	static const int32 SCE_HPHP_HSTRING_VARIABLE = 126;
	static const int32 SCE_HPHP_OPERATOR = 127;
	static const int32 SCE_PL_DEFAULT = 0;
	static const int32 SCE_PL_ERROR = 1;
	static const int32 SCE_PL_COMMENTLINE = 2;
	static const int32 SCE_PL_POD = 3;
	static const int32 SCE_PL_NUMBER = 4;
	static const int32 SCE_PL_WORD = 5;
	static const int32 SCE_PL_STRING = 6;
	static const int32 SCE_PL_CHARACTER = 7;
	static const int32 SCE_PL_PUNCTUATION = 8;
	static const int32 SCE_PL_PREPROCESSOR = 9;
	static const int32 SCE_PL_OPERATOR = 10;
	static const int32 SCE_PL_IDENTIFIER = 11;
	static const int32 SCE_PL_SCALAR = 12;
	static const int32 SCE_PL_ARRAY = 13;
	static const int32 SCE_PL_HASH = 14;
	static const int32 SCE_PL_SYMBOLTABLE = 15;
	static const int32 SCE_PL_VARIABLE_INDEXER = 16;
	static const int32 SCE_PL_REGEX = 17;
	static const int32 SCE_PL_REGSUBST = 18;
	static const int32 SCE_PL_LONGQUOTE = 19;
	static const int32 SCE_PL_BACKTICKS = 20;
	static const int32 SCE_PL_DATASECTION = 21;
	static const int32 SCE_PL_HERE_DELIM = 22;
	static const int32 SCE_PL_HERE_Q = 23;
	static const int32 SCE_PL_HERE_QQ = 24;
	static const int32 SCE_PL_HERE_QX = 25;
	static const int32 SCE_PL_STRING_Q = 26;
	static const int32 SCE_PL_STRING_QQ = 27;
	static const int32 SCE_PL_STRING_QX = 28;
	static const int32 SCE_PL_STRING_QR = 29;
	static const int32 SCE_PL_STRING_QW = 30;
	static const int32 SCE_PL_POD_VERB = 31;
	static const int32 SCE_PL_SUB_PROTOTYPE = 40;
	static const int32 SCE_PL_FORMAT_IDENT = 41;
	static const int32 SCE_PL_FORMAT = 42;
	static const int32 SCE_RB_DEFAULT = 0;
	static const int32 SCE_RB_ERROR = 1;
	static const int32 SCE_RB_COMMENTLINE = 2;
	static const int32 SCE_RB_POD = 3;
	static const int32 SCE_RB_NUMBER = 4;
	static const int32 SCE_RB_WORD = 5;
	static const int32 SCE_RB_STRING = 6;
	static const int32 SCE_RB_CHARACTER = 7;
	static const int32 SCE_RB_CLASSNAME = 8;
	static const int32 SCE_RB_DEFNAME = 9;
	static const int32 SCE_RB_OPERATOR = 10;
	static const int32 SCE_RB_IDENTIFIER = 11;
	static const int32 SCE_RB_REGEX = 12;
	static const int32 SCE_RB_GLOBAL = 13;
	static const int32 SCE_RB_SYMBOL = 14;
	static const int32 SCE_RB_MODULE_NAME = 15;
	static const int32 SCE_RB_INSTANCE_VAR = 16;
	static const int32 SCE_RB_CLASS_VAR = 17;
	static const int32 SCE_RB_BACKTICKS = 18;
	static const int32 SCE_RB_DATASECTION = 19;
	static const int32 SCE_RB_HERE_DELIM = 20;
	static const int32 SCE_RB_HERE_Q = 21;
	static const int32 SCE_RB_HERE_QQ = 22;
	static const int32 SCE_RB_HERE_QX = 23;
	static const int32 SCE_RB_STRING_Q = 24;
	static const int32 SCE_RB_STRING_QQ = 25;
	static const int32 SCE_RB_STRING_QX = 26;
	static const int32 SCE_RB_STRING_QR = 27;
	static const int32 SCE_RB_STRING_QW = 28;
	static const int32 SCE_RB_WORD_DEMOTED = 29;
	static const int32 SCE_RB_STDIN = 30;
	static const int32 SCE_RB_STDOUT = 31;
	static const int32 SCE_RB_STDERR = 40;
	static const int32 SCE_RB_UPPER_BOUND = 41;
	static const int32 SCE_B_DEFAULT = 0;
	static const int32 SCE_B_COMMENT = 1;
	static const int32 SCE_B_NUMBER = 2;
	static const int32 SCE_B_KEYWORD = 3;
	static const int32 SCE_B_STRING = 4;
	static const int32 SCE_B_PREPROCESSOR = 5;
	static const int32 SCE_B_OPERATOR = 6;
	static const int32 SCE_B_IDENTIFIER = 7;
	static const int32 SCE_B_DATE = 8;
	static const int32 SCE_B_STRINGEOL = 9;
	static const int32 SCE_B_KEYWORD2 = 10;
	static const int32 SCE_B_KEYWORD3 = 11;
	static const int32 SCE_B_KEYWORD4 = 12;
	static const int32 SCE_B_CONSTANT = 13;
	static const int32 SCE_B_ASM = 14;
	static const int32 SCE_B_LABEL = 15;
	static const int32 SCE_B_ERROR = 16;
	static const int32 SCE_B_HEXNUMBER = 17;
	static const int32 SCE_B_BINNUMBER = 18;
	static const int32 SCE_PROPS_DEFAULT = 0;
	static const int32 SCE_PROPS_COMMENT = 1;
	static const int32 SCE_PROPS_SECTION = 2;
	static const int32 SCE_PROPS_ASSIGNMENT = 3;
	static const int32 SCE_PROPS_DEFVAL = 4;
	static const int32 SCE_PROPS_KEY = 5;
	static const int32 SCE_L_DEFAULT = 0;
	static const int32 SCE_L_COMMAND = 1;
	static const int32 SCE_L_TAG = 2;
	static const int32 SCE_L_MATH = 3;
	static const int32 SCE_L_COMMENT = 4;
	static const int32 SCE_LUA_DEFAULT = 0;
	static const int32 SCE_LUA_COMMENT = 1;
	static const int32 SCE_LUA_COMMENTLINE = 2;
	static const int32 SCE_LUA_COMMENTDOC = 3;
	static const int32 SCE_LUA_NUMBER = 4;
	static const int32 SCE_LUA_WORD = 5;
	static const int32 SCE_LUA_STRING = 6;
	static const int32 SCE_LUA_CHARACTER = 7;
	static const int32 SCE_LUA_LITERALSTRING = 8;
	static const int32 SCE_LUA_PREPROCESSOR = 9;
	static const int32 SCE_LUA_OPERATOR = 10;
	static const int32 SCE_LUA_IDENTIFIER = 11;
	static const int32 SCE_LUA_STRINGEOL = 12;
	static const int32 SCE_LUA_WORD2 = 13;
	static const int32 SCE_LUA_WORD3 = 14;
	static const int32 SCE_LUA_WORD4 = 15;
	static const int32 SCE_LUA_WORD5 = 16;
	static const int32 SCE_LUA_WORD6 = 17;
	static const int32 SCE_LUA_WORD7 = 18;
	static const int32 SCE_LUA_WORD8 = 19;
	static const int32 SCE_ERR_DEFAULT = 0;
	static const int32 SCE_ERR_PYTHON = 1;
	static const int32 SCE_ERR_GCC = 2;
	static const int32 SCE_ERR_MS = 3;
	static const int32 SCE_ERR_CMD = 4;
	static const int32 SCE_ERR_BORLAND = 5;
	static const int32 SCE_ERR_PERL = 6;
	static const int32 SCE_ERR_NET = 7;
	static const int32 SCE_ERR_LUA = 8;
	static const int32 SCE_ERR_CTAG = 9;
	static const int32 SCE_ERR_DIFF_CHANGED = 10;
	static const int32 SCE_ERR_DIFF_ADDITION = 11;
	static const int32 SCE_ERR_DIFF_DELETION = 12;
	static const int32 SCE_ERR_DIFF_MESSAGE = 13;
	static const int32 SCE_ERR_PHP = 14;
	static const int32 SCE_ERR_ELF = 15;
	static const int32 SCE_ERR_IFC = 16;
	static const int32 SCE_ERR_IFORT = 17;
	static const int32 SCE_ERR_ABSF = 18;
	static const int32 SCE_ERR_TIDY = 19;
	static const int32 SCE_ERR_JAVA_STACK = 20;
	static const int32 SCE_ERR_VALUE = 21;
	static const int32 SCE_BAT_DEFAULT = 0;
	static const int32 SCE_BAT_COMMENT = 1;
	static const int32 SCE_BAT_WORD = 2;
	static const int32 SCE_BAT_LABEL = 3;
	static const int32 SCE_BAT_HIDE = 4;
	static const int32 SCE_BAT_COMMAND = 5;
	static const int32 SCE_BAT_IDENTIFIER = 6;
	static const int32 SCE_BAT_OPERATOR = 7;
	static const int32 SCE_MAKE_DEFAULT = 0;
	static const int32 SCE_MAKE_COMMENT = 1;
	static const int32 SCE_MAKE_PREPROCESSOR = 2;
	static const int32 SCE_MAKE_IDENTIFIER = 3;
	static const int32 SCE_MAKE_OPERATOR = 4;
	static const int32 SCE_MAKE_TARGET = 5;
	static const int32 SCE_MAKE_IDEOL = 9;
	static const int32 SCE_DIFF_DEFAULT = 0;
	static const int32 SCE_DIFF_COMMENT = 1;
	static const int32 SCE_DIFF_COMMAND = 2;
	static const int32 SCE_DIFF_HEADER = 3;
	static const int32 SCE_DIFF_POSITION = 4;
	static const int32 SCE_DIFF_DELETED = 5;
	static const int32 SCE_DIFF_ADDED = 6;
	static const int32 SCE_DIFF_CHANGED = 7;
	static const int32 SCE_CONF_DEFAULT = 0;
	static const int32 SCE_CONF_COMMENT = 1;
	static const int32 SCE_CONF_NUMBER = 2;
	static const int32 SCE_CONF_IDENTIFIER = 3;
	static const int32 SCE_CONF_EXTENSION = 4;
	static const int32 SCE_CONF_PARAMETER = 5;
	static const int32 SCE_CONF_STRING = 6;
	static const int32 SCE_CONF_OPERATOR = 7;
	static const int32 SCE_CONF_IP = 8;
	static const int32 SCE_CONF_DIRECTIVE = 9;
	static const int32 SCE_AVE_DEFAULT = 0;
	static const int32 SCE_AVE_COMMENT = 1;
	static const int32 SCE_AVE_NUMBER = 2;
	static const int32 SCE_AVE_WORD = 3;
	static const int32 SCE_AVE_STRING = 6;
	static const int32 SCE_AVE_ENUM = 7;
	static const int32 SCE_AVE_STRINGEOL = 8;
	static const int32 SCE_AVE_IDENTIFIER = 9;
	static const int32 SCE_AVE_OPERATOR = 10;
	static const int32 SCE_AVE_WORD1 = 11;
	static const int32 SCE_AVE_WORD2 = 12;
	static const int32 SCE_AVE_WORD3 = 13;
	static const int32 SCE_AVE_WORD4 = 14;
	static const int32 SCE_AVE_WORD5 = 15;
	static const int32 SCE_AVE_WORD6 = 16;
	static const int32 SCE_ADA_DEFAULT = 0;
	static const int32 SCE_ADA_WORD = 1;
	static const int32 SCE_ADA_IDENTIFIER = 2;
	static const int32 SCE_ADA_NUMBER = 3;
	static const int32 SCE_ADA_DELIMITER = 4;
	static const int32 SCE_ADA_CHARACTER = 5;
	static const int32 SCE_ADA_CHARACTEREOL = 6;
	static const int32 SCE_ADA_STRING = 7;
	static const int32 SCE_ADA_STRINGEOL = 8;
	static const int32 SCE_ADA_LABEL = 9;
	static const int32 SCE_ADA_COMMENTLINE = 10;
	static const int32 SCE_ADA_ILLEGAL = 11;
	static const int32 SCE_BAAN_DEFAULT = 0;
	static const int32 SCE_BAAN_COMMENT = 1;
	static const int32 SCE_BAAN_COMMENTDOC = 2;
	static const int32 SCE_BAAN_NUMBER = 3;
	static const int32 SCE_BAAN_WORD = 4;
	static const int32 SCE_BAAN_STRING = 5;
	static const int32 SCE_BAAN_PREPROCESSOR = 6;
	static const int32 SCE_BAAN_OPERATOR = 7;
	static const int32 SCE_BAAN_IDENTIFIER = 8;
	static const int32 SCE_BAAN_STRINGEOL = 9;
	static const int32 SCE_BAAN_WORD2 = 10;
	static const int32 SCE_LISP_DEFAULT = 0;
	static const int32 SCE_LISP_COMMENT = 1;
	static const int32 SCE_LISP_NUMBER = 2;
	static const int32 SCE_LISP_KEYWORD = 3;
	static const int32 SCE_LISP_KEYWORD_KW = 4;
	static const int32 SCE_LISP_SYMBOL = 5;
	static const int32 SCE_LISP_STRING = 6;
	static const int32 SCE_LISP_STRINGEOL = 8;
	static const int32 SCE_LISP_IDENTIFIER = 9;
	static const int32 SCE_LISP_OPERATOR = 10;
	static const int32 SCE_LISP_SPECIAL = 11;
	static const int32 SCE_LISP_MULTI_COMMENT = 12;
	static const int32 SCE_EIFFEL_DEFAULT = 0;
	static const int32 SCE_EIFFEL_COMMENTLINE = 1;
	static const int32 SCE_EIFFEL_NUMBER = 2;
	static const int32 SCE_EIFFEL_WORD = 3;
	static const int32 SCE_EIFFEL_STRING = 4;
	static const int32 SCE_EIFFEL_CHARACTER = 5;
	static const int32 SCE_EIFFEL_OPERATOR = 6;
	static const int32 SCE_EIFFEL_IDENTIFIER = 7;
	static const int32 SCE_EIFFEL_STRINGEOL = 8;
	static const int32 SCE_NNCRONTAB_DEFAULT = 0;
	static const int32 SCE_NNCRONTAB_COMMENT = 1;
	static const int32 SCE_NNCRONTAB_TASK = 2;
	static const int32 SCE_NNCRONTAB_SECTION = 3;
	static const int32 SCE_NNCRONTAB_KEYWORD = 4;
	static const int32 SCE_NNCRONTAB_MODIFIER = 5;
	static const int32 SCE_NNCRONTAB_ASTERISK = 6;
	static const int32 SCE_NNCRONTAB_NUMBER = 7;
	static const int32 SCE_NNCRONTAB_STRING = 8;
	static const int32 SCE_NNCRONTAB_ENVIRONMENT = 9;
	static const int32 SCE_NNCRONTAB_IDENTIFIER = 10;
	static const int32 SCE_FORTH_DEFAULT = 0;
	static const int32 SCE_FORTH_COMMENT = 1;
	static const int32 SCE_FORTH_COMMENT_ML = 2;
	static const int32 SCE_FORTH_IDENTIFIER = 3;
	static const int32 SCE_FORTH_CONTROL = 4;
	static const int32 SCE_FORTH_KEYWORD = 5;
	static const int32 SCE_FORTH_DEFWORD = 6;
	static const int32 SCE_FORTH_PREWORD1 = 7;
	static const int32 SCE_FORTH_PREWORD2 = 8;
	static const int32 SCE_FORTH_NUMBER = 9;
	static const int32 SCE_FORTH_STRING = 10;
	static const int32 SCE_FORTH_LOCALE = 11;
	static const int32 SCE_MATLAB_DEFAULT = 0;
	static const int32 SCE_MATLAB_COMMENT = 1;
	static const int32 SCE_MATLAB_COMMAND = 2;
	static const int32 SCE_MATLAB_NUMBER = 3;
	static const int32 SCE_MATLAB_KEYWORD = 4;
	static const int32 SCE_MATLAB_STRING = 5;
	static const int32 SCE_MATLAB_OPERATOR = 6;
	static const int32 SCE_MATLAB_IDENTIFIER = 7;
	static const int32 SCE_MATLAB_DOUBLEQUOTESTRING = 8;
	static const int32 SCE_SCRIPTOL_DEFAULT = 0;
	static const int32 SCE_SCRIPTOL_WHITE = 1;
	static const int32 SCE_SCRIPTOL_COMMENTLINE = 2;
	static const int32 SCE_SCRIPTOL_PERSISTENT = 3;
	static const int32 SCE_SCRIPTOL_CSTYLE = 4;
	static const int32 SCE_SCRIPTOL_COMMENTBLOCK = 5;
	static const int32 SCE_SCRIPTOL_NUMBER = 6;
	static const int32 SCE_SCRIPTOL_STRING = 7;
	static const int32 SCE_SCRIPTOL_CHARACTER = 8;
	static const int32 SCE_SCRIPTOL_STRINGEOL = 9;
	static const int32 SCE_SCRIPTOL_KEYWORD = 10;
	static const int32 SCE_SCRIPTOL_OPERATOR = 11;
	static const int32 SCE_SCRIPTOL_IDENTIFIER = 12;
	static const int32 SCE_SCRIPTOL_TRIPLE = 13;
	static const int32 SCE_SCRIPTOL_CLASSNAME = 14;
	static const int32 SCE_SCRIPTOL_PREPROCESSOR = 15;
	static const int32 SCE_ASM_DEFAULT = 0;
	static const int32 SCE_ASM_COMMENT = 1;
	static const int32 SCE_ASM_NUMBER = 2;
	static const int32 SCE_ASM_STRING = 3;
	static const int32 SCE_ASM_OPERATOR = 4;
	static const int32 SCE_ASM_IDENTIFIER = 5;
	static const int32 SCE_ASM_CPUINSTRUCTION = 6;
	static const int32 SCE_ASM_MATHINSTRUCTION = 7;
	static const int32 SCE_ASM_REGISTER = 8;
	static const int32 SCE_ASM_DIRECTIVE = 9;
	static const int32 SCE_ASM_DIRECTIVEOPERAND = 10;
	static const int32 SCE_ASM_COMMENTBLOCK = 11;
	static const int32 SCE_ASM_CHARACTER = 12;
	static const int32 SCE_ASM_STRINGEOL = 13;
	static const int32 SCE_ASM_EXTINSTRUCTION = 14;
	static const int32 SCE_F_DEFAULT = 0;
	static const int32 SCE_F_COMMENT = 1;
	static const int32 SCE_F_NUMBER = 2;
	static const int32 SCE_F_STRING1 = 3;
	static const int32 SCE_F_STRING2 = 4;
	static const int32 SCE_F_STRINGEOL = 5;
	static const int32 SCE_F_OPERATOR = 6;
	static const int32 SCE_F_IDENTIFIER = 7;
	static const int32 SCE_F_WORD = 8;
	static const int32 SCE_F_WORD2 = 9;
	static const int32 SCE_F_WORD3 = 10;
	static const int32 SCE_F_PREPROCESSOR = 11;
	static const int32 SCE_F_OPERATOR2 = 12;
	static const int32 SCE_F_LABEL = 13;
	static const int32 SCE_F_CONTINUATION = 14;
	static const int32 SCE_CSS_DEFAULT = 0;
	static const int32 SCE_CSS_TAG = 1;
	static const int32 SCE_CSS_CLASS = 2;
	static const int32 SCE_CSS_PSEUDOCLASS = 3;
	static const int32 SCE_CSS_UNKNOWN_PSEUDOCLASS = 4;
	static const int32 SCE_CSS_OPERATOR = 5;
	static const int32 SCE_CSS_IDENTIFIER = 6;
	static const int32 SCE_CSS_UNKNOWN_IDENTIFIER = 7;
	static const int32 SCE_CSS_VALUE = 8;
	static const int32 SCE_CSS_COMMENT = 9;
	static const int32 SCE_CSS_ID = 10;
	static const int32 SCE_CSS_IMPORTANT = 11;
	static const int32 SCE_CSS_DIRECTIVE = 12;
	static const int32 SCE_CSS_DOUBLESTRING = 13;
	static const int32 SCE_CSS_SINGLESTRING = 14;
	static const int32 SCE_CSS_IDENTIFIER2 = 15;
	static const int32 SCE_CSS_ATTRIBUTE = 16;
	static const int32 SCE_POV_DEFAULT = 0;
	static const int32 SCE_POV_COMMENT = 1;
	static const int32 SCE_POV_COMMENTLINE = 2;
	static const int32 SCE_POV_NUMBER = 3;
	static const int32 SCE_POV_OPERATOR = 4;
	static const int32 SCE_POV_IDENTIFIER = 5;
	static const int32 SCE_POV_STRING = 6;
	static const int32 SCE_POV_STRINGEOL = 7;
	static const int32 SCE_POV_DIRECTIVE = 8;
	static const int32 SCE_POV_BADDIRECTIVE = 9;
	static const int32 SCE_POV_WORD2 = 10;
	static const int32 SCE_POV_WORD3 = 11;
	static const int32 SCE_POV_WORD4 = 12;
	static const int32 SCE_POV_WORD5 = 13;
	static const int32 SCE_POV_WORD6 = 14;
	static const int32 SCE_POV_WORD7 = 15;
	static const int32 SCE_POV_WORD8 = 16;
	static const int32 SCE_LOUT_DEFAULT = 0;
	static const int32 SCE_LOUT_COMMENT = 1;
	static const int32 SCE_LOUT_NUMBER = 2;
	static const int32 SCE_LOUT_WORD = 3;
	static const int32 SCE_LOUT_WORD2 = 4;
	static const int32 SCE_LOUT_WORD3 = 5;
	static const int32 SCE_LOUT_WORD4 = 6;
	static const int32 SCE_LOUT_STRING = 7;
	static const int32 SCE_LOUT_OPERATOR = 8;
	static const int32 SCE_LOUT_IDENTIFIER = 9;
	static const int32 SCE_LOUT_STRINGEOL = 10;
	static const int32 SCE_ESCRIPT_DEFAULT = 0;
	static const int32 SCE_ESCRIPT_COMMENT = 1;
	static const int32 SCE_ESCRIPT_COMMENTLINE = 2;
	static const int32 SCE_ESCRIPT_COMMENTDOC = 3;
	static const int32 SCE_ESCRIPT_NUMBER = 4;
	static const int32 SCE_ESCRIPT_WORD = 5;
	static const int32 SCE_ESCRIPT_STRING = 6;
	static const int32 SCE_ESCRIPT_OPERATOR = 7;
	static const int32 SCE_ESCRIPT_IDENTIFIER = 8;
	static const int32 SCE_ESCRIPT_BRACE = 9;
	static const int32 SCE_ESCRIPT_WORD2 = 10;
	static const int32 SCE_ESCRIPT_WORD3 = 11;
	static const int32 SCE_PS_DEFAULT = 0;
	static const int32 SCE_PS_COMMENT = 1;
	static const int32 SCE_PS_DSC_COMMENT = 2;
	static const int32 SCE_PS_DSC_VALUE = 3;
	static const int32 SCE_PS_NUMBER = 4;
	static const int32 SCE_PS_NAME = 5;
	static const int32 SCE_PS_KEYWORD = 6;
	static const int32 SCE_PS_LITERAL = 7;
	static const int32 SCE_PS_IMMEVAL = 8;
	static const int32 SCE_PS_PAREN_ARRAY = 9;
	static const int32 SCE_PS_PAREN_DICT = 10;
	static const int32 SCE_PS_PAREN_PROC = 11;
	static const int32 SCE_PS_TEXT = 12;
	static const int32 SCE_PS_HEXSTRING = 13;
	static const int32 SCE_PS_BASE85STRING = 14;
	static const int32 SCE_PS_BADSTRINGCHAR = 15;
	static const int32 SCE_NSIS_DEFAULT = 0;
	static const int32 SCE_NSIS_COMMENT = 1;
	static const int32 SCE_NSIS_STRINGDQ = 2;
	static const int32 SCE_NSIS_STRINGLQ = 3;
	static const int32 SCE_NSIS_STRINGRQ = 4;
	static const int32 SCE_NSIS_FUNCTION = 5;
	static const int32 SCE_NSIS_VARIABLE = 6;
	static const int32 SCE_NSIS_LABEL = 7;
	static const int32 SCE_NSIS_USERDEFINED = 8;
	static const int32 SCE_NSIS_SECTIONDEF = 9;
	static const int32 SCE_NSIS_SUBSECTIONDEF = 10;
	static const int32 SCE_NSIS_IFDEFINEDEF = 11;
	static const int32 SCE_NSIS_MACRODEF = 12;
	static const int32 SCE_NSIS_STRINGVAR = 13;
	static const int32 SCE_NSIS_NUMBER = 14;
	static const int32 SCE_NSIS_SECTIONGROUP = 15;
	static const int32 SCE_NSIS_PAGEEX = 16;
	static const int32 SCE_NSIS_FUNCTIONDEF = 17;
	static const int32 SCE_NSIS_COMMENTBOX = 18;
	static const int32 SCE_MMIXAL_LEADWS = 0;
	static const int32 SCE_MMIXAL_COMMENT = 1;
	static const int32 SCE_MMIXAL_LABEL = 2;
	static const int32 SCE_MMIXAL_OPCODE = 3;
	static const int32 SCE_MMIXAL_OPCODE_PRE = 4;
	static const int32 SCE_MMIXAL_OPCODE_VALID = 5;
	static const int32 SCE_MMIXAL_OPCODE_UNKNOWN = 6;
	static const int32 SCE_MMIXAL_OPCODE_POST = 7;
	static const int32 SCE_MMIXAL_OPERANDS = 8;
	static const int32 SCE_MMIXAL_NUMBER = 9;
	static const int32 SCE_MMIXAL_REF = 10;
	static const int32 SCE_MMIXAL_CHAR = 11;
	static const int32 SCE_MMIXAL_STRING = 12;
	static const int32 SCE_MMIXAL_REGISTER = 13;
	static const int32 SCE_MMIXAL_HEX = 14;
	static const int32 SCE_MMIXAL_OPERATOR = 15;
	static const int32 SCE_MMIXAL_SYMBOL = 16;
	static const int32 SCE_MMIXAL_INCLUDE = 17;
	static const int32 SCE_CLW_DEFAULT = 0;
	static const int32 SCE_CLW_LABEL = 1;
	static const int32 SCE_CLW_COMMENT = 2;
	static const int32 SCE_CLW_STRING = 3;
	static const int32 SCE_CLW_USER_IDENTIFIER = 4;
	static const int32 SCE_CLW_INTEGER_CONSTANT = 5;
	static const int32 SCE_CLW_REAL_CONSTANT = 6;
	static const int32 SCE_CLW_PICTURE_STRING = 7;
	static const int32 SCE_CLW_KEYWORD = 8;
	static const int32 SCE_CLW_COMPILER_DIRECTIVE = 9;
	static const int32 SCE_CLW_RUNTIME_EXPRESSIONS = 10;
	static const int32 SCE_CLW_BUILTIN_PROCEDURES_FUNCTION = 11;
	static const int32 SCE_CLW_STRUCTURE_DATA_TYPE = 12;
	static const int32 SCE_CLW_ATTRIBUTE = 13;
	static const int32 SCE_CLW_STANDARD_EQUATE = 14;
	static const int32 SCE_CLW_ERROR = 15;
	static const int32 SCE_CLW_DEPRECATED = 16;
	static const int32 SCE_LOT_DEFAULT = 0;
	static const int32 SCE_LOT_HEADER = 1;
	static const int32 SCE_LOT_BREAK = 2;
	static const int32 SCE_LOT_SET = 3;
	static const int32 SCE_LOT_PASS = 4;
	static const int32 SCE_LOT_FAIL = 5;
	static const int32 SCE_LOT_ABORT = 6;
	static const int32 SCE_YAML_DEFAULT = 0;
	static const int32 SCE_YAML_COMMENT = 1;
	static const int32 SCE_YAML_IDENTIFIER = 2;
	static const int32 SCE_YAML_KEYWORD = 3;
	static const int32 SCE_YAML_NUMBER = 4;
	static const int32 SCE_YAML_REFERENCE = 5;
	static const int32 SCE_YAML_DOCUMENT = 6;
	static const int32 SCE_YAML_TEXT = 7;
	static const int32 SCE_YAML_ERROR = 8;
	static const int32 SCE_YAML_OPERATOR = 9;
	static const int32 SCE_TEX_DEFAULT = 0;
	static const int32 SCE_TEX_SPECIAL = 1;
	static const int32 SCE_TEX_GROUP = 2;
	static const int32 SCE_TEX_SYMBOL = 3;
	static const int32 SCE_TEX_COMMAND = 4;
	static const int32 SCE_TEX_TEXT = 5;
	static const int32 SCE_METAPOST_DEFAULT = 0;
	static const int32 SCE_METAPOST_SPECIAL = 1;
	static const int32 SCE_METAPOST_GROUP = 2;
	static const int32 SCE_METAPOST_SYMBOL = 3;
	static const int32 SCE_METAPOST_COMMAND = 4;
	static const int32 SCE_METAPOST_TEXT = 5;
	static const int32 SCE_METAPOST_EXTRA = 6;
	static const int32 SCE_ERLANG_DEFAULT = 0;
	static const int32 SCE_ERLANG_COMMENT = 1;
	static const int32 SCE_ERLANG_VARIABLE = 2;
	static const int32 SCE_ERLANG_NUMBER = 3;
	static const int32 SCE_ERLANG_KEYWORD = 4;
	static const int32 SCE_ERLANG_STRING = 5;
	static const int32 SCE_ERLANG_OPERATOR = 6;
	static const int32 SCE_ERLANG_ATOM = 7;
	static const int32 SCE_ERLANG_FUNCTION_NAME = 8;
	static const int32 SCE_ERLANG_CHARACTER = 9;
	static const int32 SCE_ERLANG_MACRO = 10;
	static const int32 SCE_ERLANG_RECORD = 11;
	static const int32 SCE_ERLANG_SEPARATOR = 12;
	static const int32 SCE_ERLANG_NODE_NAME = 13;
	static const int32 SCE_ERLANG_UNKNOWN = 31;
	static const int32 SCE_MSSQL_DEFAULT = 0;
	static const int32 SCE_MSSQL_COMMENT = 1;
	static const int32 SCE_MSSQL_LINE_COMMENT = 2;
	static const int32 SCE_MSSQL_NUMBER = 3;
	static const int32 SCE_MSSQL_STRING = 4;
	static const int32 SCE_MSSQL_OPERATOR = 5;
	static const int32 SCE_MSSQL_IDENTIFIER = 6;
	static const int32 SCE_MSSQL_VARIABLE = 7;
	static const int32 SCE_MSSQL_COLUMN_NAME = 8;
	static const int32 SCE_MSSQL_STATEMENT = 9;
	static const int32 SCE_MSSQL_DATATYPE = 10;
	static const int32 SCE_MSSQL_SYSTABLE = 11;
	static const int32 SCE_MSSQL_GLOBAL_VARIABLE = 12;
	static const int32 SCE_MSSQL_FUNCTION = 13;
	static const int32 SCE_MSSQL_STORED_PROCEDURE = 14;
	static const int32 SCE_MSSQL_DEFAULT_PREF_DATATYPE = 15;
	static const int32 SCE_MSSQL_COLUMN_NAME_2 = 16;
	static const int32 SCE_V_DEFAULT = 0;
	static const int32 SCE_V_COMMENT = 1;
	static const int32 SCE_V_COMMENTLINE = 2;
	static const int32 SCE_V_COMMENTLINEBANG = 3;
	static const int32 SCE_V_NUMBER = 4;
	static const int32 SCE_V_WORD = 5;
	static const int32 SCE_V_STRING = 6;
	static const int32 SCE_V_WORD2 = 7;
	static const int32 SCE_V_WORD3 = 8;
	static const int32 SCE_V_PREPROCESSOR = 9;
	static const int32 SCE_V_OPERATOR = 10;
	static const int32 SCE_V_IDENTIFIER = 11;
	static const int32 SCE_V_STRINGEOL = 12;
	static const int32 SCE_V_USER = 19;
	static const int32 SCE_KIX_DEFAULT = 0;
	static const int32 SCE_KIX_COMMENT = 1;
	static const int32 SCE_KIX_STRING1 = 2;
	static const int32 SCE_KIX_STRING2 = 3;
	static const int32 SCE_KIX_NUMBER = 4;
	static const int32 SCE_KIX_VAR = 5;
	static const int32 SCE_KIX_MACRO = 6;
	static const int32 SCE_KIX_KEYWORD = 7;
	static const int32 SCE_KIX_FUNCTIONS = 8;
	static const int32 SCE_KIX_OPERATOR = 9;
	static const int32 SCE_KIX_IDENTIFIER = 31;
	static const int32 SCE_GC_DEFAULT = 0;
	static const int32 SCE_GC_COMMENTLINE = 1;
	static const int32 SCE_GC_COMMENTBLOCK = 2;
	static const int32 SCE_GC_GLOBAL = 3;
	static const int32 SCE_GC_EVENT = 4;
	static const int32 SCE_GC_ATTRIBUTE = 5;
	static const int32 SCE_GC_CONTROL = 6;
	static const int32 SCE_GC_COMMAND = 7;
	static const int32 SCE_GC_STRING = 8;
	static const int32 SCE_GC_OPERATOR = 9;
	static const int32 SCE_SN_DEFAULT = 0;
	static const int32 SCE_SN_CODE = 1;
	static const int32 SCE_SN_COMMENTLINE = 2;
	static const int32 SCE_SN_COMMENTLINEBANG = 3;
	static const int32 SCE_SN_NUMBER = 4;
	static const int32 SCE_SN_WORD = 5;
	static const int32 SCE_SN_STRING = 6;
	static const int32 SCE_SN_WORD2 = 7;
	static const int32 SCE_SN_WORD3 = 8;
	static const int32 SCE_SN_PREPROCESSOR = 9;
	static const int32 SCE_SN_OPERATOR = 10;
	static const int32 SCE_SN_IDENTIFIER = 11;
	static const int32 SCE_SN_STRINGEOL = 12;
	static const int32 SCE_SN_REGEXTAG = 13;
	static const int32 SCE_SN_SIGNAL = 14;
	static const int32 SCE_SN_USER = 19;
	static const int32 SCE_AU3_DEFAULT = 0;
	static const int32 SCE_AU3_COMMENT = 1;
	static const int32 SCE_AU3_COMMENTBLOCK = 2;
	static const int32 SCE_AU3_NUMBER = 3;
	static const int32 SCE_AU3_FUNCTION = 4;
	static const int32 SCE_AU3_KEYWORD = 5;
	static const int32 SCE_AU3_MACRO = 6;
	static const int32 SCE_AU3_STRING = 7;
	static const int32 SCE_AU3_OPERATOR = 8;
	static const int32 SCE_AU3_VARIABLE = 9;
	static const int32 SCE_AU3_SENT = 10;
	static const int32 SCE_AU3_PREPROCESSOR = 11;
	static const int32 SCE_AU3_SPECIAL = 12;
	static const int32 SCE_AU3_EXPAND = 13;
	static const int32 SCE_AU3_COMOBJ = 14;
	static const int32 SCE_AU3_UDF = 15;
	static const int32 SCE_APDL_DEFAULT = 0;
	static const int32 SCE_APDL_COMMENT = 1;
	static const int32 SCE_APDL_COMMENTBLOCK = 2;
	static const int32 SCE_APDL_NUMBER = 3;
	static const int32 SCE_APDL_STRING = 4;
	static const int32 SCE_APDL_OPERATOR = 5;
	static const int32 SCE_APDL_WORD = 6;
	static const int32 SCE_APDL_PROCESSOR = 7;
	static const int32 SCE_APDL_COMMAND = 8;
	static const int32 SCE_APDL_SLASHCOMMAND = 9;
	static const int32 SCE_APDL_STARCOMMAND = 10;
	static const int32 SCE_APDL_ARGUMENT = 11;
	static const int32 SCE_APDL_FUNCTION = 12;
	static const int32 SCE_SH_DEFAULT = 0;
	static const int32 SCE_SH_ERROR = 1;
	static const int32 SCE_SH_COMMENTLINE = 2;
	static const int32 SCE_SH_NUMBER = 3;
	static const int32 SCE_SH_WORD = 4;
	static const int32 SCE_SH_STRING = 5;
	static const int32 SCE_SH_CHARACTER = 6;
	static const int32 SCE_SH_OPERATOR = 7;
	static const int32 SCE_SH_IDENTIFIER = 8;
	static const int32 SCE_SH_SCALAR = 9;
	static const int32 SCE_SH_PARAM = 10;
	static const int32 SCE_SH_BACKTICKS = 11;
	static const int32 SCE_SH_HERE_DELIM = 12;
	static const int32 SCE_SH_HERE_Q = 13;
	static const int32 SCE_ASN1_DEFAULT = 0;
	static const int32 SCE_ASN1_COMMENT = 1;
	static const int32 SCE_ASN1_IDENTIFIER = 2;
	static const int32 SCE_ASN1_STRING = 3;
	static const int32 SCE_ASN1_OID = 4;
	static const int32 SCE_ASN1_SCALAR = 5;
	static const int32 SCE_ASN1_KEYWORD = 6;
	static const int32 SCE_ASN1_ATTRIBUTE = 7;
	static const int32 SCE_ASN1_DESCRIPTOR = 8;
	static const int32 SCE_ASN1_TYPE = 9;
	static const int32 SCE_ASN1_OPERATOR = 10;
	static const int32 SCE_VHDL_DEFAULT = 0;
	static const int32 SCE_VHDL_COMMENT = 1;
	static const int32 SCE_VHDL_COMMENTLINEBANG = 2;
	static const int32 SCE_VHDL_NUMBER = 3;
	static const int32 SCE_VHDL_STRING = 4;
	static const int32 SCE_VHDL_OPERATOR = 5;
	static const int32 SCE_VHDL_IDENTIFIER = 6;
	static const int32 SCE_VHDL_STRINGEOL = 7;
	static const int32 SCE_VHDL_KEYWORD = 8;
	static const int32 SCE_VHDL_STDOPERATOR = 9;
	static const int32 SCE_VHDL_ATTRIBUTE = 10;
	static const int32 SCE_VHDL_STDFUNCTION = 11;
	static const int32 SCE_VHDL_STDPACKAGE = 12;
	static const int32 SCE_VHDL_STDTYPE = 13;
	static const int32 SCE_VHDL_USERWORD = 14;
	static const int32 SCE_CAML_DEFAULT = 0;
	static const int32 SCE_CAML_IDENTIFIER = 1;
	static const int32 SCE_CAML_TAGNAME = 2;
	static const int32 SCE_CAML_KEYWORD = 3;
	static const int32 SCE_CAML_KEYWORD2 = 4;
	static const int32 SCE_CAML_KEYWORD3 = 5;
	static const int32 SCE_CAML_LINENUM = 6;
	static const int32 SCE_CAML_OPERATOR = 7;
	static const int32 SCE_CAML_NUMBER = 8;
	static const int32 SCE_CAML_CHAR = 9;
	static const int32 SCE_CAML_STRING = 11;
	static const int32 SCE_CAML_COMMENT = 12;
	static const int32 SCE_CAML_COMMENT1 = 13;
	static const int32 SCE_CAML_COMMENT2 = 14;
	static const int32 SCE_CAML_COMMENT3 = 15;
	static const int32 SCE_HA_DEFAULT = 0;
	static const int32 SCE_HA_IDENTIFIER = 1;
	static const int32 SCE_HA_KEYWORD = 2;
	static const int32 SCE_HA_NUMBER = 3;
	static const int32 SCE_HA_STRING = 4;
	static const int32 SCE_HA_CHARACTER = 5;
	static const int32 SCE_HA_CLASS = 6;
	static const int32 SCE_HA_MODULE = 7;
	static const int32 SCE_HA_CAPITAL = 8;
	static const int32 SCE_HA_DATA = 9;
	static const int32 SCE_HA_IMPORT = 10;
	static const int32 SCE_HA_OPERATOR = 11;
	static const int32 SCE_HA_INSTANCE = 12;
	static const int32 SCE_HA_COMMENTLINE = 13;
	static const int32 SCE_HA_COMMENTBLOCK = 14;
	static const int32 SCE_HA_COMMENTBLOCK2 = 15;
	static const int32 SCE_HA_COMMENTBLOCK3 = 16;
	static const int32 SCE_T3_DEFAULT = 0;
	static const int32 SCE_T3_X_DEFAULT = 1;
	static const int32 SCE_T3_PREPROCESSOR = 2;
	static const int32 SCE_T3_BLOCK_COMMENT = 3;
	static const int32 SCE_T3_LINE_COMMENT = 4;
	static const int32 SCE_T3_OPERATOR = 5;
	static const int32 SCE_T3_KEYWORD = 6;
	static const int32 SCE_T3_NUMBER = 7;
	static const int32 SCE_T3_IDENTIFIER = 8;
	static const int32 SCE_T3_S_STRING = 9;
	static const int32 SCE_T3_D_STRING = 10;
	static const int32 SCE_T3_X_STRING = 11;
	static const int32 SCE_T3_LIB_DIRECTIVE = 12;
	static const int32 SCE_T3_MSG_PARAM = 13;
	static const int32 SCE_T3_HTML_TAG = 14;
	static const int32 SCE_T3_HTML_DEFAULT = 15;
	static const int32 SCE_T3_HTML_STRING = 16;
	static const int32 SCE_T3_USER1 = 17;
	static const int32 SCE_T3_USER2 = 18;
	static const int32 SCE_T3_USER3 = 19;
	static const int32 SCE_T3_BRACE = 20;
	static const int32 SCE_REBOL_DEFAULT = 0;
	static const int32 SCE_REBOL_COMMENTLINE = 1;
	static const int32 SCE_REBOL_COMMENTBLOCK = 2;
	static const int32 SCE_REBOL_PREFACE = 3;
	static const int32 SCE_REBOL_OPERATOR = 4;
	static const int32 SCE_REBOL_CHARACTER = 5;
	static const int32 SCE_REBOL_QUOTEDSTRING = 6;
	static const int32 SCE_REBOL_BRACEDSTRING = 7;
	static const int32 SCE_REBOL_NUMBER = 8;
	static const int32 SCE_REBOL_PAIR = 9;
	static const int32 SCE_REBOL_TUPLE = 10;
	static const int32 SCE_REBOL_BINARY = 11;
	static const int32 SCE_REBOL_MONEY = 12;
	static const int32 SCE_REBOL_ISSUE = 13;
	static const int32 SCE_REBOL_TAG = 14;
	static const int32 SCE_REBOL_FILE = 15;
	static const int32 SCE_REBOL_EMAIL = 16;
	static const int32 SCE_REBOL_URL = 17;
	static const int32 SCE_REBOL_DATE = 18;
	static const int32 SCE_REBOL_TIME = 19;
	static const int32 SCE_REBOL_IDENTIFIER = 20;
	static const int32 SCE_REBOL_WORD = 21;
	static const int32 SCE_REBOL_WORD2 = 22;
	static const int32 SCE_REBOL_WORD3 = 23;
	static const int32 SCE_REBOL_WORD4 = 24;
	static const int32 SCE_REBOL_WORD5 = 25;
	static const int32 SCE_REBOL_WORD6 = 26;
	static const int32 SCE_REBOL_WORD7 = 27;
	static const int32 SCE_REBOL_WORD8 = 28;
	static const int32 SCE_SQL_DEFAULT = 0;
	static const int32 SCE_SQL_COMMENT = 1;
	static const int32 SCE_SQL_COMMENTLINE = 2;
	static const int32 SCE_SQL_COMMENTDOC = 3;
	static const int32 SCE_SQL_NUMBER = 4;
	static const int32 SCE_SQL_WORD = 5;
	static const int32 SCE_SQL_STRING = 6;
	static const int32 SCE_SQL_CHARACTER = 7;
	static const int32 SCE_SQL_SQLPLUS = 8;
	static const int32 SCE_SQL_SQLPLUS_PROMPT = 9;
	static const int32 SCE_SQL_OPERATOR = 10;
	static const int32 SCE_SQL_IDENTIFIER = 11;
	static const int32 SCE_SQL_SQLPLUS_COMMENT = 13;
	static const int32 SCE_SQL_COMMENTLINEDOC = 15;
	static const int32 SCE_SQL_WORD2 = 16;
	static const int32 SCE_SQL_COMMENTDOCKEYWORD = 17;
	static const int32 SCE_SQL_COMMENTDOCKEYWORDERROR = 18;
	static const int32 SCE_SQL_USER1 = 19;
	static const int32 SCE_SQL_USER2 = 20;
	static const int32 SCE_SQL_USER3 = 21;
	static const int32 SCE_SQL_USER4 = 22;
	static const int32 SCE_SQL_QUOTEDIDENTIFIER = 23;
	static const int32 SCE_ST_DEFAULT = 0;
	static const int32 SCE_ST_STRING = 1;
	static const int32 SCE_ST_NUMBER = 2;
	static const int32 SCE_ST_COMMENT = 3;
	static const int32 SCE_ST_SYMBOL = 4;
	static const int32 SCE_ST_BINARY = 5;
	static const int32 SCE_ST_BOOL = 6;
	static const int32 SCE_ST_SELF = 7;
	static const int32 SCE_ST_SUPER = 8;
	static const int32 SCE_ST_NIL = 9;
	static const int32 SCE_ST_GLOBAL = 10;
	static const int32 SCE_ST_RETURN = 11;
	static const int32 SCE_ST_SPECIAL = 12;
	static const int32 SCE_ST_KWSEND = 13;
	static const int32 SCE_ST_ASSIGN = 14;
	static const int32 SCE_ST_CHARACTER = 15;
	static const int32 SCE_ST_SPEC_SEL = 16;
	static const int32 SCE_FS_DEFAULT = 0;
	static const int32 SCE_FS_COMMENT = 1;
	static const int32 SCE_FS_COMMENTLINE = 2;
	static const int32 SCE_FS_COMMENTDOC = 3;
	static const int32 SCE_FS_COMMENTLINEDOC = 4;
	static const int32 SCE_FS_COMMENTDOCKEYWORD = 5;
	static const int32 SCE_FS_COMMENTDOCKEYWORDERROR = 6;
	static const int32 SCE_FS_KEYWORD = 7;
	static const int32 SCE_FS_KEYWORD2 = 8;
	static const int32 SCE_FS_KEYWORD3 = 9;
	static const int32 SCE_FS_KEYWORD4 = 10;
	static const int32 SCE_FS_NUMBER = 11;
	static const int32 SCE_FS_STRING = 12;
	static const int32 SCE_FS_PREPROCESSOR = 13;
	static const int32 SCE_FS_OPERATOR = 14;
	static const int32 SCE_FS_IDENTIFIER = 15;
	static const int32 SCE_FS_DATE = 16;
	static const int32 SCE_FS_STRINGEOL = 17;
	static const int32 SCE_FS_CONSTANT = 18;
	static const int32 SCE_FS_ASM = 19;
	static const int32 SCE_FS_LABEL = 20;
	static const int32 SCE_FS_ERROR = 21;
	static const int32 SCE_FS_HEXNUMBER = 22;
	static const int32 SCE_FS_BINNUMBER = 23;
	static const int32 SCE_CSOUND_DEFAULT = 0;
	static const int32 SCE_CSOUND_COMMENT = 1;
	static const int32 SCE_CSOUND_NUMBER = 2;
	static const int32 SCE_CSOUND_OPERATOR = 3;
	static const int32 SCE_CSOUND_INSTR = 4;
	static const int32 SCE_CSOUND_IDENTIFIER = 5;
	static const int32 SCE_CSOUND_OPCODE = 6;
	static const int32 SCE_CSOUND_HEADERSTMT = 7;
	static const int32 SCE_CSOUND_USERKEYWORD = 8;
	static const int32 SCE_CSOUND_COMMENTBLOCK = 9;
	static const int32 SCE_CSOUND_PARAM = 10;
	static const int32 SCE_CSOUND_ARATE_VAR = 11;
	static const int32 SCE_CSOUND_KRATE_VAR = 12;
	static const int32 SCE_CSOUND_IRATE_VAR = 13;
	static const int32 SCE_CSOUND_GLOBAL_VAR = 14;
	static const int32 SCE_CSOUND_STRINGEOL = 15;
	static const int32 SCE_INNO_DEFAULT = 0;
	static const int32 SCE_INNO_COMMENT = 1;
	static const int32 SCE_INNO_KEYWORD = 2;
	static const int32 SCE_INNO_PARAMETER = 3;
	static const int32 SCE_INNO_SECTION = 4;
	static const int32 SCE_INNO_PREPROC = 5;
	static const int32 SCE_INNO_PREPROC_INLINE = 6;
	static const int32 SCE_INNO_COMMENT_PASCAL = 7;
	static const int32 SCE_INNO_KEYWORD_PASCAL = 8;
	static const int32 SCE_INNO_KEYWORD_USER = 9;
	static const int32 SCE_INNO_STRING_DOUBLE = 10;
	static const int32 SCE_INNO_STRING_SINGLE = 11;
	static const int32 SCE_INNO_IDENTIFIER = 12;
	static const int32 SCE_OPAL_SPACE = 0;
	static const int32 SCE_OPAL_COMMENT_BLOCK = 1;
	static const int32 SCE_OPAL_COMMENT_LINE = 2;
	static const int32 SCE_OPAL_INTEGER = 3;
	static const int32 SCE_OPAL_KEYWORD = 4;
	static const int32 SCE_OPAL_SORT = 5;
	static const int32 SCE_OPAL_STRING = 6;
	static const int32 SCE_OPAL_PAR = 7;
	static const int32 SCE_OPAL_BOOL_CONST = 8;
	static const int32 SCE_OPAL_DEFAULT = 32;
	static const int32 SCE_SPICE_DEFAULT = 0;
	static const int32 SCE_SPICE_IDENTIFIER = 1;
	static const int32 SCE_SPICE_KEYWORD = 2;
	static const int32 SCE_SPICE_KEYWORD2 = 3;
	static const int32 SCE_SPICE_KEYWORD3 = 4;
	static const int32 SCE_SPICE_NUMBER = 5;
	static const int32 SCE_SPICE_DELIMITER = 6;
	static const int32 SCE_SPICE_VALUE = 7;
	static const int32 SCE_SPICE_COMMENTLINE = 8;
	static const int32 SCE_CMAKE_DEFAULT = 0;
	static const int32 SCE_CMAKE_COMMENT = 1;
	static const int32 SCE_CMAKE_STRINGDQ = 2;
	static const int32 SCE_CMAKE_STRINGLQ = 3;
	static const int32 SCE_CMAKE_STRINGRQ = 4;
	static const int32 SCE_CMAKE_COMMANDS = 5;
	static const int32 SCE_CMAKE_PARAMETERS = 6;
	static const int32 SCE_CMAKE_VARIABLE = 7;
	static const int32 SCE_CMAKE_USERDEFINED = 8;
	static const int32 SCE_CMAKE_WHILEDEF = 9;
	static const int32 SCE_CMAKE_FOREACHDEF = 10;
	static const int32 SCE_CMAKE_IFDEFINEDEF = 11;
	static const int32 SCE_CMAKE_MACRODEF = 12;
	static const int32 SCE_CMAKE_STRINGVAR = 13;
	static const int32 SCE_CMAKE_NUMBER = 14;
	static const int32 SCE_GAP_DEFAULT = 0;
	static const int32 SCE_GAP_IDENTIFIER = 1;
	static const int32 SCE_GAP_KEYWORD = 2;
	static const int32 SCE_GAP_KEYWORD2 = 3;
	static const int32 SCE_GAP_KEYWORD3 = 4;
	static const int32 SCE_GAP_KEYWORD4 = 5;
	static const int32 SCE_GAP_STRING = 6;
	static const int32 SCE_GAP_CHAR = 7;
	static const int32 SCE_GAP_OPERATOR = 8;
	static const int32 SCE_GAP_COMMENT = 9;
	static const int32 SCE_GAP_NUMBER = 10;
	static const int32 SCE_GAP_STRINGEOL = 11;
	static const int32 SCE_PLM_DEFAULT = 0;
	static const int32 SCE_PLM_COMMENT = 1;
	static const int32 SCE_PLM_STRING = 2;
	static const int32 SCE_PLM_NUMBER = 3;
	static const int32 SCE_PLM_IDENTIFIER = 4;
	static const int32 SCE_PLM_OPERATOR = 5;
	static const int32 SCE_PLM_CONTROL = 6;
	static const int32 SCE_PLM_KEYWORD = 7;
	static const int32 SCE_4GL_DEFAULT = 0;
	static const int32 SCE_4GL_NUMBER = 1;
	static const int32 SCE_4GL_WORD = 2;
	static const int32 SCE_4GL_STRING = 3;
	static const int32 SCE_4GL_CHARACTER = 4;
	static const int32 SCE_4GL_PREPROCESSOR = 5;
	static const int32 SCE_4GL_OPERATOR = 6;
	static const int32 SCE_4GL_IDENTIFIER = 7;
	static const int32 SCE_4GL_BLOCK = 8;
	static const int32 SCE_4GL_END = 9;
	static const int32 SCE_4GL_COMMENT1 = 10;
	static const int32 SCE_4GL_COMMENT2 = 11;
	static const int32 SCE_4GL_COMMENT3 = 12;
	static const int32 SCE_4GL_COMMENT4 = 13;
	static const int32 SCE_4GL_COMMENT5 = 14;
	static const int32 SCE_4GL_COMMENT6 = 15;
	static const int32 SCE_4GL_DEFAULT_ = 16;
	static const int32 SCE_4GL_NUMBER_ = 17;
	static const int32 SCE_4GL_WORD_ = 18;
	static const int32 SCE_4GL_STRING_ = 19;
	static const int32 SCE_4GL_CHARACTER_ = 20;
	static const int32 SCE_4GL_PREPROCESSOR_ = 21;
	static const int32 SCE_4GL_OPERATOR_ = 22;
	static const int32 SCE_4GL_IDENTIFIER_ = 23;
	static const int32 SCE_4GL_BLOCK_ = 24;
	static const int32 SCE_4GL_END_ = 25;
	static const int32 SCE_4GL_COMMENT1_ = 26;
	static const int32 SCE_4GL_COMMENT2_ = 27;
	static const int32 SCE_4GL_COMMENT3_ = 28;
	static const int32 SCE_4GL_COMMENT4_ = 29;
	static const int32 SCE_4GL_COMMENT5_ = 30;
	static const int32 SCE_4GL_COMMENT6_ = 31;
	static const int32 SCE_ABAQUS_DEFAULT = 0;
	static const int32 SCE_ABAQUS_COMMENT = 1;
	static const int32 SCE_ABAQUS_COMMENTBLOCK = 2;
	static const int32 SCE_ABAQUS_NUMBER = 3;
	static const int32 SCE_ABAQUS_STRING = 4;
	static const int32 SCE_ABAQUS_OPERATOR = 5;
	static const int32 SCE_ABAQUS_WORD = 6;
	static const int32 SCE_ABAQUS_PROCESSOR = 7;
	static const int32 SCE_ABAQUS_COMMAND = 8;
	static const int32 SCE_ABAQUS_SLASHCOMMAND = 9;
	static const int32 SCE_ABAQUS_STARCOMMAND = 10;
	static const int32 SCE_ABAQUS_ARGUMENT = 11;
	static const int32 SCE_ABAQUS_FUNCTION = 12;
	static const int32 SCE_ASY_DEFAULT = 0;
	static const int32 SCE_ASY_COMMENT = 1;
	static const int32 SCE_ASY_COMMENTLINE = 2;
	static const int32 SCE_ASY_NUMBER = 3;
	static const int32 SCE_ASY_WORD = 4;
	static const int32 SCE_ASY_STRING = 5;
	static const int32 SCE_ASY_CHARACTER = 6;
	static const int32 SCE_ASY_OPERATOR = 7;
	static const int32 SCE_ASY_IDENTIFIER = 8;
	static const int32 SCE_ASY_STRINGEOL = 9;
	static const int32 SCE_ASY_COMMENTLINEDOC = 10;
	static const int32 SCE_ASY_WORD2 = 11;
	static const int32 SCE_R_DEFAULT = 0;
	static const int32 SCE_R_COMMENT = 1;
	static const int32 SCE_R_KWORD = 2;
	static const int32 SCE_R_BASEKWORD = 3;
	static const int32 SCE_R_OTHERKWORD = 4;
	static const int32 SCE_R_NUMBER = 5;
	static const int32 SCE_R_STRING = 6;
	static const int32 SCE_R_STRING2 = 7;
	static const int32 SCE_R_OPERATOR = 8;
	static const int32 SCE_R_IDENTIFIER = 9;
	static const int32 SCE_R_INFIX = 10;
	static const int32 SCE_R_INFIXEOL = 11;
	static const int32 SCE_MAGIK_DEFAULT = 0;
	static const int32 SCE_MAGIK_COMMENT = 1;
	static const int32 SCE_MAGIK_HYPER_COMMENT = 16;
	static const int32 SCE_MAGIK_STRING = 2;
	static const int32 SCE_MAGIK_CHARACTER = 3;
	static const int32 SCE_MAGIK_NUMBER = 4;
	static const int32 SCE_MAGIK_IDENTIFIER = 5;
	static const int32 SCE_MAGIK_OPERATOR = 6;
	static const int32 SCE_MAGIK_FLOW = 7;
	static const int32 SCE_MAGIK_CONTAINER = 8;
	static const int32 SCE_MAGIK_BRACKET_BLOCK = 9;
	static const int32 SCE_MAGIK_BRACE_BLOCK = 10;
	static const int32 SCE_MAGIK_SQBRACKET_BLOCK = 11;
	static const int32 SCE_MAGIK_UNKNOWN_KEYWORD = 12;
	static const int32 SCE_MAGIK_KEYWORD = 13;
	static const int32 SCE_MAGIK_PRAGMA = 14;
	static const int32 SCE_MAGIK_SYMBOL = 15;
	static const int32 SCE_POWERSHELL_DEFAULT = 0;
	static const int32 SCE_POWERSHELL_COMMENT = 1;
	static const int32 SCE_POWERSHELL_STRING = 2;
	static const int32 SCE_POWERSHELL_CHARACTER = 3;
	static const int32 SCE_POWERSHELL_NUMBER = 4;
	static const int32 SCE_POWERSHELL_VARIABLE = 5;
	static const int32 SCE_POWERSHELL_OPERATOR = 6;
	static const int32 SCE_POWERSHELL_IDENTIFIER = 7;
	static const int32 SCE_POWERSHELL_KEYWORD = 8;
	static const int32 SCE_POWERSHELL_CMDLET = 9;
	static const int32 SCE_POWERSHELL_ALIAS = 10;
	static const int32 CARET_CENTER = 0x02;
	static const int32 CARET_XEVEN = 0x08;
	static const int32 CARET_XJUMPS = 0x10;
	static const int32 SCN_CHECKBRACE = 2007;
	static const int32 SCLEX_ASP = 29;
	static const int32 SCLEX_PHP = 30;
};

#endif