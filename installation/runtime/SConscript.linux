#!/usr/bin/env python

import os.path as p, os 
import glob, distutils.dir_util as dir_util
Import('vars')
Import(vars)

kboot = p.join(build.dir, 'kboot')
app_dir = p.join(build.dir, 'titanium-sdk-'+version)
runtime = p.join(app_dir, 'runtime');
modules_dir = p.join(app_dir, 'modules');
jsfiles = p.join(build.titanium_source_dir, 'installation', 'common', 'js')

if p.isdir(app_dir): dir_util.remove_tree(app_dir)
build.utils.CopyToDir(build.dir + '/runtime', app_dir)
build.utils.CopyToDir(build.dir + '/modules', app_dir)
build.utils.Touch(p.join(app_dir, '.installed')) # prevent appinstaller run
build.utils.Copy(kboot, p.join(app_dir, name))

to_copy = ['Resources', 'tiapp.xml', 'manifest', 'install']
for item in to_copy:
	build.utils.CopyToDir(item, app_dir)

jstarget = p.join(app_dir, 'Resources', 'js')
build.utils.CopyTree(jsfiles, jstarget)

# Copy developer application
developer = p.join(build.titanium_source_dir, "installation", "developer")
build.utils.CopyToDir(developer, app_dir)
jstarget = p.join(app_dir, 'developer', 'Resources', 'js')
build.utils.CopyTree(jsfiles, jstarget)

# copy the app installer application
appinstaller = p.join(build.titanium_source_dir, "installation", "app_installer")
build.utils.CopyToDir(developer, app_dir)
jstarget = p.join(app_dir, 'appinstaller', 'Resources', 'js')
build.utils.CopyTree(jsfiles, jstarget)

# copy the package installer application
installer_dir = p.join(app_dir, 'installer');
net_installer = p.join(build.dir, 'net_installer', 'net_installer')
build.utils.CopyToDir(developer, installer_dir)

tgzfile = app_dir + '.tgz'
binfile = app_dir + '.bin'
build.utils.TarGz(app_dir, tgzfile)
build.env.KConcat(binfile, ['linux/self_extracting.sh', tgzfile])
