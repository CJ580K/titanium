#!/usr/bin/env python
import os, os.path as p, distutils.dir_util as dir_util

Import('build')

Env = build.env.Clone()
Env.Append(FRAMEWORKS=['Cocoa','SystemConfiguration','IOKit'])
Env.Append(CPPPATH=[build.kroll_source_dir+'/api'])

sources = Glob('*.m') + Glob('*.mm')
sources.append(p.join(build.kroll_source_dir,'api','file_utils.cpp'))

# We want to build this directly into the SDK dist directory to avoid copying
# In the end we want something that looks like this inside of build.sdk_build_dir
#	installer/Installer App.app/Contents/MacOS/Installer App
#	installer/Installer App.app/Contents/Resources/English.lproj/MainMenu.nib
#	installer/Installer App.app/Contents/Resources/English.lproj/titanium.icns
#	installer/Installer App.app/Contents/Info.plist
#	see installation/distribution_guide.txt
contents = p.join(build.sdk_build_dir, 'Contents', 'installer', 'Installer App.app', 'Contents')
inst = Env.Program(p.join(contents, 'MacOS', 'Installer App'), sources)
build.require(inst)

c = build.utils.CopyToDir(Glob('*.plist'), contents)
build.require(c)

resources_out = p.join(contents, 'Resources', 'English.lproj')
if not p.isdir(resources_out):
	os.makedirs(resources_out)

build.utils.CopyToDir(p.join(build.titanium_support_dir, 'titanium.icns'), resources_out)
for f in Glob('English.lproj/*.xib'):
	f = str(f)
	out = p.join(resources_out, p.splitext(p.basename(f))[0] + '.nib')
	Env.AddPostAction(inst, 'ibtool --errors --warnings --notices --output-format human-readable-text --compile "%s" "%s"' % (out, f))

