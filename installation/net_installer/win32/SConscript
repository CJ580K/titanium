#!/usr/bin/env python
import os.path as path

Import('build')

Env = build.env.Clone()
Env.Append(LIBS=['wininet', 'urlmon', 'comdlg32', 'ole32', 'kernel32', 'user32', 'shell32', 'advapi32', 'gdi32'])
build.add_thirdparty(Env, 'poco')

Env.Append(CPPPATH=['C:\\Program Files\\Microsoft Visual Studio 8\\VC\\atlmfc\\include'])
Env.Append(CCFLAGS=['/MT'])

sources = Glob("newprogress/*.cpp")
rc = Env.RES("newprogress/progress.rc")
sources += rc
p = Env.Program(build.dir + '/net_installer/Installer.exe', sources)

#csbuilder = Builder(action = 'devenv $SOURCE /rebuild Release')

#Env = build.env.Clone(BUILDERS = {'CSProgram': csbuilder})
#Env.Append(CPPPATH=[build.kroll_source_dir+'/api'])

#p = Env.CSProgram('Installer.exe', 'newprogress.sln')
#out_dir = path.join(build.dir, 'net_installer')
#Env.AddPostAction(p, Copy(out_dir + '/Installer.exe', build.titanium_source_dir+'/installation/net_installer/win32/bin/Release/newprogress.exe'))

common_controls_manifest = path.join(build.titanium_source_dir, 'installation', 'net_installer', 'win32', 'common_controls.manifest')
Env.AddPostAction(p, 'mt.exe -nologo -manifest "'+common_controls_manifest+'" -outputresource:"' + build.dir + '\\net_installer\\Installer.exe;1"')