#!/usr/bin/env python
import os, inspect, os.path as path, shutil
import distutils.dir_util as dirutil

Import('build')

env = build.env.Clone();
env.Append(CPPDEFINES = ('TITANIUM_GROWL_API_EXPORT', 1))
env.Append(CPPPATH = ['#kroll'])

if build.is_osx():
	build.add_thirdparty(env, 'poco', True)
else:
	build.add_thirdparty(env, 'poco')

sources = Glob('*.cpp')

if build.is_osx():
	env.Append(FRAMEWORKPATH = [build.third_party+'/growl'])
	env.Append(CPPPATH = [build.third_party+'/growl/Growl.framework/Headers', build.third_party +'/poco/headers'])
	env.Append(FRAMEWORKS = ['Cocoa', 'Growl'])
	env.Append(LIBS = ['kroll','dl'])
	sources += Glob(build.os + '/*.mm')
	sources += Glob('%s/*.cpp' % build.os)

elif build.is_win32():
	env.Append(LIBS = ['user32', 'shell32', 'advapi32'])
	sources += Glob('%s/*.cpp' % build.os)

elif build.is_linux():
	sources += Glob('libnotify/*.cpp')
	env.ParseConfig('pkg-config --cflags --libs libnotify')

m = build.add_module('ti.Growl')
s = env.SharedLibrary(target = m.build_dir + '/tigrowlmodule', source=sources)
s = env.SharedLibrary(target = build.dir + '/tigrowlmodule', source=sources)
