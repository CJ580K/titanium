#!/usr/bin/env python
import os
Import('build')


env = build.env.Clone();
env.Append(CPPDEFINES = ('TITANIUM_APP_API_EXPORT', 1))
env.Append(CPPPATH = ['#kroll'])

if build.is_osx():
	build.add_thirdparty(env, 'poco', True)
	env.Append(LIBS=['kroll'])
#	env.AppendENVPath('PKG_CONFIG_PATH', '/usr/lib/pkgconfig')
else:
	build.add_thirdparty(env, 'poco')

if build.is_win32():
	env.Append(CPPPATH = ['#kroll/thirdparty/win32/libxml/include', '#kroll/thirdparty/win32/icu/include'])
	env.Append(LIBPATH = ['#kroll/thirdparty/win32/webkit/lib'])
	env.Append(LIBS=['libxml2', 'pthreadVC2'])
else:
	env.Append(ENV = {'PATH' : os.environ['PATH']})
	if os.environ.has_key('PKG_CONFIG_PATH'):
		env.AppendENVPath('PKG_CONFIG_PATH', os.environ['PKG_CONFIG_PATH'])
	if build.is_osx():
        	env.ParseConfig('echo -I/usr/include/libxml2  -L/usr/lib -lxml2 -lpthread -lm')
	else:
		env.ParseConfig('pkg-config --cflags --libs libxml-2.0')


m = build.add_module('tiapp', '0.1')
s = env.SharedLibrary(target = m.build_dir + '/tiappmodule', source = Glob('*.cpp') + Glob('Properties/*.cpp'))
s = env.SharedLibrary(target = build.dir + '/tiappmodule', source = Glob('*.cpp') + Glob('Properties/*.cpp'))

