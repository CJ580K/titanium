#!/usr/bin/env python
import os, os.path as path

Import('tiBuild')
Import('build')

env = tiBuild.env.Clone()
env.Append(LIBPATH=[path.join(tiBuild.absdir, 'modules', 'ti.App')])
env.Append(LIBS=['kroll', 'tiappmodule','javascriptmodule'])
env.Append(CPPPATH = ['#kroll/build/include','#kroll/modules/javascript'])

sources = Glob('*.cpp')
webkit_tp = path.join(build.third_party, 'webkit')
webkit_lib = path.join(webkit_tp, 'lib')
webkit_inc = path.join(webkit_tp, 'include')

if tiBuild.is_linux():
	sources = sources + Glob('linux/*.cpp')
	env.Append(LIBS=['webkit-1.0'])
	env.Append(LIBPATH=[webkit_lib])
	env.Append(CPPPATH=[webkit_inc])
	env.ParseConfig('pkg-config --cflags --libs gtk+-2.0 gdk-2.0')

elif tiBuild.is_win32():
	sources = sources + Glob('win32/*.cpp') + Glob('win32/*.cc') + Glob('url/*.cpp')
	sources += Glob('binding/kjs*.cpp')
	env.Append(LIBPATH=[webkit_lib])
	env.Append(CPPPATH=[webkit_inc, path.join(webkit_inc, 'webkit'), path.join(webkit_inc, 'JavaScriptCore'), path.join(tiBuild.third_party, 'icu', 'include'), '#kroll'])
	env.Append(LIBS=['WebKitGUID','WebKit','kernel32','shell32','user32','ole32','comctl32','shlwapi', 'oleaut32', 'icuuc','pthreadVC2','libcurl_imp','khost'])
	#env.Append(CCFLAGS=['/MD'])
	env.Append(LINKFLAGS=['/NODEFAULTLIB:LIBCMT.lib', '/LTCG', '/INCREMENTAL:NO'])

elif tiBuild.is_osx():
	env.Append(FRAMEWORKPATH=[webkit_tp])
	env.Append(FRAMEWORKS=['Cocoa','WebKit','JavaScriptCore'])
	sources = sources + Glob('osx/*.mm') + Glob('osx/*.cpp')
	env.Append(CCFLAGS=['-x', 'objective-c++'])
	
s = env.SharedLibrary(target = tiBuild.dir + '/tiwindowmodule',
                        source = sources)

if tiBuild.is_osx():
	for i in Glob('osx/*.xib'):
		base = path.splitext(path.basename(str(i)))[0]
		env.AddPostAction(s, 'ibtool --errors --warnings --notices --output-format human-readable-text --compile '+tiBuild.absdir + '/'+ base+'.nib '+str(i))

if tiBuild.is_win32():
	manifest1 = os.path.join(tiBuild.absdir, 'tiwindowmodule.embed.manifest')
	manifest2 = os.path.join(tiBuild.absdir, 'tiwindowmodule.dll.manifest')
	env.AddPostAction(s, 'mt.exe /nologo /manifest ' + manifest2 + ' /tlb:' + path.join(webkit_lib, 'WebKit.tlb') + ' /dll:bin/WebKit /out:'+manifest1)
	#env.AddPostAction(s, 'mt.exe /nologo /tlb:' + path.join(win32_webkit, 'lib', 'WebKit.tlb') + ' /dll:WebKit /outputresource:'+tiBuild.absdir+'/tikernel.exe;1')
	env.AddPostAction(s, 'mt.exe -nologo -manifest "'+manifest1+'" -outputresource:'+tiBuild.absdir+'/kkernel.exe;1')
	#env.AddPostAction(s, 'mt.exe -nologo -manifest "'+manifest1+'" -outputresource:'+tiBuild.absdir+'/windowingplugin.dll;2')
